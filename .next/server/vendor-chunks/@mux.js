"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mux";
exports.ids = ["vendor-chunks/@mux"];
exports.modules = {

/***/ "(ssr)/./node_modules/@mux/mux-player-react/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@mux/mux-player-react/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaxResolution: () => (/* reexport safe */ _mux_playback_core__WEBPACK_IMPORTED_MODULE_1__.MaxResolution),\n/* harmony export */   MediaError: () => (/* reexport safe */ _mux_mux_player__WEBPACK_IMPORTED_MODULE_2__.MediaError),\n/* harmony export */   MinResolution: () => (/* reexport safe */ _mux_playback_core__WEBPACK_IMPORTED_MODULE_1__.MinResolution),\n/* harmony export */   RenditionOrder: () => (/* reexport safe */ _mux_playback_core__WEBPACK_IMPORTED_MODULE_1__.RenditionOrder),\n/* harmony export */   \"default\": () => (/* binding */ He),\n/* harmony export */   generatePlayerInitTime: () => (/* reexport safe */ _mux_playback_core__WEBPACK_IMPORTED_MODULE_1__.generatePlayerInitTime),\n/* harmony export */   playerSoftwareName: () => (/* binding */ Pe),\n/* harmony export */   playerSoftwareVersion: () => (/* binding */ Me)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _mux_playback_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mux/playback-core */ \"(ssr)/./node_modules/@mux/playback-core/dist/index.mjs\");\n/* harmony import */ var _mux_mux_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mux/mux-player */ \"(ssr)/./node_modules/@mux/mux-player/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ MaxResolution,MediaError,MinResolution,RenditionOrder,default,generatePlayerInitTime,playerSoftwareName,playerSoftwareVersion auto */ \n\n\n\nvar m = parseInt(react__WEBPACK_IMPORTED_MODULE_0__.version) >= 19, p = {\n    className: \"class\",\n    classname: \"class\",\n    htmlFor: \"for\",\n    crossOrigin: \"crossorigin\",\n    viewBox: \"viewBox\",\n    playsInline: \"playsinline\",\n    autoPlay: \"autoplay\",\n    playbackRate: \"playbackrate\"\n}, X = (e)=>e == null, B = (e, n)=>X(n) ? !1 : e in n, ee = (e)=>e.replace(/[A-Z]/g, (n)=>`-${n.toLowerCase()}`), ne = (e, n)=>{\n    if (!(!m && typeof n == \"boolean\" && !n)) {\n        if (B(e, p)) return p[e];\n        if (typeof n != \"undefined\") return /[A-Z]/.test(e) ? ee(e) : e;\n    }\n};\nvar te = (e, n)=>!m && typeof e == \"boolean\" ? \"\" : e, E = (e = {})=>Object.entries(e).reduce((n, [t, o])=>{\n        let r = ne(t, o);\n        if (!r) return n;\n        let i = te(o, t);\n        return n[r] = i, n;\n    }, {});\n\n\nvar g = (...e)=>{\n    let n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        e.forEach((t)=>{\n            t && (typeof t == \"function\" ? t(n.current) : t.current = n.current);\n        });\n    }, [\n        e\n    ]), n;\n};\n\nvar ie = Object.prototype.hasOwnProperty, se = (e, n)=>{\n    if (Object.is(e, n)) return !0;\n    if (typeof e != \"object\" || e === null || typeof n != \"object\" || n === null) return !1;\n    if (Array.isArray(e)) return !Array.isArray(n) || e.length !== n.length ? !1 : e.some((r, i)=>n[i] === r);\n    let t = Object.keys(e), o = Object.keys(n);\n    if (t.length !== o.length) return !1;\n    for(let r = 0; r < t.length; r++)if (!ie.call(n, t[r]) || !Object.is(e[t[r]], n[t[r]])) return !1;\n    return !0;\n}, c = (e, n, t)=>!se(n, e[t]), le = (e, n, t)=>{\n    e[t] = n;\n}, ue = (e, n, t, o = le, r = c)=>(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let i = t == null ? void 0 : t.current;\n        i && r(i, n, e) && o(i, n, e);\n    }, [\n        t == null ? void 0 : t.current,\n        n\n    ]), s = ue;\nvar ye = ()=>{\n    try {\n        return \"3.4.0\";\n    } catch  {}\n    return \"UNKNOWN\";\n}, de = ye(), f = ()=>de;\nvar ge = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ children: e, ...n }, t)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mux-player\", E({\n        ...n,\n        ref: t\n    }), e)), a = (e, n, t)=>(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let o = n == null ? void 0 : n.current;\n        if (!(!o || !t)) return o.addEventListener(e, t), ()=>{\n            o.removeEventListener(e, t);\n        };\n    }, [\n        n == null ? void 0 : n.current,\n        t\n    ]), fe = (e, n)=>{\n    let { onAbort: t, onCanPlay: o, onCanPlayThrough: r, onEmptied: i, onLoadStart: y, onLoadedData: M, onLoadedMetadata: P, onProgress: b, onDurationChange: v, onVolumeChange: x, onRateChange: T, onResize: h, onWaiting: R, onPlay: C, onPlaying: k, onTimeUpdate: L, onPause: S, onSeeking: O, onSeeked: G, onStalled: w, onSuspend: V, onEnded: I, onError: A, onCuePointChange: N, onCuePointsChange: D, onChapterChange: _, metadata: K, tokens: H, paused: U, playbackId: j, playbackRates: W, currentTime: z, themeProps: F, extraSourceParams: Z, castCustomData: q, _hlsConfig: J, ...Y } = n;\n    return s(\"playbackRates\", W, e), s(\"metadata\", K, e), s(\"extraSourceParams\", Z, e), s(\"_hlsConfig\", J, e), s(\"themeProps\", F, e), s(\"tokens\", H, e), s(\"playbackId\", j, e), s(\"castCustomData\", q, e), s(\"paused\", U, e, (l, u)=>{\n        u != null && (u ? l.pause() : l.play());\n    }, (l, u, $)=>l.hasAttribute(\"autoplay\") && !l.hasPlayed ? !1 : c(l, u, $)), s(\"currentTime\", z, e, (l, u)=>{\n        u != null && (l.currentTime = u);\n    }), a(\"abort\", e, t), a(\"canplay\", e, o), a(\"canplaythrough\", e, r), a(\"emptied\", e, i), a(\"loadstart\", e, y), a(\"loadeddata\", e, M), a(\"loadedmetadata\", e, P), a(\"progress\", e, b), a(\"durationchange\", e, v), a(\"volumechange\", e, x), a(\"ratechange\", e, T), a(\"resize\", e, h), a(\"waiting\", e, R), a(\"play\", e, C), a(\"playing\", e, k), a(\"timeupdate\", e, L), a(\"pause\", e, S), a(\"seeking\", e, O), a(\"seeked\", e, G), a(\"stalled\", e, w), a(\"suspend\", e, V), a(\"ended\", e, I), a(\"error\", e, A), a(\"cuepointchange\", e, N), a(\"cuepointschange\", e, D), a(\"chapterchange\", e, _), [\n        Y\n    ];\n}, Me = f(), Pe = \"mux-player-react\", be = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, n)=>{\n    var y;\n    let t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), o = g(t, n), [r] = fe(t, e), [i] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((y = e.playerInitTime) != null ? y : (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_1__.generatePlayerInitTime)());\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ge, {\n        ref: o,\n        defaultHiddenCaptions: e.defaultHiddenCaptions,\n        playerSoftwareName: Pe,\n        playerSoftwareVersion: Me,\n        playerInitTime: i,\n        ...r\n    });\n}), He = be;\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mux/mux-player-react/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mux/mux-player/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@mux/mux-player/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MediaError: () => (/* reexport safe */ _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.MediaError),\n/* harmony export */   \"default\": () => (/* binding */ Ci),\n/* harmony export */   generatePlayerInitTime: () => (/* reexport safe */ _mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.generatePlayerInitTime),\n/* harmony export */   getVideoAttribute: () => (/* binding */ V),\n/* harmony export */   playerSoftwareName: () => (/* binding */ Rt),\n/* harmony export */   playerSoftwareVersion: () => (/* binding */ _t)\n/* harmony export */ });\n/* harmony import */ var media_chrome__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! media-chrome */ \"(ssr)/./node_modules/media-chrome/dist/index.js\");\n/* harmony import */ var media_chrome_dist_media_container_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! media-chrome/dist/media-container.js */ \"(ssr)/./node_modules/media-chrome/dist/media-container.js\");\n/* harmony import */ var media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! media-chrome/dist/constants.js */ \"(ssr)/./node_modules/media-chrome/dist/constants.js\");\n/* harmony import */ var media_chrome_dist_experimental_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! media-chrome/dist/experimental/index.js */ \"(ssr)/./node_modules/media-chrome/dist/experimental/index.js\");\n/* harmony import */ var _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mux/mux-video */ \"(ssr)/./node_modules/@mux/mux-video/dist/index.mjs\");\n/* harmony import */ var _mux_playback_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mux/playback-core */ \"(ssr)/./node_modules/@mux/playback-core/dist/index.mjs\");\n/* harmony import */ var media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! media-chrome/dist/media-theme-element.js */ \"(ssr)/./node_modules/media-chrome/dist/media-theme-element.js\");\n/* harmony import */ var media_chrome_dist_menu__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! media-chrome/dist/menu */ \"(ssr)/./node_modules/media-chrome/dist/menu/index.js\");\nvar qe=t=>{throw TypeError(t)};var ge=(t,a,e)=>a.has(t)||qe(\"Cannot \"+e);var u=(t,a,e)=>(ge(t,a,\"read from private field\"),e?e.call(t):a.get(t)),T=(t,a,e)=>a.has(t)?qe(\"Cannot add the same private member more than once\"):a instanceof WeakSet?a.add(t):a.set(t,e),k=(t,a,e,i)=>(ge(t,a,\"write to private field\"),i?i.call(t,e):a.set(t,e),e),b=(t,a,e)=>(ge(t,a,\"access private method\"),e);var $=class{addEventListener(){}removeEventListener(){}dispatchEvent(a){return!0}};if(typeof DocumentFragment==\"undefined\"){class t extends ${}globalThis.DocumentFragment=t}var G=class extends ${},fe=class extends ${},Pt={get(t){},define(t,a,e){},getName(t){return null},upgrade(t){},whenDefined(t){return Promise.resolve(G)}},j,ye=class{constructor(a,e={}){T(this,j);k(this,j,e==null?void 0:e.detail)}get detail(){return u(this,j)}initCustomEvent(){}};j=new WeakMap;function Dt(t,a){return new G}var Qe={document:{createElement:Dt},DocumentFragment,customElements:Pt,CustomEvent:ye,EventTarget:$,HTMLElement:G,HTMLVideoElement:fe},Je=typeof window==\"undefined\"||typeof globalThis.customElements==\"undefined\",f=Je?Qe:globalThis,Y=Je?Qe.document:globalThis.document;function et(t){let a=\"\";return Object.entries(t).forEach(([e,i])=>{i!=null&&(a+=`${ne(e)}: ${i}; `)}),a?a.trim():void 0}function ne(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()}function se(t){return t.replace(/[-_]([a-z])/g,(a,e)=>e.toUpperCase())}function v(t){if(t==null)return;let a=+t;return Number.isNaN(a)?void 0:a}function ve(t){let a=Vt(t).toString();return a?\"?\"+a:\"\"}function Vt(t){let a={};for(let e in t)t[e]!=null&&(a[e]=t[e]);return new URLSearchParams(a)}var Ee=(t,a)=>!t||!a?!1:t.contains(a)?!0:Ee(t,a.getRootNode().host);var at=\"mux.com\",Ut=()=>{try{return\"3.4.0\"}catch{}return\"UNKNOWN\"},Kt=Ut(),le=()=>Kt,it=(t,{token:a,customDomain:e=at,thumbnailTime:i,programTime:r}={})=>{var l;let n=a==null?i:void 0,{aud:d}=(l=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.parseJwt)(a))!=null?l:{};if(!(a&&d!==\"t\"))return`https://image.${e}/${t}/thumbnail.webp${ve({token:a,time:n,program_time:r})}`},rt=(t,{token:a,customDomain:e=at,programStartTime:i,programEndTime:r}={})=>{var d;let{aud:n}=(d=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.parseJwt)(a))!=null?d:{};if(!(a&&n!==\"s\"))return`https://image.${e}/${t}/storyboard.vtt${ve({token:a,format:\"webp\",program_start_time:i,program_end_time:r})}`},z=t=>{if(t){if([_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.LIVE,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.ON_DEMAND].includes(t))return t;if(t!=null&&t.includes(\"live\"))return _mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.LIVE}};var Ht={crossorigin:\"crossOrigin\",playsinline:\"playsInline\"};function ot(t){var a;return(a=Ht[t])!=null?a:se(t)}var I,P,E,de=class{constructor(a,e){T(this,I);T(this,P);T(this,E,[]);k(this,I,a),k(this,P,e)}[Symbol.iterator](){return u(this,E).values()}get length(){return u(this,E).length}get value(){var a;return(a=u(this,E).join(\" \"))!=null?a:\"\"}set value(a){var e;a!==this.value&&(k(this,E,[]),this.add(...(e=a==null?void 0:a.split(\" \"))!=null?e:[]))}toString(){return this.value}item(a){return u(this,E)[a]}values(){return u(this,E).values()}keys(){return u(this,E).keys()}forEach(a){u(this,E).forEach(a)}add(...a){var e,i;a.forEach(r=>{this.contains(r)||u(this,E).push(r)}),!(this.value===\"\"&&!((e=u(this,I))!=null&&e.hasAttribute(`${u(this,P)}`)))&&((i=u(this,I))==null||i.setAttribute(`${u(this,P)}`,`${this.value}`))}remove(...a){var e;a.forEach(i=>{u(this,E).splice(u(this,E).indexOf(i),1)}),(e=u(this,I))==null||e.setAttribute(`${u(this,P)}`,`${this.value}`)}contains(a){return u(this,E).includes(a)}toggle(a,e){return typeof e!=\"undefined\"?e?(this.add(a),!0):(this.remove(a),!1):this.contains(a)?(this.remove(a),!1):(this.add(a),!0)}replace(a,e){this.remove(a),this.add(e)}};I=new WeakMap,P=new WeakMap,E=new WeakMap;var nt=`[mux-player ${le()}]`;function O(...t){console.warn(nt,...t)}function A(...t){console.error(nt,...t)}function Ae(t){var e;let a=(e=t.message)!=null?e:\"\";t.context&&(a+=` ${t.context}`),t.file&&(a+=` ${(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Read more: \")}\nhttps://github.com/muxinc/elements/blob/main/errors/${t.file}`),O(a)}var y={AUTOPLAY:\"autoplay\",CROSSORIGIN:\"crossorigin\",LOOP:\"loop\",MUTED:\"muted\",PLAYSINLINE:\"playsinline\",PRELOAD:\"preload\"},D={VOLUME:\"volume\",PLAYBACKRATE:\"playbackrate\",MUTED:\"muted\"},dt=Object.freeze({length:0,start(t){let a=t>>>0;if(a>=this.length)throw new DOMException(`Failed to execute 'start' on 'TimeRanges': The index provided (${a}) is greater than or equal to the maximum bound (${this.length}).`);return 0},end(t){let a=t>>>0;if(a>=this.length)throw new DOMException(`Failed to execute 'end' on 'TimeRanges': The index provided (${a}) is greater than or equal to the maximum bound (${this.length}).`);return 0}}),Yt=_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.VideoEvents.filter(t=>t!==\"error\"),Ft=Object.values(y).filter(t=>![y.PLAYSINLINE].includes(t)),Wt=Object.values(D),Ce=class extends f.HTMLElement{static get observedAttributes(){return[...Ft,...Wt]}constructor(){super()}init(){Yt.forEach(a=>{var e;(e=this.media)==null||e.addEventListener(a,i=>{this.dispatchEvent(new Event(i.type))})})}attributeChangedCallback(a,e,i){var r,n;switch(a){case D.MUTED:{this.media&&(this.media.muted=i!=null,this.media.defaultMuted=i!=null);return}case D.VOLUME:{let d=(r=v(i))!=null?r:1;this.media&&(this.media.volume=d);return}case D.PLAYBACKRATE:{let d=(n=v(i))!=null?n:1;this.media&&(this.media.playbackRate=d,this.media.defaultPlaybackRate=d);return}}}play(){var a,e;return(e=(a=this.media)==null?void 0:a.play())!=null?e:Promise.reject()}pause(){var a;(a=this.media)==null||a.pause()}load(){var a;(a=this.media)==null||a.load()}requestCast(a){var e;return(e=this.media)==null?void 0:e.requestCast(a)}get media(){var a;return(a=this.shadowRoot)==null?void 0:a.querySelector(\"mux-video\")}get audioTracks(){return this.media.audioTracks}get videoTracks(){return this.media.videoTracks}get audioRenditions(){return this.media.audioRenditions}get videoRenditions(){return this.media.videoRenditions}get paused(){var a,e;return(e=(a=this.media)==null?void 0:a.paused)!=null?e:!0}get duration(){var a,e;return(e=(a=this.media)==null?void 0:a.duration)!=null?e:NaN}get ended(){var a,e;return(e=(a=this.media)==null?void 0:a.ended)!=null?e:!1}get buffered(){var a,e;return(e=(a=this.media)==null?void 0:a.buffered)!=null?e:dt}get seekable(){var a,e;return(e=(a=this.media)==null?void 0:a.seekable)!=null?e:dt}get readyState(){var a,e;return(e=(a=this.media)==null?void 0:a.readyState)!=null?e:0}get videoWidth(){var a,e;return(e=(a=this.media)==null?void 0:a.videoWidth)!=null?e:0}get videoHeight(){var a,e;return(e=(a=this.media)==null?void 0:a.videoHeight)!=null?e:0}get currentSrc(){var a,e;return(e=(a=this.media)==null?void 0:a.currentSrc)!=null?e:\"\"}get currentTime(){var a,e;return(e=(a=this.media)==null?void 0:a.currentTime)!=null?e:0}set currentTime(a){this.media&&(this.media.currentTime=Number(a))}get volume(){var a,e;return(e=(a=this.media)==null?void 0:a.volume)!=null?e:1}set volume(a){this.media&&(this.media.volume=Number(a))}get playbackRate(){var a,e;return(e=(a=this.media)==null?void 0:a.playbackRate)!=null?e:1}set playbackRate(a){this.media&&(this.media.playbackRate=Number(a))}get defaultPlaybackRate(){var a;return(a=v(this.getAttribute(D.PLAYBACKRATE)))!=null?a:1}set defaultPlaybackRate(a){a!=null?this.setAttribute(D.PLAYBACKRATE,`${a}`):this.removeAttribute(D.PLAYBACKRATE)}get crossOrigin(){return X(this,y.CROSSORIGIN)}set crossOrigin(a){this.setAttribute(y.CROSSORIGIN,`${a}`)}get autoplay(){return X(this,y.AUTOPLAY)!=null}set autoplay(a){a?this.setAttribute(y.AUTOPLAY,typeof a==\"string\"?a:\"\"):this.removeAttribute(y.AUTOPLAY)}get loop(){return X(this,y.LOOP)!=null}set loop(a){a?this.setAttribute(y.LOOP,\"\"):this.removeAttribute(y.LOOP)}get muted(){var a,e;return(e=(a=this.media)==null?void 0:a.muted)!=null?e:!1}set muted(a){this.media&&(this.media.muted=!!a)}get defaultMuted(){return X(this,y.MUTED)!=null}set defaultMuted(a){a?this.setAttribute(y.MUTED,\"\"):this.removeAttribute(y.MUTED)}get playsInline(){return X(this,y.PLAYSINLINE)!=null}set playsInline(a){A(\"playsInline is set to true by default and is not currently supported as a setter.\")}get preload(){return this.media?this.media.preload:this.getAttribute(\"preload\")}set preload(a){[\"\",\"none\",\"metadata\",\"auto\"].includes(a)?this.setAttribute(y.PRELOAD,a):this.removeAttribute(y.PRELOAD)}};function X(t,a){return t.media?t.media.getAttribute(a):t.getAttribute(a)}var ke=Ce;var lt=`:host {\n  --media-control-display: var(--controls);\n  --media-loading-indicator-display: var(--loading-indicator);\n  --media-dialog-display: var(--dialog);\n  --media-play-button-display: var(--play-button);\n  --media-live-button-display: var(--live-button);\n  --media-seek-backward-button-display: var(--seek-backward-button);\n  --media-seek-forward-button-display: var(--seek-forward-button);\n  --media-mute-button-display: var(--mute-button);\n  --media-captions-button-display: var(--captions-button);\n  --media-captions-menu-button-display: var(--captions-menu-button, var(--media-captions-button-display));\n  --media-rendition-menu-button-display: var(--rendition-menu-button);\n  --media-audio-track-menu-button-display: var(--audio-track-menu-button);\n  --media-airplay-button-display: var(--airplay-button);\n  --media-pip-button-display: var(--pip-button);\n  --media-fullscreen-button-display: var(--fullscreen-button);\n  --media-cast-button-display: var(--cast-button, var(--_cast-button-drm-display));\n  --media-playback-rate-button-display: var(--playback-rate-button);\n  --media-playback-rate-menu-button-display: var(--playback-rate-menu-button);\n  --media-volume-range-display: var(--volume-range);\n  --media-time-range-display: var(--time-range);\n  --media-time-display-display: var(--time-display);\n  --media-duration-display-display: var(--duration-display);\n  --media-title-display-display: var(--title-display);\n\n  display: inline-block;\n  line-height: 0;\n  width: 100%;\n}\n\na {\n  color: #fff;\n  font-size: 0.9em;\n  text-decoration: underline;\n}\n\nmedia-theme {\n  display: inline-block;\n  line-height: 0;\n  width: 100%;\n  height: 100%;\n  direction: ltr;\n}\n\nmedia-poster-image {\n  display: inline-block;\n  line-height: 0;\n  width: 100%;\n  height: 100%;\n}\n\nmedia-poster-image:not([src]):not([placeholdersrc]) {\n  display: none;\n}\n\n::part(top),\n[part~='top'] {\n  --media-control-display: var(--controls, var(--top-controls));\n  --media-play-button-display: var(--play-button, var(--top-play-button));\n  --media-live-button-display: var(--live-button, var(--top-live-button));\n  --media-seek-backward-button-display: var(--seek-backward-button, var(--top-seek-backward-button));\n  --media-seek-forward-button-display: var(--seek-forward-button, var(--top-seek-forward-button));\n  --media-mute-button-display: var(--mute-button, var(--top-mute-button));\n  --media-captions-button-display: var(--captions-button, var(--top-captions-button));\n  --media-captions-menu-button-display: var(\n    --captions-menu-button,\n    var(--media-captions-button-display, var(--top-captions-menu-button))\n  );\n  --media-rendition-menu-button-display: var(--rendition-menu-button, var(--top-rendition-menu-button));\n  --media-audio-track-menu-button-display: var(--audio-track-menu-button, var(--top-audio-track-menu-button));\n  --media-airplay-button-display: var(--airplay-button, var(--top-airplay-button));\n  --media-pip-button-display: var(--pip-button, var(--top-pip-button));\n  --media-fullscreen-button-display: var(--fullscreen-button, var(--top-fullscreen-button));\n  --media-cast-button-display: var(--cast-button, var(--top-cast-button, var(--_cast-button-drm-display)));\n  --media-playback-rate-button-display: var(--playback-rate-button, var(--top-playback-rate-button));\n  --media-playback-rate-menu-button-display: var(\n    --captions-menu-button,\n    var(--media-playback-rate-button-display, var(--top-playback-rate-menu-button))\n  );\n  --media-volume-range-display: var(--volume-range, var(--top-volume-range));\n  --media-time-range-display: var(--time-range, var(--top-time-range));\n  --media-time-display-display: var(--time-display, var(--top-time-display));\n  --media-duration-display-display: var(--duration-display, var(--top-duration-display));\n  --media-title-display-display: var(--title-display, var(--top-title-display));\n}\n\n::part(center),\n[part~='center'] {\n  --media-control-display: var(--controls, var(--center-controls));\n  --media-play-button-display: var(--play-button, var(--center-play-button));\n  --media-live-button-display: var(--live-button, var(--center-live-button));\n  --media-seek-backward-button-display: var(--seek-backward-button, var(--center-seek-backward-button));\n  --media-seek-forward-button-display: var(--seek-forward-button, var(--center-seek-forward-button));\n  --media-mute-button-display: var(--mute-button, var(--center-mute-button));\n  --media-captions-button-display: var(--captions-button, var(--center-captions-button));\n  --media-captions-menu-button-display: var(\n    --captions-menu-button,\n    var(--media-captions-button-display, var(--center-captions-menu-button))\n  );\n  --media-rendition-menu-button-display: var(--rendition-menu-button, var(--center-rendition-menu-button));\n  --media-audio-track-menu-button-display: var(--audio-track-menu-button, var(--center-audio-track-menu-button));\n  --media-airplay-button-display: var(--airplay-button, var(--center-airplay-button));\n  --media-pip-button-display: var(--pip-button, var(--center-pip-button));\n  --media-fullscreen-button-display: var(--fullscreen-button, var(--center-fullscreen-button));\n  --media-cast-button-display: var(--cast-button, var(--center-cast-button, var(--_cast-button-drm-display)));\n  --media-playback-rate-button-display: var(--playback-rate-button, var(--center-playback-rate-button));\n  --media-playback-rate-menu-button-display: var(\n    --playback-rate-menu-button,\n    var(--media-playback-rate-button-display, var(--center-playback-rate-menu-button))\n  );\n  --media-volume-range-display: var(--volume-range, var(--center-volume-range));\n  --media-time-range-display: var(--time-range, var(--center-time-range));\n  --media-time-display-display: var(--time-display, var(--center-time-display));\n  --media-duration-display-display: var(--duration-display, var(--center-duration-display));\n}\n\n::part(bottom),\n[part~='bottom'] {\n  --media-control-display: var(--controls, var(--bottom-controls));\n  --media-play-button-display: var(--play-button, var(--bottom-play-button));\n  --media-live-button-display: var(--live-button, var(--bottom-live-button));\n  --media-seek-backward-button-display: var(--seek-backward-button, var(--bottom-seek-backward-button));\n  --media-seek-forward-button-display: var(--seek-forward-button, var(--bottom-seek-forward-button));\n  --media-mute-button-display: var(--mute-button, var(--bottom-mute-button));\n  --media-captions-button-display: var(--captions-button, var(--bottom-captions-button));\n  --media-captions-menu-button-display: var(\n    --captions-menu-button,\n    var(--media-captions-button-display, var(--bottom-captions-menu-button))\n  );\n  --media-rendition-menu-button-display: var(--rendition-menu-button, var(--bottom-rendition-menu-button));\n  --media-audio-track-menu-button-display: var(--audio-track-menu-button, var(--bottom-audio-track-menu-button));\n  --media-airplay-button-display: var(--airplay-button, var(--bottom-airplay-button));\n  --media-pip-button-display: var(--pip-button, var(--bottom-pip-button));\n  --media-fullscreen-button-display: var(--fullscreen-button, var(--bottom-fullscreen-button));\n  --media-cast-button-display: var(--cast-button, var(--bottom-cast-button, var(--_cast-button-drm-display)));\n  --media-playback-rate-button-display: var(--playback-rate-button, var(--bottom-playback-rate-button));\n  --media-playback-rate-menu-button-display: var(\n    --playback-rate-menu-button,\n    var(--media-playback-rate-button-display, var(--bottom-playback-rate-menu-button))\n  );\n  --media-volume-range-display: var(--volume-range, var(--bottom-volume-range));\n  --media-time-range-display: var(--time-range, var(--bottom-time-range));\n  --media-time-display-display: var(--time-display, var(--bottom-time-display));\n  --media-duration-display-display: var(--duration-display, var(--bottom-duration-display));\n  --media-title-display-display: var(--title-display, var(--bottom-title-display));\n}\n\n:host([no-tooltips]) {\n  --media-tooltip-display: none;\n}\n`;var q=new WeakMap,_e=class t{constructor(a,e){this.element=a;this.type=e;this.element.addEventListener(this.type,this);let i=q.get(this.element);i&&i.set(this.type,this)}set(a){if(typeof a==\"function\")this.handleEvent=a.bind(this.element);else if(typeof a==\"object\"&&typeof a.handleEvent==\"function\")this.handleEvent=a.handleEvent.bind(a);else{this.element.removeEventListener(this.type,this);let e=q.get(this.element);e&&e.delete(this.type)}}static for(a){q.has(a.element)||q.set(a.element,new Map);let e=a.attributeName.slice(2),i=q.get(a.element);return i&&i.has(e)?i.get(e):new t(a.element,e)}};function jt(t,a){return t instanceof media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.AttrPart&&t.attributeName.startsWith(\"on\")?(_e.for(t).set(a),t.element.removeAttributeNS(t.attributeNamespace,t.attributeName),!0):!1}function zt(t,a){return a instanceof ue&&t instanceof media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.ChildNodePart?(a.renderInto(t),!0):!1}function Xt(t,a){return a instanceof DocumentFragment&&t instanceof media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.ChildNodePart?(a.childNodes.length&&t.replace(...a.childNodes),!0):!1}function qt(t,a){if(t instanceof media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.AttrPart){let e=t.attributeNamespace,i=t.element.getAttributeNS(e,t.attributeName);return String(a)!==i&&(t.value=String(a)),!0}return t.value=String(a),!0}function Qt(t,a){if(t instanceof media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.AttrPart&&a instanceof Element){let e=t.element;return e[t.attributeName]!==a&&(t.element.removeAttributeNS(t.attributeNamespace,t.attributeName),e[t.attributeName]=a),!0}return!1}function Jt(t,a){if(typeof a==\"boolean\"&&t instanceof media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.AttrPart){let e=t.attributeNamespace,i=t.element.hasAttributeNS(e,t.attributeName);return a!==i&&(t.booleanValue=a),!0}return!1}function ea(t,a){return a===!1&&t instanceof media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.ChildNodePart?(t.replace(\"\"),!0):!1}function ta(t,a){Qt(t,a)||Jt(t,a)||jt(t,a)||ea(t,a)||zt(t,a)||Xt(t,a)||qt(t,a)}var xe=new Map,ut=new WeakMap,mt=new WeakMap,ue=class{constructor(a,e,i){this.strings=a;this.values=e;this.processor=i;this.stringsKey=this.strings.join(\"\u0001\")}get template(){if(xe.has(this.stringsKey))return xe.get(this.stringsKey);{let a=Y.createElement(\"template\"),e=this.strings.length-1;return a.innerHTML=this.strings.reduce((i,r,n)=>i+r+(n<e?`{{ ${n} }}`:\"\"),\"\"),xe.set(this.stringsKey,a),a}}renderInto(a){var r;let e=this.template;if(ut.get(a)!==e){ut.set(a,e);let n=new media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.TemplateInstance(e,this.values,this.processor);mt.set(a,n),a instanceof media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.ChildNodePart?a.replace(...n.children):a.appendChild(n);return}let i=mt.get(a);(r=i==null?void 0:i.update)==null||r.call(i,this.values)}},aa={processCallback(t,a,e){var i;if(e){for(let[r,n]of a)if(r in e){let d=(i=e[r])!=null?i:\"\";ta(n,d)}}}};function Q(t,...a){return new ue(t,a,aa)}function ct(t,a){t.renderInto(a)}var ra=t=>{let{tokens:a}=t;return a.drm?\":host { --_cast-button-drm-display: none; }\":\"\"},bt=t=>Q`\n  <style>\n    ${ra(t)}\n    ${lt}\n  </style>\n  ${da(t)}\n`,oa=t=>{let a=t.hotKeys?`${t.hotKeys}`:\"\";return z(t.streamType)===\"live\"&&(a+=\" noarrowleft noarrowright\"),a},na={TOP:\"top\",CENTER:\"center\",BOTTOM:\"bottom\",LAYER:\"layer\",MEDIA_LAYER:\"media-layer\",POSTER_LAYER:\"poster-layer\",VERTICAL_LAYER:\"vertical-layer\",CENTERED_LAYER:\"centered-layer\",GESTURE_LAYER:\"gesture-layer\",CONTROLLER_LAYER:\"controller\",BUTTON:\"button\",RANGE:\"range\",DISPLAY:\"display\",CONTROL_BAR:\"control-bar\",MENU_BUTTON:\"menu-button\",MENU:\"menu\",OPTION:\"option\",POSTER:\"poster\",LIVE:\"live\",PLAY:\"play\",PRE_PLAY:\"pre-play\",SEEK_BACKWARD:\"seek-backward\",SEEK_FORWARD:\"seek-forward\",MUTE:\"mute\",CAPTIONS:\"captions\",AIRPLAY:\"airplay\",PIP:\"pip\",FULLSCREEN:\"fullscreen\",CAST:\"cast\",PLAYBACK_RATE:\"playback-rate\",VOLUME:\"volume\",TIME:\"time\",TITLE:\"title\",AUDIO_TRACK:\"audio-track\",RENDITION:\"rendition\"},sa=Object.values(na).join(\", \"),da=t=>{var a,e,i,r,n,d,l,p,_,F,x,C,R,B,h,oe,W,Z,Ie,Pe,De,Ve,Ue,Ke,He,Be,$e,Ye,Fe,We,Ze,Ge,je,ze,Xe;return Q`\n  <media-theme\n    template=\"${t.themeTemplate||!1}\"\n    defaultstreamtype=\"${(a=t.defaultStreamType)!=null?a:!1}\"\n    hotkeys=\"${oa(t)||!1}\"\n    nohotkeys=\"${t.noHotKeys||!t.hasSrc||!1}\"\n    noautoseektolive=\"${!!((e=t.streamType)!=null&&e.includes(_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.LIVE))&&t.targetLiveWindow!==0}\"\n    novolumepref=\"${t.novolumepref||!1}\"\n    disabled=\"${!t.hasSrc||t.isDialogOpen}\"\n    audio=\"${(i=t.audio)!=null?i:!1}\"\n    style=\"${(r=et({\"--media-primary-color\":t.primaryColor,\"--media-secondary-color\":t.secondaryColor,\"--media-accent-color\":t.accentColor}))!=null?r:!1}\"\n    defaultsubtitles=\"${!t.defaultHiddenCaptions}\"\n    forwardseekoffset=\"${(n=t.forwardSeekOffset)!=null?n:!1}\"\n    backwardseekoffset=\"${(d=t.backwardSeekOffset)!=null?d:!1}\"\n    playbackrates=\"${(l=t.playbackRates)!=null?l:!1}\"\n    defaultshowremainingtime=\"${(p=t.defaultShowRemainingTime)!=null?p:!1}\"\n    defaultduration=\"${(_=t.defaultDuration)!=null?_:!1}\"\n    hideduration=\"${(F=t.hideDuration)!=null?F:!1}\"\n    title=\"${(x=t.title)!=null?x:!1}\"\n    videotitle=\"${(C=t.videoTitle)!=null?C:!1}\"\n    proudlydisplaymuxbadge=\"${(R=t.proudlyDisplayMuxBadge)!=null?R:!1}\"\n    exportparts=\"${sa}\"\n    onclose=\"${t.onCloseErrorDialog}\"\n    onfocusin=\"${t.onFocusInErrorDialog}\"\n  >\n    <mux-video\n      slot=\"media\"\n      target-live-window=\"${(B=t.targetLiveWindow)!=null?B:!1}\"\n      stream-type=\"${(h=z(t.streamType))!=null?h:!1}\"\n      crossorigin=\"${(oe=t.crossOrigin)!=null?oe:\"\"}\"\n      playsinline\n      autoplay=\"${(W=t.autoplay)!=null?W:!1}\"\n      muted=\"${(Z=t.muted)!=null?Z:!1}\"\n      loop=\"${(Ie=t.loop)!=null?Ie:!1}\"\n      preload=\"${(Pe=t.preload)!=null?Pe:!1}\"\n      debug=\"${(De=t.debug)!=null?De:!1}\"\n      prefer-cmcd=\"${(Ve=t.preferCmcd)!=null?Ve:!1}\"\n      disable-tracking=\"${(Ue=t.disableTracking)!=null?Ue:!1}\"\n      disable-cookies=\"${(Ke=t.disableCookies)!=null?Ke:!1}\"\n      prefer-playback=\"${(He=t.preferPlayback)!=null?He:!1}\"\n      start-time=\"${t.startTime!=null?t.startTime:!1}\"\n      beacon-collection-domain=\"${(Be=t.beaconCollectionDomain)!=null?Be:!1}\"\n      player-init-time=\"${($e=t.playerInitTime)!=null?$e:!1}\"\n      player-software-name=\"${(Ye=t.playerSoftwareName)!=null?Ye:!1}\"\n      player-software-version=\"${(Fe=t.playerSoftwareVersion)!=null?Fe:!1}\"\n      env-key=\"${(We=t.envKey)!=null?We:!1}\"\n      custom-domain=\"${(Ze=t.customDomain)!=null?Ze:!1}\"\n      src=\"${t.src?t.src:t.playbackId?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.toMuxVideoURL)(t):!1}\"\n      cast-src=\"${t.src?t.src:t.playbackId?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.toMuxVideoURL)(t):!1}\"\n      cast-receiver=\"${(Ge=t.castReceiver)!=null?Ge:!1}\"\n      drm-token=\"${(ze=(je=t.tokens)==null?void 0:je.drm)!=null?ze:!1}\"\n      exportparts=\"video\"\n    >\n      ${t.storyboard?Q`<track label=\"thumbnails\" default kind=\"metadata\" src=\"${t.storyboard}\" />`:Q``}\n      <slot></slot>\n    </mux-video>\n    <slot name=\"poster\" slot=\"poster\">\n      <media-poster-image\n        part=\"poster\"\n        exportparts=\"poster, img\"\n        src=\"${t.poster?t.poster:!1}\"\n        placeholdersrc=\"${(Xe=t.placeholder)!=null?Xe:!1}\"\n      ></media-poster-image>\n    </slot>\n  </media-theme>\n`};var ft=t=>t.charAt(0).toUpperCase()+t.slice(1),la=(t,a=!1)=>{var e,i;if(t.muxCode){let r=ft((e=t.errorCategory)!=null?e:\"video\"),n=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.errorCategoryToTokenNameOrPrefix)((i=t.errorCategory)!=null?i:_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCategory.VIDEO);if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_OFFLINE)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Your device appears to be offline\",a);if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_EXPIRED)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"{category} URL has expired\",a).format({category:r});if([_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_SUB_MISMATCH,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_AUD_MISMATCH,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_AUD_MISSING,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_MALFORMED].includes(t.muxCode))return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"{category} URL is formatted incorrectly\",a).format({category:r});if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_MISSING)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Invalid {categoryName} URL\",a).format({categoryName:n});if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_NOT_FOUND)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"{category} does not exist\",a).format({category:r});if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_NOT_READY)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"{category} is not currently available\",a).format({category:r})}if(t.code){if(t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_NETWORK)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Network Error\",a);if(t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_DECODE)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Media Error\",a);if(t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Source Not Supported\",a)}return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Error\",a)},ua=(t,a=!1)=>{var e,i;if(t.muxCode){let r=ft((e=t.errorCategory)!=null?e:\"video\"),n=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.errorCategoryToTokenNameOrPrefix)((i=t.errorCategory)!=null?i:_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCategory.VIDEO);return t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_OFFLINE?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Check your internet connection and try reloading this video.\",a):t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_EXPIRED?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The video\\u2019s secured {tokenNamePrefix}-token has expired.\",a).format({tokenNamePrefix:n}):t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_SUB_MISMATCH?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The video\\u2019s playback ID does not match the one encoded in the {tokenNamePrefix}-token.\",a).format({tokenNamePrefix:n}):t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_MALFORMED?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"{category} URL is formatted incorrectly\",a).format({category:r}):[_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_AUD_MISMATCH,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_AUD_MISSING].includes(t.muxCode)?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The {tokenNamePrefix}-token is formatted with incorrect information.\",a).format({tokenNamePrefix:n}):[_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_MISSING,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_INVALID_URL].includes(t.muxCode)?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The video URL or {tokenNamePrefix}-token are formatted with incorrect or incomplete information.\",a).format({tokenNamePrefix:n}):t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_NOT_FOUND?\"\":t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_NOT_READY?(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The live stream or video file are not yet ready.\",a):t.message}return t.code&&(t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_NETWORK||t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_DECODE||t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED),t.message},yt=(t,a=!1)=>{let e=la(t,a).toString(),i=ua(t,a).toString();return{title:e,message:i}},ma=t=>{if(t.muxCode){if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_EXPIRED)return\"403-expired-token.md\";if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_MALFORMED)return\"403-malformatted-token.md\";if([_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_AUD_MISMATCH,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_AUD_MISSING].includes(t.muxCode))return\"403-incorrect-aud-value.md\";if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_SUB_MISMATCH)return\"403-playback-id-mismatch.md\";if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_TOKEN_MISSING)return\"missing-signed-tokens.md\";if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_NOT_FOUND)return\"404-not-found.md\";if(t.muxCode===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxErrorCode.NETWORK_NOT_READY)return\"412-not-playable.md\"}if(t.code){if(t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_NETWORK)return\"\";if(t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_DECODE)return\"media-decode-error.md\";if(t.code===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED)return\"media-src-not-supported.md\"}return\"\"},Re=(t,a)=>{let e=ma(t);return{message:t.message,context:t.context,file:e}};var vt=`<template id=\"media-theme-gerwig\">\n  <style>\n    @keyframes pre-play-hide {\n      0% {\n        transform: scale(1);\n        opacity: 1;\n      }\n\n      30% {\n        transform: scale(0.7);\n      }\n\n      100% {\n        transform: scale(1.5);\n        opacity: 0;\n      }\n    }\n\n    :host {\n      --_primary-color: var(--media-primary-color, #fff);\n      --_secondary-color: var(--media-secondary-color, transparent);\n      --_accent-color: var(--media-accent-color, #fa50b5);\n      --_text-color: var(--media-text-color, #000);\n\n      --media-icon-color: var(--_primary-color);\n      --media-control-background: var(--_secondary-color);\n      --media-control-hover-background: var(--_accent-color);\n      --media-time-buffered-color: rgba(255, 255, 255, 0.4);\n      --media-preview-time-text-shadow: none;\n      --media-control-height: 14px;\n      --media-control-padding: 6px;\n      --media-tooltip-container-margin: 6px;\n      --media-tooltip-distance: 18px;\n\n      color: var(--_primary-color);\n      display: inline-block;\n      width: 100%;\n      height: 100%;\n    }\n\n    :host([audio]) {\n      --_secondary-color: var(--media-secondary-color, black);\n      --media-preview-time-text-shadow: none;\n    }\n\n    :host([audio]) ::slotted([slot='media']) {\n      height: 0px;\n    }\n\n    :host([audio]) media-loading-indicator {\n      display: none;\n    }\n\n    :host([audio]) media-controller {\n      background: transparent;\n    }\n\n    :host([audio]) media-controller::part(vertical-layer) {\n      background: transparent;\n    }\n\n    :host([audio]) media-control-bar {\n      width: 100%;\n      background-color: var(--media-control-background);\n    }\n\n    /*\n     * 0.433s is the transition duration for VTT Regions.\n     * Borrowed here, so the captions don't move too fast.\n     */\n    media-controller {\n      --media-webkit-text-track-transform: translateY(0) scale(0.98);\n      --media-webkit-text-track-transition: transform 0.433s ease-out 0.3s;\n    }\n    media-controller:is([mediapaused], :not([userinactive])) {\n      --media-webkit-text-track-transform: translateY(-50px) scale(0.98);\n      --media-webkit-text-track-transition: transform 0.15s ease;\n    }\n\n    /*\n     * CSS specific to iOS devices.\n     * See: https://stackoverflow.com/questions/30102792/css-media-query-to-target-only-ios-devices/60220757#60220757\n     */\n    @supports (-webkit-touch-callout: none) {\n      /* Disable subtitle adjusting for iOS Safari */\n      media-controller[mediaisfullscreen] {\n        --media-webkit-text-track-transform: unset;\n        --media-webkit-text-track-transition: unset;\n      }\n    }\n\n    media-time-range {\n      --media-box-padding-left: 6px;\n      --media-box-padding-right: 6px;\n      --media-range-bar-color: var(--_accent-color);\n      --media-time-range-buffered-color: var(--_primary-color);\n      --media-range-track-color: transparent;\n      --media-range-track-background: rgba(255, 255, 255, 0.4);\n      --media-range-thumb-background: radial-gradient(\n        circle,\n        #000 0%,\n        #000 25%,\n        var(--_accent-color) 25%,\n        var(--_accent-color)\n      );\n      --media-range-thumb-width: 12px;\n      --media-range-thumb-height: 12px;\n      --media-range-thumb-transform: scale(0);\n      --media-range-thumb-transition: transform 0.3s;\n      --media-range-thumb-opacity: 1;\n      --media-preview-background: var(--_primary-color);\n      --media-box-arrow-background: var(--_primary-color);\n      --media-preview-thumbnail-border: 5px solid var(--_primary-color);\n      --media-preview-border-radius: 5px;\n      --media-text-color: var(--_text-color);\n      --media-control-hover-background: transparent;\n      --media-preview-chapter-text-shadow: none;\n      color: var(--_accent-color);\n      padding: 0 6px;\n    }\n\n    :host([audio]) media-time-range {\n      --media-preview-time-padding: 1.5px 6px;\n      --media-preview-box-margin: 0 0 -5px;\n    }\n\n    media-time-range:hover {\n      --media-range-thumb-transform: scale(1);\n    }\n\n    media-preview-thumbnail {\n      border-bottom-width: 0;\n    }\n\n    [part~='menu'] {\n      border-radius: 2px;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      bottom: 50px;\n      padding: 2.5px 10px;\n    }\n\n    [part~='menu']::part(indicator) {\n      fill: var(--_accent-color);\n    }\n\n    [part~='menu']::part(menu-item) {\n      box-sizing: border-box;\n      display: flex;\n      align-items: center;\n      padding: 6px 10px;\n      min-height: 34px;\n    }\n\n    [part~='menu']::part(checked) {\n      font-weight: 700;\n    }\n\n    media-captions-menu,\n    media-rendition-menu,\n    media-audio-track-menu,\n    media-playback-rate-menu {\n      position: absolute; /* ensure they don't take up space in DOM on load */\n      --media-menu-background: var(--_primary-color);\n      --media-menu-item-checked-background: transparent;\n      --media-text-color: var(--_text-color);\n      --media-menu-item-hover-background: transparent;\n      --media-menu-item-hover-outline: var(--_accent-color) solid 1px;\n    }\n\n    /* The icon is a circle so make it 16px high instead of 14px for more balance. */\n    media-audio-track-menu-button {\n      --media-control-padding: 5px;\n      --media-control-height: 16px;\n    }\n\n    media-playback-rate-menu-button {\n      --media-control-padding: 6px 3px;\n      min-width: 4.4ch;\n    }\n\n    media-playback-rate-menu {\n      --media-menu-flex-direction: row;\n      --media-menu-item-checked-background: var(--_accent-color);\n      --media-menu-item-checked-indicator-display: none;\n      margin-right: 6px;\n      padding: 0;\n      --media-menu-gap: 0.25em;\n    }\n\n    media-playback-rate-menu[part~='menu']::part(menu-item) {\n      padding: 6px 6px 6px 8px;\n    }\n\n    media-playback-rate-menu[part~='menu']::part(checked) {\n      color: #fff;\n    }\n\n    :host(:not([audio])) media-time-range {\n      /* Adding px is required here for calc() */\n      --media-range-padding: 0px;\n      background: transparent;\n      z-index: 10;\n      height: 10px;\n      bottom: -3px;\n      width: 100%;\n    }\n\n    media-control-bar :is([role='button'], [role='switch'], button) {\n      line-height: 0;\n    }\n\n    media-control-bar :is([part*='button'], [part*='range'], [part*='display']) {\n      border-radius: 3px;\n    }\n\n    .spacer {\n      flex-grow: 1;\n      background-color: var(--media-control-background, rgba(20, 20, 30, 0.7));\n    }\n\n    media-control-bar[slot~='top-chrome'] {\n      min-height: 42px;\n      pointer-events: none;\n    }\n\n    media-control-bar {\n      --gradient-steps:\n        hsl(0 0% 0% / 0) 0%, hsl(0 0% 0% / 0.013) 8.1%, hsl(0 0% 0% / 0.049) 15.5%, hsl(0 0% 0% / 0.104) 22.5%,\n        hsl(0 0% 0% / 0.175) 29%, hsl(0 0% 0% / 0.259) 35.3%, hsl(0 0% 0% / 0.352) 41.2%, hsl(0 0% 0% / 0.45) 47.1%,\n        hsl(0 0% 0% / 0.55) 52.9%, hsl(0 0% 0% / 0.648) 58.8%, hsl(0 0% 0% / 0.741) 64.7%, hsl(0 0% 0% / 0.825) 71%,\n        hsl(0 0% 0% / 0.896) 77.5%, hsl(0 0% 0% / 0.951) 84.5%, hsl(0 0% 0% / 0.987) 91.9%, hsl(0 0% 0%) 100%;\n    }\n\n    :host([title]:not([audio])) media-control-bar[slot='top-chrome']::before {\n      content: '';\n      position: absolute;\n      width: 100%;\n      padding-bottom: min(100px, 25%);\n      background: linear-gradient(to top, var(--gradient-steps));\n      opacity: 0.8;\n      pointer-events: none;\n    }\n\n    :host(:not([audio])) media-control-bar[part~='bottom']::before {\n      content: '';\n      position: absolute;\n      width: 100%;\n      bottom: 0;\n      left: 0;\n      padding-bottom: min(100px, 25%);\n      background: linear-gradient(to bottom, var(--gradient-steps));\n      opacity: 0.8;\n      z-index: 1;\n      pointer-events: none;\n    }\n\n    media-control-bar[part~='bottom'] > * {\n      z-index: 20;\n    }\n\n    media-control-bar[part~='bottom'] {\n      padding: 6px 6px;\n    }\n\n    media-control-bar[slot~='top-chrome'] > * {\n      --media-control-background: transparent;\n      --media-control-hover-background: transparent;\n      position: relative;\n    }\n\n    media-controller::part(vertical-layer) {\n      transition: background-color 1s;\n    }\n\n    media-controller:is([mediapaused], :not([userinactive]))::part(vertical-layer) {\n      background-color: var(--controls-backdrop-color, var(--controls, transparent));\n      transition: background-color 0.25s;\n    }\n\n    .center-controls {\n      --media-button-icon-width: 100%;\n      --media-button-icon-height: auto;\n      --media-tooltip-display: none;\n      pointer-events: none;\n      width: 100%;\n      display: flex;\n      flex-flow: row;\n      align-items: center;\n      justify-content: center;\n      filter: drop-shadow(0 0 2px rgb(0 0 0 / 0.25)) drop-shadow(0 0 6px rgb(0 0 0 / 0.25));\n      paint-order: stroke;\n      stroke: rgba(102, 102, 102, 1);\n      stroke-width: 0.3px;\n      text-shadow:\n        0 0 2px rgb(0 0 0 / 0.25),\n        0 0 6px rgb(0 0 0 / 0.25);\n    }\n\n    .center-controls media-play-button {\n      --media-control-background: transparent;\n      --media-control-hover-background: transparent;\n      --media-control-padding: 0;\n      width: 40px;\n    }\n\n    [breakpointsm] .center-controls media-play-button {\n      width: 90px;\n      height: 90px;\n      border-radius: 50%;\n      transition: background 0.4s;\n      padding: 24px;\n      --media-control-background: #000;\n      --media-control-hover-background: var(--_accent-color);\n    }\n\n    .center-controls media-seek-backward-button,\n    .center-controls media-seek-forward-button {\n      --media-control-background: transparent;\n      --media-control-hover-background: transparent;\n      padding: 0;\n      margin: 0 20px;\n      width: max(33px, min(8%, 40px));\n    }\n\n    [breakpointsm]:not([audio]) .center-controls.pre-playback {\n      display: grid;\n      align-items: initial;\n      justify-content: initial;\n      height: 100%;\n      overflow: hidden;\n    }\n\n    [breakpointsm]:not([audio]) .center-controls.pre-playback media-play-button {\n      place-self: var(--_pre-playback-place, center);\n      grid-area: 1 / 1;\n      margin: 16px;\n    }\n\n    /* Show and hide controls or pre-playback state */\n\n    [breakpointsm]:is([mediahasplayed], :not([mediapaused])):not([audio])\n      .center-controls.pre-playback\n      media-play-button {\n      /* Using \\`forwards\\` would lead to a laggy UI after the animation got in the end state */\n      animation: 0.3s linear pre-play-hide;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .autoplay-unmute {\n      --media-control-hover-background: transparent;\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      filter: drop-shadow(0 0 2px rgb(0 0 0 / 0.25)) drop-shadow(0 0 6px rgb(0 0 0 / 0.25));\n    }\n\n    .autoplay-unmute-btn {\n      --media-control-height: 16px;\n      border-radius: 8px;\n      background: #000;\n      color: var(--_primary-color);\n      display: flex;\n      align-items: center;\n      padding: 8px 16px;\n      font-size: 18px;\n      font-weight: 500;\n      cursor: pointer;\n    }\n\n    .autoplay-unmute-btn:hover {\n      background: var(--_accent-color);\n    }\n\n    [breakpointsm] .autoplay-unmute-btn {\n      --media-control-height: 30px;\n      padding: 14px 24px;\n      font-size: 26px;\n    }\n\n    .autoplay-unmute-btn svg {\n      margin: 0 6px 0 0;\n    }\n\n    [breakpointsm] .autoplay-unmute-btn svg {\n      margin: 0 10px 0 0;\n    }\n\n    media-controller:not([audio]):not([mediahasplayed]) *:is(media-control-bar, media-time-range) {\n      display: none;\n    }\n\n    media-error-dialog:not([mediaerrorcode]) {\n      opacity: 0;\n    }\n\n    media-loading-indicator {\n      --media-loading-icon-width: 100%;\n      --media-button-icon-height: auto;\n      display: var(--media-control-display, var(--media-loading-indicator-display, flex));\n      pointer-events: none;\n      position: absolute;\n      width: min(15%, 150px);\n      flex-flow: row;\n      align-items: center;\n      justify-content: center;\n    }\n\n    /* Intentionally don't target the div for transition but the children\n     of the div. Prevents messing with media-chrome's autohide feature. */\n    media-loading-indicator + div * {\n      transition: opacity 0.15s;\n      opacity: 1;\n    }\n\n    media-loading-indicator[medialoading]:not([mediapaused]) ~ div > * {\n      opacity: 0;\n      transition-delay: 400ms;\n    }\n\n    media-volume-range {\n      width: min(100%, 100px);\n      --media-range-padding-left: 10px;\n      --media-range-padding-right: 10px;\n      --media-range-thumb-width: 12px;\n      --media-range-thumb-height: 12px;\n      --media-range-thumb-background: radial-gradient(\n        circle,\n        #000 0%,\n        #000 25%,\n        var(--_primary-color) 25%,\n        var(--_primary-color)\n      );\n      --media-control-hover-background: none;\n    }\n\n    media-time-display {\n      white-space: nowrap;\n    }\n\n    /* Generic style for explicitly disabled controls */\n    media-control-bar[part~='bottom'] [disabled],\n    media-control-bar[part~='bottom'] [aria-disabled='true'] {\n      opacity: 60%;\n      cursor: not-allowed;\n    }\n\n    media-text-display {\n      --media-font-size: 16px;\n      --media-control-padding: 14px;\n      font-weight: 500;\n    }\n\n    media-play-button.animated *:is(g, path) {\n      transition: all 0.3s;\n    }\n\n    media-play-button.animated[mediapaused] .pause-icon-pt1 {\n      opacity: 0;\n    }\n\n    media-play-button.animated[mediapaused] .pause-icon-pt2 {\n      transform-origin: center center;\n      transform: scaleY(0);\n    }\n\n    media-play-button.animated[mediapaused] .play-icon {\n      clip-path: inset(0 0 0 0);\n    }\n\n    media-play-button.animated:not([mediapaused]) .play-icon {\n      clip-path: inset(0 0 0 100%);\n    }\n\n    media-seek-forward-button,\n    media-seek-backward-button {\n      --media-font-weight: 400;\n    }\n\n    .mute-icon {\n      display: inline-block;\n    }\n\n    .mute-icon :is(path, g) {\n      transition: opacity 0.5s;\n    }\n\n    .muted {\n      opacity: 0;\n    }\n\n    media-mute-button[mediavolumelevel='low'] :is(.volume-medium, .volume-high),\n    media-mute-button[mediavolumelevel='medium'] :is(.volume-high) {\n      opacity: 0;\n    }\n\n    media-mute-button[mediavolumelevel='off'] .unmuted {\n      opacity: 0;\n    }\n\n    media-mute-button[mediavolumelevel='off'] .muted {\n      opacity: 1;\n    }\n\n    /**\n     * Our defaults for these buttons are to hide them at small sizes\n     * users can override this with CSS\n     */\n    media-controller:not([breakpointsm]):not([audio]) {\n      --bottom-play-button: none;\n      --bottom-seek-backward-button: none;\n      --bottom-seek-forward-button: none;\n      --bottom-time-display: none;\n      --bottom-playback-rate-menu-button: none;\n      --bottom-pip-button: none;\n    }\n\n    [part='mux-badge'] {\n      position: absolute;\n      bottom: 10px;\n      right: 10px;\n      z-index: 2;\n      opacity: 0.6;\n      transition:\n        opacity 0.2s ease-in-out,\n        bottom 0.2s ease-in-out;\n    }\n\n    [part='mux-badge']:hover {\n      opacity: 1;\n    }\n\n    [part='mux-badge'] a {\n      font-size: 14px;\n      font-family: var(--_font-family);\n      color: var(--_primary-color);\n      text-decoration: none;\n      display: flex;\n      align-items: center;\n      gap: 5px;\n    }\n\n    [part='mux-badge'] .mux-badge-text {\n      transition: opacity 0.5s ease-in-out;\n      opacity: 0;\n    }\n\n    [part='mux-badge'] .mux-badge-logo {\n      width: 40px;\n      height: auto;\n      display: inline-block;\n    }\n\n    [part='mux-badge'] .mux-badge-logo svg {\n      width: 100%;\n      height: 100%;\n      fill: white;\n    }\n\n    media-controller:not([userinactive]):not([mediahasplayed]) [part='mux-badge'],\n    media-controller:not([userinactive]) [part='mux-badge'],\n    media-controller[mediahasplayed][mediapaused] [part='mux-badge'] {\n      transition: bottom 0.1s ease-in-out;\n    }\n\n    media-controller[userinactive]:not([mediapaused]) [part='mux-badge'] {\n      transition: bottom 0.2s ease-in-out 0.62s;\n    }\n\n    media-controller:not([userinactive]) [part='mux-badge'] .mux-badge-text,\n    media-controller[mediahasplayed][mediapaused] [part='mux-badge'] .mux-badge-text {\n      opacity: 1;\n    }\n\n    media-controller[userinactive]:not([mediapaused]) [part='mux-badge'] .mux-badge-text {\n      opacity: 0;\n    }\n\n    media-controller[userinactive]:not([mediapaused]) [part='mux-badge'] {\n      bottom: 10px;\n    }\n\n    media-controller:not([userinactive]):not([mediahasplayed]) [part='mux-badge'] {\n      bottom: 10px;\n    }\n\n    media-controller:not([userinactive])[mediahasplayed] [part='mux-badge'],\n    media-controller[mediahasplayed][mediapaused] [part='mux-badge'] {\n      bottom: calc(28px + var(--media-control-height, 0px) + var(--media-control-padding, 0px) * 2);\n    }\n  </style>\n\n  <template partial=\"TitleDisplay\">\n    <template if=\"videotitle\">\n      <template if=\"videotitle != true\">\n        <media-text-display part=\"top title display\" class=\"title-display\">{{videotitle}}</media-text-display>\n      </template>\n    </template>\n    <template if=\"!videotitle\">\n      <template if=\"title\">\n        <media-text-display part=\"top title display\" class=\"title-display\">{{title}}</media-text-display>\n      </template>\n    </template>\n  </template>\n\n  <template partial=\"PlayButton\">\n    <media-play-button\n      part=\"{{section ?? 'bottom'}} play button\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n      class=\"animated\"\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 18 14\" slot=\"icon\">\n        <g class=\"play-icon\">\n          <path\n            d=\"M15.5987 6.2911L3.45577 0.110898C2.83667 -0.204202 2.06287 0.189698 2.06287 0.819798V13.1802C2.06287 13.8103 2.83667 14.2042 3.45577 13.8891L15.5987 7.7089C16.2178 7.3938 16.2178 6.6061 15.5987 6.2911Z\"\n          />\n        </g>\n        <g class=\"pause-icon\">\n          <path\n            class=\"pause-icon-pt1\"\n            d=\"M5.90709 0H2.96889C2.46857 0 2.06299 0.405585 2.06299 0.9059V13.0941C2.06299 13.5944 2.46857 14 2.96889 14H5.90709C6.4074 14 6.81299 13.5944 6.81299 13.0941V0.9059C6.81299 0.405585 6.4074 0 5.90709 0Z\"\n          />\n          <path\n            class=\"pause-icon-pt2\"\n            d=\"M15.1571 0H12.2189C11.7186 0 11.313 0.405585 11.313 0.9059V13.0941C11.313 13.5944 11.7186 14 12.2189 14H15.1571C15.6574 14 16.063 13.5944 16.063 13.0941V0.9059C16.063 0.405585 15.6574 0 15.1571 0Z\"\n          />\n        </g>\n      </svg>\n    </media-play-button>\n  </template>\n\n  <template partial=\"PrePlayButton\">\n    <media-play-button\n      part=\"{{section ?? 'center'}} play button pre-play\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 18 14\" slot=\"icon\" style=\"transform: translate(3px, 0)\">\n        <path\n          d=\"M15.5987 6.2911L3.45577 0.110898C2.83667 -0.204202 2.06287 0.189698 2.06287 0.819798V13.1802C2.06287 13.8103 2.83667 14.2042 3.45577 13.8891L15.5987 7.7089C16.2178 7.3938 16.2178 6.6061 15.5987 6.2911Z\"\n        />\n      </svg>\n    </media-play-button>\n  </template>\n\n  <template partial=\"SeekBackwardButton\">\n    <media-seek-backward-button\n      seekoffset=\"{{backwardseekoffset}}\"\n      part=\"{{section ?? 'bottom'}} seek-backward button\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n    >\n      <svg viewBox=\"0 0 22 14\" aria-hidden=\"true\" slot=\"icon\">\n        <path\n          d=\"M3.65 2.07888L0.0864 6.7279C-0.0288 6.87812 -0.0288 7.12188 0.0864 7.2721L3.65 11.9211C3.7792 12.0896 4 11.9703 4 11.7321V2.26787C4 2.02968 3.7792 1.9104 3.65 2.07888Z\"\n        />\n        <text transform=\"translate(6 12)\" style=\"font-size: 14px; font-family: 'ArialMT', 'Arial'\">\n          {{backwardseekoffset}}\n        </text>\n      </svg>\n    </media-seek-backward-button>\n  </template>\n\n  <template partial=\"SeekForwardButton\">\n    <media-seek-forward-button\n      seekoffset=\"{{forwardseekoffset}}\"\n      part=\"{{section ?? 'bottom'}} seek-forward button\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n    >\n      <svg viewBox=\"0 0 22 14\" aria-hidden=\"true\" slot=\"icon\">\n        <g>\n          <text transform=\"translate(-1 12)\" style=\"font-size: 14px; font-family: 'ArialMT', 'Arial'\">\n            {{forwardseekoffset}}\n          </text>\n          <path\n            d=\"M18.35 11.9211L21.9136 7.2721C22.0288 7.12188 22.0288 6.87812 21.9136 6.7279L18.35 2.07888C18.2208 1.91041 18 2.02968 18 2.26787V11.7321C18 11.9703 18.2208 12.0896 18.35 11.9211Z\"\n          />\n        </g>\n      </svg>\n    </media-seek-forward-button>\n  </template>\n\n  <template partial=\"MuteButton\">\n    <media-mute-button part=\"bottom mute button\" disabled=\"{{disabled}}\" aria-disabled=\"{{disabled}}\">\n      <svg viewBox=\"0 0 18 14\" slot=\"icon\" class=\"mute-icon\" aria-hidden=\"true\">\n        <g class=\"unmuted\">\n          <path\n            d=\"M6.76786 1.21233L3.98606 3.98924H1.19937C0.593146 3.98924 0.101743 4.51375 0.101743 5.1607V6.96412L0 6.99998L0.101743 7.03583V8.83926C0.101743 9.48633 0.593146 10.0108 1.19937 10.0108H3.98606L6.76773 12.7877C7.23561 13.2547 8 12.9007 8 12.2171V1.78301C8 1.09925 7.23574 0.745258 6.76786 1.21233Z\"\n          />\n          <path\n            class=\"volume-low\"\n            d=\"M10 3.54781C10.7452 4.55141 11.1393 5.74511 11.1393 6.99991C11.1393 8.25471 10.7453 9.44791 10 10.4515L10.7988 11.0496C11.6734 9.87201 12.1356 8.47161 12.1356 6.99991C12.1356 5.52821 11.6735 4.12731 10.7988 2.94971L10 3.54781Z\"\n          />\n          <path\n            class=\"volume-medium\"\n            d=\"M12.3778 2.40086C13.2709 3.76756 13.7428 5.35806 13.7428 7.00026C13.7428 8.64246 13.2709 10.233 12.3778 11.5992L13.2106 12.1484C14.2107 10.6185 14.739 8.83796 14.739 7.00016C14.739 5.16236 14.2107 3.38236 13.2106 1.85156L12.3778 2.40086Z\"\n          />\n          <path\n            class=\"volume-high\"\n            d=\"M15.5981 0.75L14.7478 1.2719C15.7937 2.9919 16.3468 4.9723 16.3468 7C16.3468 9.0277 15.7937 11.0082 14.7478 12.7281L15.5981 13.25C16.7398 11.3722 17.343 9.211 17.343 7C17.343 4.789 16.7398 2.6268 15.5981 0.75Z\"\n          />\n        </g>\n        <g class=\"muted\">\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M4.39976 4.98924H1.19937C1.19429 4.98924 1.17777 4.98961 1.15296 5.01609C1.1271 5.04369 1.10174 5.09245 1.10174 5.1607V8.83926C1.10174 8.90761 1.12714 8.95641 1.15299 8.984C1.17779 9.01047 1.1943 9.01084 1.19937 9.01084H4.39977L7 11.6066V2.39357L4.39976 4.98924ZM7.47434 1.92006C7.4743 1.9201 7.47439 1.92002 7.47434 1.92006V1.92006ZM6.76773 12.7877L3.98606 10.0108H1.19937C0.593146 10.0108 0.101743 9.48633 0.101743 8.83926V7.03583L0 6.99998L0.101743 6.96412V5.1607C0.101743 4.51375 0.593146 3.98924 1.19937 3.98924H3.98606L6.76786 1.21233C7.23574 0.745258 8 1.09925 8 1.78301V12.2171C8 12.9007 7.23561 13.2547 6.76773 12.7877Z\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M15.2677 9.30323C15.463 9.49849 15.7796 9.49849 15.9749 9.30323C16.1701 9.10796 16.1701 8.79138 15.9749 8.59612L14.2071 6.82841L15.9749 5.06066C16.1702 4.8654 16.1702 4.54882 15.9749 4.35355C15.7796 4.15829 15.4631 4.15829 15.2678 4.35355L13.5 6.1213L11.7322 4.35348C11.537 4.15822 11.2204 4.15822 11.0251 4.35348C10.8298 4.54874 10.8298 4.86532 11.0251 5.06058L12.7929 6.82841L11.0251 8.59619C10.8299 8.79146 10.8299 9.10804 11.0251 9.3033C11.2204 9.49856 11.537 9.49856 11.7323 9.3033L13.5 7.53552L15.2677 9.30323Z\"\n          />\n        </g>\n      </svg>\n    </media-mute-button>\n  </template>\n\n  <template partial=\"PipButton\">\n    <media-pip-button part=\"bottom pip button\" disabled=\"{{disabled}}\" aria-disabled=\"{{disabled}}\">\n      <svg viewBox=\"0 0 18 14\" aria-hidden=\"true\" slot=\"icon\">\n        <path\n          d=\"M15.9891 0H2.011C0.9004 0 0 0.9003 0 2.0109V11.989C0 13.0996 0.9004 14 2.011 14H15.9891C17.0997 14 18 13.0997 18 11.9891V2.0109C18 0.9003 17.0997 0 15.9891 0ZM17 11.9891C17 12.5465 16.5465 13 15.9891 13H2.011C1.4536 13 1.0001 12.5465 1.0001 11.9891V2.0109C1.0001 1.4535 1.4536 0.9999 2.011 0.9999H15.9891C16.5465 0.9999 17 1.4535 17 2.0109V11.9891Z\"\n        />\n        <path\n          d=\"M15.356 5.67822H8.19523C8.03253 5.67822 7.90063 5.81012 7.90063 5.97282V11.3836C7.90063 11.5463 8.03253 11.6782 8.19523 11.6782H15.356C15.5187 11.6782 15.6506 11.5463 15.6506 11.3836V5.97282C15.6506 5.81012 15.5187 5.67822 15.356 5.67822Z\"\n        />\n      </svg>\n    </media-pip-button>\n  </template>\n\n  <template partial=\"CaptionsMenu\">\n    <media-captions-menu-button part=\"bottom captions button\">\n      <svg aria-hidden=\"true\" viewBox=\"0 0 18 14\" slot=\"on\">\n        <path\n          d=\"M15.989 0H2.011C0.9004 0 0 0.9003 0 2.0109V11.9891C0 13.0997 0.9004 14 2.011 14H15.989C17.0997 14 18 13.0997 18 11.9891V2.0109C18 0.9003 17.0997 0 15.989 0ZM4.2292 8.7639C4.5954 9.1902 5.0935 9.4031 5.7233 9.4031C6.1852 9.4031 6.5544 9.301 6.8302 9.0969C7.1061 8.8933 7.2863 8.614 7.3702 8.26H8.4322C8.3062 8.884 8.0093 9.3733 7.5411 9.7273C7.0733 10.0813 6.4703 10.2581 5.732 10.2581C5.108 10.2581 4.5699 10.1219 4.1168 9.8489C3.6637 9.5759 3.3141 9.1946 3.0685 8.7058C2.8224 8.2165 2.6994 7.6511 2.6994 7.009C2.6994 6.3611 2.8224 5.7927 3.0685 5.3034C3.3141 4.8146 3.6637 4.4323 4.1168 4.1559C4.5699 3.88 5.108 3.7418 5.732 3.7418C6.4703 3.7418 7.0733 3.922 7.5411 4.2818C8.0094 4.6422 8.3062 5.1461 8.4322 5.794H7.3702C7.2862 5.4283 7.106 5.1368 6.8302 4.921C6.5544 4.7052 6.1852 4.5968 5.7233 4.5968C5.0934 4.5968 4.5954 4.8116 4.2292 5.2404C3.8635 5.6696 3.6804 6.259 3.6804 7.009C3.6804 7.7531 3.8635 8.3381 4.2292 8.7639ZM11.0974 8.7639C11.4636 9.1902 11.9617 9.4031 12.5915 9.4031C13.0534 9.4031 13.4226 9.301 13.6984 9.0969C13.9743 8.8933 14.1545 8.614 14.2384 8.26H15.3004C15.1744 8.884 14.8775 9.3733 14.4093 9.7273C13.9415 10.0813 13.3385 10.2581 12.6002 10.2581C11.9762 10.2581 11.4381 10.1219 10.985 9.8489C10.5319 9.5759 10.1823 9.1946 9.9367 8.7058C9.6906 8.2165 9.5676 7.6511 9.5676 7.009C9.5676 6.3611 9.6906 5.7927 9.9367 5.3034C10.1823 4.8146 10.5319 4.4323 10.985 4.1559C11.4381 3.88 11.9762 3.7418 12.6002 3.7418C13.3385 3.7418 13.9415 3.922 14.4093 4.2818C14.8776 4.6422 15.1744 5.1461 15.3004 5.794H14.2384C14.1544 5.4283 13.9742 5.1368 13.6984 4.921C13.4226 4.7052 13.0534 4.5968 12.5915 4.5968C11.9616 4.5968 11.4636 4.8116 11.0974 5.2404C10.7317 5.6696 10.5486 6.259 10.5486 7.009C10.5486 7.7531 10.7317 8.3381 11.0974 8.7639Z\"\n        />\n      </svg>\n      <svg aria-hidden=\"true\" viewBox=\"0 0 18 14\" slot=\"off\">\n        <path\n          d=\"M5.73219 10.258C5.10819 10.258 4.57009 10.1218 4.11699 9.8488C3.66389 9.5758 3.31429 9.1945 3.06869 8.7057C2.82259 8.2164 2.69958 7.651 2.69958 7.0089C2.69958 6.361 2.82259 5.7926 3.06869 5.3033C3.31429 4.8145 3.66389 4.4322 4.11699 4.1558C4.57009 3.8799 5.10819 3.7417 5.73219 3.7417C6.47049 3.7417 7.07348 3.9219 7.54128 4.2817C8.00958 4.6421 8.30638 5.146 8.43238 5.7939H7.37039C7.28639 5.4282 7.10618 5.1367 6.83039 4.9209C6.55459 4.7051 6.18538 4.5967 5.72348 4.5967C5.09358 4.5967 4.59559 4.8115 4.22939 5.2403C3.86369 5.6695 3.68058 6.2589 3.68058 7.0089C3.68058 7.753 3.86369 8.338 4.22939 8.7638C4.59559 9.1901 5.09368 9.403 5.72348 9.403C6.18538 9.403 6.55459 9.3009 6.83039 9.0968C7.10629 8.8932 7.28649 8.6139 7.37039 8.2599H8.43238C8.30638 8.8839 8.00948 9.3732 7.54128 9.7272C7.07348 10.0812 6.47049 10.258 5.73219 10.258Z\"\n        />\n        <path\n          d=\"M12.6003 10.258C11.9763 10.258 11.4382 10.1218 10.9851 9.8488C10.532 9.5758 10.1824 9.1945 9.93685 8.7057C9.69075 8.2164 9.56775 7.651 9.56775 7.0089C9.56775 6.361 9.69075 5.7926 9.93685 5.3033C10.1824 4.8145 10.532 4.4322 10.9851 4.1558C11.4382 3.8799 11.9763 3.7417 12.6003 3.7417C13.3386 3.7417 13.9416 3.9219 14.4094 4.2817C14.8777 4.6421 15.1745 5.146 15.3005 5.7939H14.2385C14.1545 5.4282 13.9743 5.1367 13.6985 4.9209C13.4227 4.7051 13.0535 4.5967 12.5916 4.5967C11.9617 4.5967 11.4637 4.8115 11.0975 5.2403C10.7318 5.6695 10.5487 6.2589 10.5487 7.0089C10.5487 7.753 10.7318 8.338 11.0975 8.7638C11.4637 9.1901 11.9618 9.403 12.5916 9.403C13.0535 9.403 13.4227 9.3009 13.6985 9.0968C13.9744 8.8932 14.1546 8.6139 14.2385 8.2599H15.3005C15.1745 8.8839 14.8776 9.3732 14.4094 9.7272C13.9416 10.0812 13.3386 10.258 12.6003 10.258Z\"\n        />\n        <path\n          d=\"M15.9891 1C16.5465 1 17 1.4535 17 2.011V11.9891C17 12.5465 16.5465 13 15.9891 13H2.0109C1.4535 13 1 12.5465 1 11.9891V2.0109C1 1.4535 1.4535 0.9999 2.0109 0.9999L15.9891 1ZM15.9891 0H2.0109C0.9003 0 0 0.9003 0 2.0109V11.9891C0 13.0997 0.9003 14 2.0109 14H15.9891C17.0997 14 18 13.0997 18 11.9891V2.0109C18 0.9003 17.0997 0 15.9891 0Z\"\n        />\n      </svg>\n    </media-captions-menu-button>\n    <media-captions-menu\n      hidden\n      anchor=\"auto\"\n      part=\"bottom captions menu\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n      exportparts=\"menu-item\"\n    >\n      <div slot=\"checked-indicator\">\n        <style>\n          .indicator {\n            position: relative;\n            top: 1px;\n            width: 0.9em;\n            height: auto;\n            fill: var(--_accent-color);\n            margin-right: 5px;\n          }\n\n          [aria-checked='false'] .indicator {\n            display: none;\n          }\n        </style>\n        <svg viewBox=\"0 0 14 18\" class=\"indicator\">\n          <path\n            d=\"M12.252 3.48c-.115.033-.301.161-.425.291-.059.063-1.407 1.815-2.995 3.894s-2.897 3.79-2.908 3.802c-.013.014-.661-.616-1.672-1.624-.908-.905-1.702-1.681-1.765-1.723-.401-.27-.783-.211-1.176.183a1.285 1.285 0 0 0-.261.342.582.582 0 0 0-.082.35c0 .165.01.205.08.35.075.153.213.296 2.182 2.271 1.156 1.159 2.17 2.159 2.253 2.222.189.143.338.196.539.194.203-.003.412-.104.618-.299.205-.193 6.7-8.693 6.804-8.903a.716.716 0 0 0 .085-.345c.01-.179.005-.203-.062-.339-.124-.252-.45-.531-.746-.639a.784.784 0 0 0-.469-.027\"\n            fill-rule=\"evenodd\"\n          />\n        </svg></div\n    ></media-captions-menu>\n  </template>\n\n  <template partial=\"AirplayButton\">\n    <media-airplay-button part=\"bottom airplay button\" disabled=\"{{disabled}}\" aria-disabled=\"{{disabled}}\">\n      <svg viewBox=\"0 0 18 14\" aria-hidden=\"true\" slot=\"icon\">\n        <path\n          d=\"M16.1383 0H1.8618C0.8335 0 0 0.8335 0 1.8617V10.1382C0 11.1664 0.8335 12 1.8618 12H3.076C3.1204 11.9433 3.1503 11.8785 3.2012 11.826L4.004 11H1.8618C1.3866 11 1 10.6134 1 10.1382V1.8617C1 1.3865 1.3866 0.9999 1.8618 0.9999H16.1383C16.6135 0.9999 17.0001 1.3865 17.0001 1.8617V10.1382C17.0001 10.6134 16.6135 11 16.1383 11H13.9961L14.7989 11.826C14.8499 11.8785 14.8798 11.9432 14.9241 12H16.1383C17.1665 12 18.0001 11.1664 18.0001 10.1382V1.8617C18 0.8335 17.1665 0 16.1383 0Z\"\n        />\n        <path\n          d=\"M9.55061 8.21903C9.39981 8.06383 9.20001 7.98633 9.00011 7.98633C8.80021 7.98633 8.60031 8.06383 8.44951 8.21903L4.09771 12.697C3.62471 13.1838 3.96961 13.9998 4.64831 13.9998H13.3518C14.0304 13.9998 14.3754 13.1838 13.9023 12.697L9.55061 8.21903Z\"\n        />\n      </svg>\n    </media-airplay-button>\n  </template>\n\n  <template partial=\"FullscreenButton\">\n    <media-fullscreen-button part=\"bottom fullscreen button\" disabled=\"{{disabled}}\" aria-disabled=\"{{disabled}}\">\n      <svg viewBox=\"0 0 18 14\" aria-hidden=\"true\" slot=\"enter\">\n        <path\n          d=\"M1.00745 4.39539L1.01445 1.98789C1.01605 1.43049 1.47085 0.978289 2.02835 0.979989L6.39375 0.992589L6.39665 -0.007411L2.03125 -0.020011C0.920646 -0.023211 0.0176463 0.874489 0.0144463 1.98509L0.00744629 4.39539H1.00745Z\"\n        />\n        <path\n          d=\"M17.0144 2.03431L17.0076 4.39541H18.0076L18.0144 2.03721C18.0176 0.926712 17.1199 0.0237125 16.0093 0.0205125L11.6439 0.0078125L11.641 1.00781L16.0064 1.02041C16.5638 1.02201 17.016 1.47681 17.0144 2.03431Z\"\n        />\n        <path\n          d=\"M16.9925 9.60498L16.9855 12.0124C16.9839 12.5698 16.5291 13.022 15.9717 13.0204L11.6063 13.0078L11.6034 14.0078L15.9688 14.0204C17.0794 14.0236 17.9823 13.1259 17.9855 12.0153L17.9925 9.60498H16.9925Z\"\n        />\n        <path\n          d=\"M0.985626 11.9661L0.992426 9.60498H-0.0074737L-0.0142737 11.9632C-0.0174737 13.0738 0.880226 13.9767 1.99083 13.98L6.35623 13.9926L6.35913 12.9926L1.99373 12.98C1.43633 12.9784 0.983926 12.5236 0.985626 11.9661Z\"\n        />\n      </svg>\n      <svg viewBox=\"0 0 18 14\" aria-hidden=\"true\" slot=\"exit\">\n        <path\n          d=\"M5.39655 -0.0200195L5.38955 2.38748C5.38795 2.94488 4.93315 3.39708 4.37565 3.39538L0.0103463 3.38278L0.00744629 4.38278L4.37285 4.39538C5.48345 4.39858 6.38635 3.50088 6.38965 2.39028L6.39665 -0.0200195H5.39655Z\"\n        />\n        <path\n          d=\"M12.6411 2.36891L12.6479 0.0078125H11.6479L11.6411 2.36601C11.6379 3.47651 12.5356 4.37951 13.6462 4.38271L18.0116 4.39531L18.0145 3.39531L13.6491 3.38271C13.0917 3.38111 12.6395 2.92641 12.6411 2.36891Z\"\n        />\n        <path\n          d=\"M12.6034 14.0204L12.6104 11.613C12.612 11.0556 13.0668 10.6034 13.6242 10.605L17.9896 10.6176L17.9925 9.61759L13.6271 9.60499C12.5165 9.60179 11.6136 10.4995 11.6104 11.6101L11.6034 14.0204H12.6034Z\"\n        />\n        <path\n          d=\"M5.359 11.6315L5.3522 13.9926H6.3522L6.359 11.6344C6.3622 10.5238 5.4645 9.62088 4.3539 9.61758L-0.0115043 9.60498L-0.0144043 10.605L4.351 10.6176C4.9084 10.6192 5.3607 11.074 5.359 11.6315Z\"\n        />\n      </svg>\n    </media-fullscreen-button>\n  </template>\n\n  <template partial=\"CastButton\">\n    <media-cast-button part=\"bottom cast button\" disabled=\"{{disabled}}\" aria-disabled=\"{{disabled}}\">\n      <svg viewBox=\"0 0 18 14\" aria-hidden=\"true\" slot=\"enter\">\n        <path\n          d=\"M16.0072 0H2.0291C0.9185 0 0.0181 0.9003 0.0181 2.011V5.5009C0.357 5.5016 0.6895 5.5275 1.0181 5.5669V2.011C1.0181 1.4536 1.4716 1 2.029 1H16.0072C16.5646 1 17.0181 1.4536 17.0181 2.011V11.9891C17.0181 12.5465 16.5646 13 16.0072 13H8.4358C8.4746 13.3286 8.4999 13.6611 8.4999 13.9999H16.0071C17.1177 13.9999 18.018 13.0996 18.018 11.989V2.011C18.0181 0.9003 17.1178 0 16.0072 0ZM0 6.4999V7.4999C3.584 7.4999 6.5 10.4159 6.5 13.9999H7.5C7.5 9.8642 4.1357 6.4999 0 6.4999ZM0 8.7499V9.7499C2.3433 9.7499 4.25 11.6566 4.25 13.9999H5.25C5.25 11.1049 2.895 8.7499 0 8.7499ZM0.0181 11V14H3.0181C3.0181 12.3431 1.675 11 0.0181 11Z\"\n        />\n      </svg>\n      <svg viewBox=\"0 0 18 14\" aria-hidden=\"true\" slot=\"exit\">\n        <path\n          d=\"M15.9891 0H2.01103C0.900434 0 3.35947e-05 0.9003 3.35947e-05 2.011V5.5009C0.338934 5.5016 0.671434 5.5275 1.00003 5.5669V2.011C1.00003 1.4536 1.45353 1 2.01093 1H15.9891C16.5465 1 17 1.4536 17 2.011V11.9891C17 12.5465 16.5465 13 15.9891 13H8.41773C8.45653 13.3286 8.48183 13.6611 8.48183 13.9999H15.989C17.0996 13.9999 17.9999 13.0996 17.9999 11.989V2.011C18 0.9003 17.0997 0 15.9891 0ZM-0.0180664 6.4999V7.4999C3.56593 7.4999 6.48193 10.4159 6.48193 13.9999H7.48193C7.48193 9.8642 4.11763 6.4999 -0.0180664 6.4999ZM-0.0180664 8.7499V9.7499C2.32523 9.7499 4.23193 11.6566 4.23193 13.9999H5.23193C5.23193 11.1049 2.87693 8.7499 -0.0180664 8.7499ZM3.35947e-05 11V14H3.00003C3.00003 12.3431 1.65693 11 3.35947e-05 11Z\"\n        />\n        <path d=\"M2.15002 5.634C5.18352 6.4207 7.57252 8.8151 8.35282 11.8499H15.8501V2.1499H2.15002V5.634Z\" />\n      </svg>\n    </media-cast-button>\n  </template>\n\n  <template partial=\"LiveButton\">\n    <media-live-button part=\"{{section ?? 'top'}} live button\" disabled=\"{{disabled}}\" aria-disabled=\"{{disabled}}\">\n      <span slot=\"text\">Live</span>\n    </media-live-button>\n  </template>\n\n  <template partial=\"PlaybackRateMenu\">\n    <media-playback-rate-menu-button part=\"bottom playback-rate button\"></media-playback-rate-menu-button>\n    <media-playback-rate-menu\n      hidden\n      anchor=\"auto\"\n      rates=\"{{playbackrates}}\"\n      exportparts=\"menu-item\"\n      part=\"bottom playback-rate menu\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n    ></media-playback-rate-menu>\n  </template>\n\n  <template partial=\"VolumeRange\">\n    <media-volume-range\n      part=\"bottom volume range\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n    ></media-volume-range>\n  </template>\n\n  <template partial=\"TimeDisplay\">\n    <media-time-display\n      remaining=\"{{defaultshowremainingtime}}\"\n      showduration=\"{{!hideduration}}\"\n      part=\"bottom time display\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n    ></media-time-display>\n  </template>\n\n  <template partial=\"TimeRange\">\n    <media-time-range part=\"bottom time range\" disabled=\"{{disabled}}\" aria-disabled=\"{{disabled}}\">\n      <media-preview-thumbnail slot=\"preview\"></media-preview-thumbnail>\n      <media-preview-chapter-display slot=\"preview\"></media-preview-chapter-display>\n      <media-preview-time-display slot=\"preview\"></media-preview-time-display>\n      <div slot=\"preview\" part=\"arrow\"></div>\n    </media-time-range>\n  </template>\n\n  <template partial=\"AudioTrackMenu\">\n    <media-audio-track-menu-button part=\"bottom audio-track button\">\n      <svg aria-hidden=\"true\" slot=\"icon\" viewBox=\"0 0 18 16\">\n        <path d=\"M9 15A7 7 0 1 1 9 1a7 7 0 0 1 0 14Zm0 1A8 8 0 1 0 9 0a8 8 0 0 0 0 16Z\" />\n        <path\n          d=\"M5.2 6.3a.5.5 0 0 1 .5.5v2.4a.5.5 0 1 1-1 0V6.8a.5.5 0 0 1 .5-.5Zm2.4-2.4a.5.5 0 0 1 .5.5v7.2a.5.5 0 0 1-1 0V4.4a.5.5 0 0 1 .5-.5ZM10 5.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.4-.8a.5.5 0 0 1 .5.5v5.6a.5.5 0 0 1-1 0V5.2a.5.5 0 0 1 .5-.5Z\"\n        />\n      </svg>\n    </media-audio-track-menu-button>\n    <media-audio-track-menu\n      hidden\n      anchor=\"auto\"\n      part=\"bottom audio-track menu\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n      exportparts=\"menu-item\"\n    >\n      <div slot=\"checked-indicator\">\n        <style>\n          .indicator {\n            position: relative;\n            top: 1px;\n            width: 0.9em;\n            height: auto;\n            fill: var(--_accent-color);\n            margin-right: 5px;\n          }\n\n          [aria-checked='false'] .indicator {\n            display: none;\n          }\n        </style>\n        <svg viewBox=\"0 0 14 18\" class=\"indicator\">\n          <path\n            d=\"M12.252 3.48c-.115.033-.301.161-.425.291-.059.063-1.407 1.815-2.995 3.894s-2.897 3.79-2.908 3.802c-.013.014-.661-.616-1.672-1.624-.908-.905-1.702-1.681-1.765-1.723-.401-.27-.783-.211-1.176.183a1.285 1.285 0 0 0-.261.342.582.582 0 0 0-.082.35c0 .165.01.205.08.35.075.153.213.296 2.182 2.271 1.156 1.159 2.17 2.159 2.253 2.222.189.143.338.196.539.194.203-.003.412-.104.618-.299.205-.193 6.7-8.693 6.804-8.903a.716.716 0 0 0 .085-.345c.01-.179.005-.203-.062-.339-.124-.252-.45-.531-.746-.639a.784.784 0 0 0-.469-.027\"\n            fill-rule=\"evenodd\"\n          />\n        </svg>\n      </div>\n    </media-audio-track-menu>\n  </template>\n\n  <template partial=\"RenditionMenu\">\n    <media-rendition-menu-button part=\"bottom rendition button\">\n      <svg aria-hidden=\"true\" slot=\"icon\" viewBox=\"0 0 18 14\">\n        <path\n          d=\"M2.25 9a2 2 0 1 0 0-4 2 2 0 0 0 0 4ZM9 9a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm6.75 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z\"\n        />\n      </svg>\n    </media-rendition-menu-button>\n    <media-rendition-menu\n      hidden\n      anchor=\"auto\"\n      part=\"bottom rendition menu\"\n      disabled=\"{{disabled}}\"\n      aria-disabled=\"{{disabled}}\"\n    >\n      <div slot=\"checked-indicator\">\n        <style>\n          .indicator {\n            position: relative;\n            top: 1px;\n            width: 0.9em;\n            height: auto;\n            fill: var(--_accent-color);\n            margin-right: 5px;\n          }\n\n          [aria-checked='false'] .indicator {\n            display: none;\n          }\n        </style>\n        <svg viewBox=\"0 0 14 18\" class=\"indicator\">\n          <path\n            d=\"M12.252 3.48c-.115.033-.301.161-.425.291-.059.063-1.407 1.815-2.995 3.894s-2.897 3.79-2.908 3.802c-.013.014-.661-.616-1.672-1.624-.908-.905-1.702-1.681-1.765-1.723-.401-.27-.783-.211-1.176.183a1.285 1.285 0 0 0-.261.342.582.582 0 0 0-.082.35c0 .165.01.205.08.35.075.153.213.296 2.182 2.271 1.156 1.159 2.17 2.159 2.253 2.222.189.143.338.196.539.194.203-.003.412-.104.618-.299.205-.193 6.7-8.693 6.804-8.903a.716.716 0 0 0 .085-.345c.01-.179.005-.203-.062-.339-.124-.252-.45-.531-.746-.639a.784.784 0 0 0-.469-.027\"\n            fill-rule=\"evenodd\"\n          />\n        </svg>\n      </div>\n    </media-rendition-menu>\n  </template>\n\n  <template partial=\"MuxBadge\">\n    <div part=\"mux-badge\">\n      <a href=\"https://www.mux.com/player\" target=\"_blank\">\n        <span class=\"mux-badge-text\">Powered by</span>\n        <div class=\"mux-badge-logo\">\n          <svg\n            viewBox=\"0 0 1600 500\"\n            style=\"fill-rule: evenodd; clip-rule: evenodd; stroke-linejoin: round; stroke-miterlimit: 2\"\n          >\n            <g>\n              <path\n                d=\"M994.287,93.486c-17.121,-0 -31,-13.879 -31,-31c0,-17.121 13.879,-31 31,-31c17.121,-0 31,13.879 31,31c0,17.121 -13.879,31 -31,31m0,-93.486c-34.509,-0 -62.484,27.976 -62.484,62.486l0,187.511c0,68.943 -56.09,125.033 -125.032,125.033c-68.942,-0 -125.03,-56.09 -125.03,-125.033l0,-187.511c0,-34.51 -27.976,-62.486 -62.485,-62.486c-34.509,-0 -62.484,27.976 -62.484,62.486l0,187.511c0,137.853 112.149,250.003 249.999,250.003c137.851,-0 250.001,-112.15 250.001,-250.003l0,-187.511c0,-34.51 -27.976,-62.486 -62.485,-62.486\"\n                style=\"fill-rule: nonzero\"\n              ></path>\n              <path\n                d=\"M1537.51,468.511c-17.121,-0 -31,-13.879 -31,-31c0,-17.121 13.879,-31 31,-31c17.121,-0 31,13.879 31,31c0,17.121 -13.879,31 -31,31m-275.883,-218.509l-143.33,143.329c-24.402,24.402 -24.402,63.966 0,88.368c24.402,24.402 63.967,24.402 88.369,-0l143.33,-143.329l143.328,143.329c24.402,24.4 63.967,24.402 88.369,-0c24.403,-24.402 24.403,-63.966 0.001,-88.368l-143.33,-143.329l0.001,-0.004l143.329,-143.329c24.402,-24.402 24.402,-63.965 0,-88.367c-24.402,-24.402 -63.967,-24.402 -88.369,-0l-143.329,143.328l-143.329,-143.328c-24.402,-24.401 -63.967,-24.402 -88.369,-0c-24.402,24.402 -24.402,63.965 0,88.367l143.329,143.329l0,0.004Z\"\n                style=\"fill-rule: nonzero\"\n              ></path>\n              <path\n                d=\"M437.511,468.521c-17.121,-0 -31,-13.879 -31,-31c0,-17.121 13.879,-31 31,-31c17.121,-0 31,13.879 31,31c0,17.121 -13.879,31 -31,31m23.915,-463.762c-23.348,-9.672 -50.226,-4.327 -68.096,13.544l-143.331,143.329l-143.33,-143.329c-17.871,-17.871 -44.747,-23.216 -68.096,-13.544c-23.349,9.671 -38.574,32.455 -38.574,57.729l0,375.026c0,34.51 27.977,62.486 62.487,62.486c34.51,-0 62.486,-27.976 62.486,-62.486l0,-224.173l80.843,80.844c24.404,24.402 63.965,24.402 88.369,-0l80.843,-80.844l0,224.173c0,34.51 27.976,62.486 62.486,62.486c34.51,-0 62.486,-27.976 62.486,-62.486l0,-375.026c0,-25.274 -15.224,-48.058 -38.573,-57.729\"\n                style=\"fill-rule: nonzero\"\n              ></path>\n            </g>\n          </svg>\n        </div>\n      </a>\n    </div>\n  </template>\n\n  <media-controller\n    part=\"controller\"\n    defaultstreamtype=\"{{defaultstreamtype ?? 'on-demand'}}\"\n    breakpoints=\"sm:470\"\n    gesturesdisabled=\"{{disabled}}\"\n    hotkeys=\"{{hotkeys}}\"\n    nohotkeys=\"{{nohotkeys}}\"\n    novolumepref=\"{{novolumepref}}\"\n    audio=\"{{audio}}\"\n    noautoseektolive=\"{{noautoseektolive}}\"\n    defaultsubtitles=\"{{defaultsubtitles}}\"\n    defaultduration=\"{{defaultduration ?? false}}\"\n    keyboardforwardseekoffset=\"{{forwardseekoffset}}\"\n    keyboardbackwardseekoffset=\"{{backwardseekoffset}}\"\n    exportparts=\"layer, media-layer, poster-layer, vertical-layer, centered-layer, gesture-layer\"\n    style=\"--_pre-playback-place:{{preplaybackplace ?? 'center'}}\"\n  >\n    <slot name=\"media\" slot=\"media\"></slot>\n    <slot name=\"poster\" slot=\"poster\"></slot>\n\n    <media-loading-indicator slot=\"centered-chrome\" noautohide></media-loading-indicator>\n    <media-error-dialog slot=\"dialog\" noautohide></media-error-dialog>\n\n    <template if=\"!audio\">\n      <!-- Pre-playback UI -->\n      <!-- same for both on-demand and live -->\n      <div slot=\"centered-chrome\" class=\"center-controls pre-playback\">\n        <template if=\"!breakpointsm\">{{>PlayButton section=\"center\"}}</template>\n        <template if=\"breakpointsm\">{{>PrePlayButton section=\"center\"}}</template>\n      </div>\n\n      <!-- Mux Badge -->\n      <template if=\"proudlydisplaymuxbadge\"> {{>MuxBadge}} </template>\n\n      <!-- Autoplay centered unmute button -->\n      <!--\n        todo: figure out how show this with available state variables\n        needs to show when:\n        - autoplay is enabled\n        - playback has been successful\n        - audio is muted\n        - in place / instead of the pre-plaback play button\n        - not to show again after user has interacted with this button\n          - OR user has interacted with the mute button in the control bar\n      -->\n      <!--\n        There should be a >MuteButton to the left of the \"Unmute\" text, but a templating bug\n        makes it appear even if commented out in the markup, add it back when code is un-commented\n      -->\n      <!-- <div slot=\"centered-chrome\" class=\"autoplay-unmute\">\n        <div role=\"button\" class=\"autoplay-unmute-btn\">Unmute</div>\n      </div> -->\n\n      <template if=\"streamtype == 'on-demand'\">\n        <template if=\"breakpointsm\">\n          <media-control-bar part=\"control-bar top\" slot=\"top-chrome\">{{>TitleDisplay}} </media-control-bar>\n        </template>\n        {{>TimeRange}}\n        <media-control-bar part=\"control-bar bottom\">\n          {{>PlayButton}} {{>SeekBackwardButton}} {{>SeekForwardButton}} {{>TimeDisplay}} {{>MuteButton}}\n          {{>VolumeRange}}\n          <div class=\"spacer\"></div>\n          {{>RenditionMenu}} {{>PlaybackRateMenu}} {{>AudioTrackMenu}} {{>CaptionsMenu}} {{>AirplayButton}}\n          {{>CastButton}} {{>PipButton}} {{>FullscreenButton}}\n        </media-control-bar>\n      </template>\n\n      <template if=\"streamtype == 'live'\">\n        <media-control-bar part=\"control-bar top\" slot=\"top-chrome\">\n          {{>LiveButton}}\n          <template if=\"breakpointsm\"> {{>TitleDisplay}} </template>\n        </media-control-bar>\n        <template if=\"targetlivewindow > 0\">{{>TimeRange}}</template>\n        <media-control-bar part=\"control-bar bottom\">\n          {{>PlayButton}}\n          <template if=\"targetlivewindow > 0\">{{>SeekBackwardButton}} {{>SeekForwardButton}}</template>\n          {{>MuteButton}} {{>VolumeRange}}\n          <div class=\"spacer\"></div>\n          {{>RenditionMenu}} {{>AudioTrackMenu}} {{>CaptionsMenu}} {{>AirplayButton}} {{>CastButton}} {{>PipButton}}\n          {{>FullscreenButton}}\n        </media-control-bar>\n      </template>\n    </template>\n\n    <template if=\"audio\">\n      <template if=\"streamtype == 'on-demand'\">\n        <template if=\"title\">\n          <media-control-bar part=\"control-bar top\">{{>TitleDisplay}}</media-control-bar>\n        </template>\n        <media-control-bar part=\"control-bar bottom\">\n          {{>PlayButton}}\n          <template if=\"breakpointsm\"> {{>SeekBackwardButton}} {{>SeekForwardButton}} </template>\n          {{>MuteButton}}\n          <template if=\"breakpointsm\">{{>VolumeRange}}</template>\n          {{>TimeDisplay}} {{>TimeRange}}\n          <template if=\"breakpointsm\">{{>PlaybackRateMenu}}</template>\n          {{>AirplayButton}} {{>CastButton}}\n        </media-control-bar>\n      </template>\n\n      <template if=\"streamtype == 'live'\">\n        <template if=\"title\">\n          <media-control-bar part=\"control-bar top\">{{>TitleDisplay}}</media-control-bar>\n        </template>\n        <media-control-bar part=\"control-bar bottom\">\n          {{>PlayButton}} {{>LiveButton section=\"bottom\"}} {{>MuteButton}}\n          <template if=\"breakpointsm\">\n            {{>VolumeRange}}\n            <template if=\"targetlivewindow > 0\"> {{>SeekBackwardButton}} {{>SeekForwardButton}} </template>\n          </template>\n          <template if=\"targetlivewindow > 0\"> {{>TimeDisplay}} {{>TimeRange}} </template>\n          <template if=\"!targetlivewindow\"><div class=\"spacer\"></div></template>\n          {{>AirplayButton}} {{>CastButton}}\n        </media-control-bar>\n      </template>\n    </template>\n\n    <slot></slot>\n  </media-controller>\n</template>\n`;var Oe=Y.createElement(\"template\");\"innerHTML\"in Oe&&(Oe.innerHTML=vt);var Et,Tt,pe=class extends media_chrome_dist_media_theme_element_js__WEBPACK_IMPORTED_MODULE_6__.MediaThemeElement{};pe.template=(Tt=(Et=Oe.content)==null?void 0:Et.children)==null?void 0:Tt[0];f.customElements.get(\"media-theme-gerwig\")||f.customElements.define(\"media-theme-gerwig\",pe);var va=\"gerwig\";var S={SRC:\"src\",POSTER:\"poster\"},o={STYLE:\"style\",DEFAULT_HIDDEN_CAPTIONS:\"default-hidden-captions\",PRIMARY_COLOR:\"primary-color\",SECONDARY_COLOR:\"secondary-color\",ACCENT_COLOR:\"accent-color\",FORWARD_SEEK_OFFSET:\"forward-seek-offset\",BACKWARD_SEEK_OFFSET:\"backward-seek-offset\",PLAYBACK_TOKEN:\"playback-token\",THUMBNAIL_TOKEN:\"thumbnail-token\",STORYBOARD_TOKEN:\"storyboard-token\",DRM_TOKEN:\"drm-token\",STORYBOARD_SRC:\"storyboard-src\",THUMBNAIL_TIME:\"thumbnail-time\",AUDIO:\"audio\",NOHOTKEYS:\"nohotkeys\",HOTKEYS:\"hotkeys\",PLAYBACK_RATES:\"playbackrates\",DEFAULT_SHOW_REMAINING_TIME:\"default-show-remaining-time\",DEFAULT_DURATION:\"default-duration\",TITLE:\"title\",VIDEO_TITLE:\"video-title\",PLACEHOLDER:\"placeholder\",THEME:\"theme\",DEFAULT_STREAM_TYPE:\"default-stream-type\",TARGET_LIVE_WINDOW:\"target-live-window\",EXTRA_SOURCE_PARAMS:\"extra-source-params\",NO_VOLUME_PREF:\"no-volume-pref\",CAST_RECEIVER:\"cast-receiver\",NO_TOOLTIPS:\"no-tooltips\",PROUDLY_DISPLAY_MUX_BADGE:\"proudly-display-mux-badge\"},Ne=[\"audio\",\"backwardseekoffset\",\"defaultduration\",\"defaultshowremainingtime\",\"defaultsubtitles\",\"noautoseektolive\",\"disabled\",\"exportparts\",\"forwardseekoffset\",\"hideduration\",\"hotkeys\",\"nohotkeys\",\"playbackrates\",\"defaultstreamtype\",\"streamtype\",\"style\",\"targetlivewindow\",\"template\",\"title\",\"videotitle\",\"novolumepref\",\"proudlydisplaymuxbadge\"];function Ea(t,a){var i,r;return{src:!t.playbackId&&t.src,playbackId:t.playbackId,hasSrc:!!t.playbackId||!!t.src||!!t.currentSrc,poster:t.poster,storyboard:t.storyboard,storyboardSrc:t.getAttribute(o.STORYBOARD_SRC),placeholder:t.getAttribute(\"placeholder\"),themeTemplate:Aa(t),thumbnailTime:!t.tokens.thumbnail&&t.thumbnailTime,autoplay:t.autoplay,crossOrigin:t.crossOrigin,loop:t.loop,noHotKeys:t.hasAttribute(o.NOHOTKEYS),hotKeys:t.getAttribute(o.HOTKEYS),muted:t.muted,paused:t.paused,preload:t.preload,envKey:t.envKey,preferCmcd:t.preferCmcd,debug:t.debug,disableTracking:t.disableTracking,disableCookies:t.disableCookies,tokens:t.tokens,beaconCollectionDomain:t.beaconCollectionDomain,maxResolution:t.maxResolution,minResolution:t.minResolution,programStartTime:t.programStartTime,programEndTime:t.programEndTime,assetStartTime:t.assetStartTime,assetEndTime:t.assetEndTime,renditionOrder:t.renditionOrder,metadata:t.metadata,playerInitTime:t.playerInitTime,playerSoftwareName:t.playerSoftwareName,playerSoftwareVersion:t.playerSoftwareVersion,startTime:t.startTime,preferPlayback:t.preferPlayback,audio:t.audio,defaultStreamType:t.defaultStreamType,targetLiveWindow:t.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.TARGET_LIVE_WINDOW),streamType:z(t.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.STREAM_TYPE)),primaryColor:t.getAttribute(o.PRIMARY_COLOR),secondaryColor:t.getAttribute(o.SECONDARY_COLOR),accentColor:t.getAttribute(o.ACCENT_COLOR),forwardSeekOffset:t.forwardSeekOffset,backwardSeekOffset:t.backwardSeekOffset,defaultHiddenCaptions:t.defaultHiddenCaptions,defaultDuration:t.defaultDuration,defaultShowRemainingTime:t.defaultShowRemainingTime,hideDuration:Ca(t),playbackRates:t.getAttribute(o.PLAYBACK_RATES),customDomain:(i=t.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.CUSTOM_DOMAIN))!=null?i:void 0,title:t.getAttribute(o.TITLE),videoTitle:(r=t.getAttribute(o.VIDEO_TITLE))!=null?r:t.getAttribute(o.TITLE),novolumepref:t.hasAttribute(o.NO_VOLUME_PREF),castReceiver:t.castReceiver,proudlyDisplayMuxBadge:t.hasAttribute(o.PROUDLY_DISPLAY_MUX_BADGE),...a,extraSourceParams:t.extraSourceParams}}var Ta=media_chrome__WEBPACK_IMPORTED_MODULE_0__.MediaErrorDialog.formatErrorMessage;media_chrome__WEBPACK_IMPORTED_MODULE_0__.MediaErrorDialog.formatErrorMessage=t=>{var a,e;if(t instanceof _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.MediaError){let i=yt(t,!1);return`\n      ${i!=null&&i.title?`<h3>${i.title}</h3>`:\"\"}\n      ${i!=null&&i.message||i!=null&&i.linkUrl?`<p>\n        ${i==null?void 0:i.message}\n        ${i!=null&&i.linkUrl?`<a\n              href=\"${i.linkUrl}\"\n              target=\"_blank\"\n              rel=\"external noopener\"\n              aria-label=\"${(a=i.linkText)!=null?a:\"\"} ${(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"(opens in a new window)\")}\"\n              >${(e=i.linkText)!=null?e:i.linkUrl}</a\n            >`:\"\"}\n      </p>`:\"\"}\n    `}return Ta(t)};function Aa(t){var e,i;let a=t.theme;if(a){let r=(i=(e=t.getRootNode())==null?void 0:e.getElementById)==null?void 0:i.call(e,a);if(r&&r instanceof HTMLTemplateElement)return r;a.startsWith(\"media-theme-\")||(a=`media-theme-${a}`);let n=f.customElements.get(a);if(n!=null&&n.template)return n.template}}function Ca(t){var e;let a=(e=t.mediaController)==null?void 0:e.querySelector(\"media-time-display\");return a&&getComputedStyle(a).getPropertyValue(\"--media-duration-display-display\").trim()===\"none\"}function xt(t){let a=t.videoTitle?{video_title:t.videoTitle}:{};return t.getAttributeNames().filter(e=>e.startsWith(\"metadata-\")).reduce((e,i)=>{let r=t.getAttribute(i);return r!==null&&(e[i.replace(/^metadata-/,\"\").replace(/-/g,\"_\")]=r),e},a)}var ka=Object.values(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes),xa=Object.values(S),_a=Object.values(o),_t=le(),Rt=\"mux-player\",Ot={isDialogOpen:!1},Ra={redundant_streams:!0},te,ae,ie,w,re,H,m,N,Lt,we,K,St,Nt,wt,It,ee=class extends ke{constructor(){super();T(this,m);T(this,te);T(this,ae,!1);T(this,ie,{});T(this,w,!0);T(this,re,new de(this,\"hotkeys\"));T(this,H,{...Ot,onCloseErrorDialog:e=>{var r;((r=e.composedPath()[0])==null?void 0:r.localName)===\"media-error-dialog\"&&b(this,m,we).call(this,{isDialogOpen:!1})},onFocusInErrorDialog:e=>{var n;if(((n=e.composedPath()[0])==null?void 0:n.localName)!==\"media-error-dialog\")return;Ee(this,Y.activeElement)||e.preventDefault()}});k(this,te,(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.generatePlayerInitTime)()),this.attachShadow({mode:\"open\"}),b(this,m,Lt).call(this),this.isConnected&&b(this,m,N).call(this)}static get NAME(){return Rt}static get VERSION(){return _t}static get observedAttributes(){var e;return[...(e=ke.observedAttributes)!=null?e:[],...xa,...ka,..._a]}get mediaTheme(){var e;return(e=this.shadowRoot)==null?void 0:e.querySelector(\"media-theme\")}get mediaController(){var e,i;return(i=(e=this.mediaTheme)==null?void 0:e.shadowRoot)==null?void 0:i.querySelector(\"media-controller\")}connectedCallback(){var i;let e=(i=this.shadowRoot)==null?void 0:i.querySelector(\"mux-video\");e&&(e.metadata=xt(this))}attributeChangedCallback(e,i,r){switch(b(this,m,N).call(this),super.attributeChangedCallback(e,i,r),e){case o.HOTKEYS:u(this,re).value=r;break;case o.THUMBNAIL_TIME:{r!=null&&this.tokens.thumbnail&&O((0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Use of thumbnail-time with thumbnail-token is currently unsupported. Ignore thumbnail-time.\").toString());break}case o.THUMBNAIL_TOKEN:{if(r){let d=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.parseJwt)(r);if(d){let{aud:l}=d,p=_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxJWTAud.THUMBNAIL;l!==p&&O((0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The {tokenNamePrefix}-token has an incorrect aud value: {aud}. aud value should be {expectedAud}.\").format({aud:l,expectedAud:p,tokenNamePrefix:\"thumbnail\"}))}}break}case o.STORYBOARD_TOKEN:{if(r){let d=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.parseJwt)(r);if(d){let{aud:l}=d,p=_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxJWTAud.STORYBOARD;l!==p&&O((0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The {tokenNamePrefix}-token has an incorrect aud value: {aud}. aud value should be {expectedAud}.\").format({aud:l,expectedAud:p,tokenNamePrefix:\"storyboard\"}))}}break}case o.DRM_TOKEN:{if(r){let d=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.parseJwt)(r);if(d){let{aud:l}=d,p=_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.MuxJWTAud.DRM;l!==p&&O((0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The {tokenNamePrefix}-token has an incorrect aud value: {aud}. aud value should be {expectedAud}.\").format({aud:l,expectedAud:p,tokenNamePrefix:\"drm\"}))}}break}case _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYBACK_ID:{r!=null&&r.includes(\"?token\")&&A((0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"The specificed playback ID {playbackId} contains a token which must be provided via the playback-token attribute.\").format({playbackId:r}));break}case _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.STREAM_TYPE:r&&![_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.LIVE,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.ON_DEMAND,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.UNKNOWN].includes(r)?[\"ll-live\",\"live:dvr\",\"ll-live:dvr\"].includes(this.streamType)?this.targetLiveWindow=r.includes(\"dvr\")?Number.POSITIVE_INFINITY:0:Ae({file:\"invalid-stream-type.md\",message:(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.i18n)(\"Invalid stream-type value supplied: `{streamType}`. Please provide stream-type as either: `on-demand` or `live`\").format({streamType:this.streamType})}):r===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.LIVE?this.getAttribute(o.TARGET_LIVE_WINDOW)==null&&(this.targetLiveWindow=0):this.targetLiveWindow=Number.NaN}[_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYBACK_ID,S.SRC,o.PLAYBACK_TOKEN].includes(e)&&i!==r&&k(this,H,{...u(this,H),...Ot}),b(this,m,K).call(this,{[ot(e)]:r})}async requestFullscreen(e){var i;if(!(!this.mediaController||this.mediaController.hasAttribute(media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__.MediaUIAttributes.MEDIA_IS_FULLSCREEN)))return(i=this.mediaController)==null||i.dispatchEvent(new f.CustomEvent(media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__.MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST,{composed:!0,bubbles:!0})),new Promise((r,n)=>{var d;(d=this.mediaController)==null||d.addEventListener(media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__.MediaStateChangeEvents.MEDIA_IS_FULLSCREEN,()=>r(),{once:!0})})}async exitFullscreen(){var e;if(!(!this.mediaController||!this.mediaController.hasAttribute(media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__.MediaUIAttributes.MEDIA_IS_FULLSCREEN)))return(e=this.mediaController)==null||e.dispatchEvent(new f.CustomEvent(media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__.MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST,{composed:!0,bubbles:!0})),new Promise((i,r)=>{var n;(n=this.mediaController)==null||n.addEventListener(media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__.MediaStateChangeEvents.MEDIA_IS_FULLSCREEN,()=>i(),{once:!0})})}get preferCmcd(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PREFER_CMCD))!=null?e:void 0}set preferCmcd(e){e!==this.preferCmcd&&(e?_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.CmcdTypeValues.includes(e)?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PREFER_CMCD,e):O(`Invalid value for preferCmcd. Must be one of ${_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.CmcdTypeValues.join()}`):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PREFER_CMCD))}get hasPlayed(){var e,i;return(i=(e=this.mediaController)==null?void 0:e.hasAttribute(media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__.MediaUIAttributes.MEDIA_HAS_PLAYED))!=null?i:!1}get inLiveWindow(){var e;return(e=this.mediaController)==null?void 0:e.hasAttribute(media_chrome_dist_constants_js__WEBPACK_IMPORTED_MODULE_2__.MediaUIAttributes.MEDIA_TIME_IS_LIVE)}get _hls(){var e;return(e=this.media)==null?void 0:e._hls}get mux(){var e;return(e=this.media)==null?void 0:e.mux}get theme(){var e;return(e=this.getAttribute(o.THEME))!=null?e:va}set theme(e){this.setAttribute(o.THEME,`${e}`)}get themeProps(){let e=this.mediaTheme;if(!e)return;let i={};for(let r of e.getAttributeNames()){if(Ne.includes(r))continue;let n=e.getAttribute(r);i[se(r)]=n===\"\"?!0:n}return i}set themeProps(e){var r,n;b(this,m,N).call(this);let i={...this.themeProps,...e};for(let d in i){if(Ne.includes(d))continue;let l=e==null?void 0:e[d];typeof l==\"boolean\"||l==null?(r=this.mediaTheme)==null||r.toggleAttribute(ne(d),!!l):(n=this.mediaTheme)==null||n.setAttribute(ne(d),l)}}get playbackId(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYBACK_ID))!=null?e:void 0}set playbackId(e){e?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYBACK_ID,e):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYBACK_ID)}get src(){var e,i;return this.playbackId?(e=V(this,S.SRC))!=null?e:void 0:(i=this.getAttribute(S.SRC))!=null?i:void 0}set src(e){e?this.setAttribute(S.SRC,e):this.removeAttribute(S.SRC)}get poster(){var r;let e=this.getAttribute(S.POSTER);if(e!=null)return e;let{tokens:i}=this;if(i.playback&&!i.thumbnail){O(\"Missing expected thumbnail token. No poster image will be shown\");return}if(this.playbackId&&!this.audio)return it(this.playbackId,{customDomain:this.customDomain,thumbnailTime:(r=this.thumbnailTime)!=null?r:this.startTime,programTime:this.programStartTime,token:i.thumbnail})}set poster(e){e||e===\"\"?this.setAttribute(S.POSTER,e):this.removeAttribute(S.POSTER)}get storyboardSrc(){var e;return(e=this.getAttribute(o.STORYBOARD_SRC))!=null?e:void 0}set storyboardSrc(e){e?this.setAttribute(o.STORYBOARD_SRC,e):this.removeAttribute(o.STORYBOARD_SRC)}get storyboard(){let{tokens:e}=this;if(this.storyboardSrc&&!e.storyboard)return this.storyboardSrc;if(!(this.audio||!this.playbackId||!this.streamType||[_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.LIVE,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.UNKNOWN].includes(this.streamType)||e.playback&&!e.storyboard))return rt(this.playbackId,{customDomain:this.customDomain,token:e.storyboard,programStartTime:this.programStartTime,programEndTime:this.programEndTime})}get audio(){return this.hasAttribute(o.AUDIO)}set audio(e){if(!e){this.removeAttribute(o.AUDIO);return}this.setAttribute(o.AUDIO,\"\")}get hotkeys(){return u(this,re)}get nohotkeys(){return this.hasAttribute(o.NOHOTKEYS)}set nohotkeys(e){if(!e){this.removeAttribute(o.NOHOTKEYS);return}this.setAttribute(o.NOHOTKEYS,\"\")}get thumbnailTime(){return v(this.getAttribute(o.THUMBNAIL_TIME))}set thumbnailTime(e){this.setAttribute(o.THUMBNAIL_TIME,`${e}`)}get videoTitle(){var e,i;return(i=(e=this.getAttribute(o.VIDEO_TITLE))!=null?e:this.getAttribute(o.TITLE))!=null?i:\"\"}set videoTitle(e){e!==this.videoTitle&&(e?this.setAttribute(o.VIDEO_TITLE,e):this.removeAttribute(o.VIDEO_TITLE))}get placeholder(){var e;return(e=V(this,o.PLACEHOLDER))!=null?e:\"\"}set placeholder(e){this.setAttribute(o.PLACEHOLDER,`${e}`)}get primaryColor(){var i,r;let e=this.getAttribute(o.PRIMARY_COLOR);if(e!=null||this.mediaTheme&&(e=(r=(i=f.getComputedStyle(this.mediaTheme))==null?void 0:i.getPropertyValue(\"--_primary-color\"))==null?void 0:r.trim(),e))return e}set primaryColor(e){this.setAttribute(o.PRIMARY_COLOR,`${e}`)}get secondaryColor(){var i,r;let e=this.getAttribute(o.SECONDARY_COLOR);if(e!=null||this.mediaTheme&&(e=(r=(i=f.getComputedStyle(this.mediaTheme))==null?void 0:i.getPropertyValue(\"--_secondary-color\"))==null?void 0:r.trim(),e))return e}set secondaryColor(e){this.setAttribute(o.SECONDARY_COLOR,`${e}`)}get accentColor(){var i,r;let e=this.getAttribute(o.ACCENT_COLOR);if(e!=null||this.mediaTheme&&(e=(r=(i=f.getComputedStyle(this.mediaTheme))==null?void 0:i.getPropertyValue(\"--_accent-color\"))==null?void 0:r.trim(),e))return e}set accentColor(e){this.setAttribute(o.ACCENT_COLOR,`${e}`)}get defaultShowRemainingTime(){return this.hasAttribute(o.DEFAULT_SHOW_REMAINING_TIME)}set defaultShowRemainingTime(e){e?this.setAttribute(o.DEFAULT_SHOW_REMAINING_TIME,\"\"):this.removeAttribute(o.DEFAULT_SHOW_REMAINING_TIME)}get playbackRates(){if(this.hasAttribute(o.PLAYBACK_RATES))return this.getAttribute(o.PLAYBACK_RATES).trim().split(/\\s*,?\\s+/).map(e=>Number(e)).filter(e=>!Number.isNaN(e)).sort((e,i)=>e-i)}set playbackRates(e){if(!e){this.removeAttribute(o.PLAYBACK_RATES);return}this.setAttribute(o.PLAYBACK_RATES,e.join(\" \"))}get forwardSeekOffset(){var e;return(e=v(this.getAttribute(o.FORWARD_SEEK_OFFSET)))!=null?e:10}set forwardSeekOffset(e){this.setAttribute(o.FORWARD_SEEK_OFFSET,`${e}`)}get backwardSeekOffset(){var e;return(e=v(this.getAttribute(o.BACKWARD_SEEK_OFFSET)))!=null?e:10}set backwardSeekOffset(e){this.setAttribute(o.BACKWARD_SEEK_OFFSET,`${e}`)}get defaultHiddenCaptions(){return this.hasAttribute(o.DEFAULT_HIDDEN_CAPTIONS)}set defaultHiddenCaptions(e){e?this.setAttribute(o.DEFAULT_HIDDEN_CAPTIONS,\"\"):this.removeAttribute(o.DEFAULT_HIDDEN_CAPTIONS)}get defaultDuration(){return v(this.getAttribute(o.DEFAULT_DURATION))}set defaultDuration(e){e==null?this.removeAttribute(o.DEFAULT_DURATION):this.setAttribute(o.DEFAULT_DURATION,`${e}`)}get playerInitTime(){return this.hasAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYER_INIT_TIME)?v(this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYER_INIT_TIME)):u(this,te)}set playerInitTime(e){e!=this.playerInitTime&&(e==null?this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYER_INIT_TIME):this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYER_INIT_TIME,`${+e}`))}get playerSoftwareName(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYER_SOFTWARE_NAME))!=null?e:Rt}get playerSoftwareVersion(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PLAYER_SOFTWARE_VERSION))!=null?e:_t}get beaconCollectionDomain(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.BEACON_COLLECTION_DOMAIN))!=null?e:void 0}set beaconCollectionDomain(e){e!==this.beaconCollectionDomain&&(e?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.BEACON_COLLECTION_DOMAIN,e):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.BEACON_COLLECTION_DOMAIN))}get maxResolution(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.MAX_RESOLUTION))!=null?e:void 0}set maxResolution(e){e!==this.maxResolution&&(e?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.MAX_RESOLUTION,e):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.MAX_RESOLUTION))}get minResolution(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.MIN_RESOLUTION))!=null?e:void 0}set minResolution(e){e!==this.minResolution&&(e?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.MIN_RESOLUTION,e):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.MIN_RESOLUTION))}get renditionOrder(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.RENDITION_ORDER))!=null?e:void 0}set renditionOrder(e){e!==this.renditionOrder&&(e?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.RENDITION_ORDER,e):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.RENDITION_ORDER))}get programStartTime(){return v(this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PROGRAM_START_TIME))}set programStartTime(e){e==null?this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PROGRAM_START_TIME):this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PROGRAM_START_TIME,`${e}`)}get programEndTime(){return v(this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PROGRAM_END_TIME))}set programEndTime(e){e==null?this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PROGRAM_END_TIME):this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PROGRAM_END_TIME,`${e}`)}get assetStartTime(){return v(this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.ASSET_START_TIME))}set assetStartTime(e){e==null?this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.ASSET_START_TIME):this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.ASSET_START_TIME,`${e}`)}get assetEndTime(){return v(this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.ASSET_END_TIME))}set assetEndTime(e){e==null?this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.ASSET_END_TIME):this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.ASSET_END_TIME,`${e}`)}get extraSourceParams(){return this.hasAttribute(o.EXTRA_SOURCE_PARAMS)?[...new URLSearchParams(this.getAttribute(o.EXTRA_SOURCE_PARAMS)).entries()].reduce((e,[i,r])=>(e[i]=r,e),{}):Ra}set extraSourceParams(e){e==null?this.removeAttribute(o.EXTRA_SOURCE_PARAMS):this.setAttribute(o.EXTRA_SOURCE_PARAMS,new URLSearchParams(e).toString())}get customDomain(){var e;return(e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.CUSTOM_DOMAIN))!=null?e:void 0}set customDomain(e){e!==this.customDomain&&(e?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.CUSTOM_DOMAIN,e):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.CUSTOM_DOMAIN))}get envKey(){var e;return(e=V(this,_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.ENV_KEY))!=null?e:void 0}set envKey(e){this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.ENV_KEY,`${e}`)}get noVolumePref(){return this.hasAttribute(o.NO_VOLUME_PREF)}set noVolumePref(e){e?this.setAttribute(o.NO_VOLUME_PREF,\"\"):this.removeAttribute(o.NO_VOLUME_PREF)}get debug(){return V(this,_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.DEBUG)!=null}set debug(e){e?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.DEBUG,\"\"):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.DEBUG)}get disableTracking(){return V(this,_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.DISABLE_TRACKING)!=null}set disableTracking(e){this.toggleAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.DISABLE_TRACKING,!!e)}get disableCookies(){return V(this,_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.DISABLE_COOKIES)!=null}set disableCookies(e){e?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.DISABLE_COOKIES,\"\"):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.DISABLE_COOKIES)}get streamType(){var e,i,r;return(r=(i=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.STREAM_TYPE))!=null?i:(e=this.media)==null?void 0:e.streamType)!=null?r:_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.UNKNOWN}set streamType(e){this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.STREAM_TYPE,`${e}`)}get defaultStreamType(){var e,i,r;return(r=(i=this.getAttribute(o.DEFAULT_STREAM_TYPE))!=null?i:(e=this.mediaController)==null?void 0:e.getAttribute(o.DEFAULT_STREAM_TYPE))!=null?r:_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.ON_DEMAND}set defaultStreamType(e){e?this.setAttribute(o.DEFAULT_STREAM_TYPE,e):this.removeAttribute(o.DEFAULT_STREAM_TYPE)}get targetLiveWindow(){var e,i;return this.hasAttribute(o.TARGET_LIVE_WINDOW)?+this.getAttribute(o.TARGET_LIVE_WINDOW):(i=(e=this.media)==null?void 0:e.targetLiveWindow)!=null?i:Number.NaN}set targetLiveWindow(e){e==this.targetLiveWindow||Number.isNaN(e)&&Number.isNaN(this.targetLiveWindow)||(e==null?this.removeAttribute(o.TARGET_LIVE_WINDOW):this.setAttribute(o.TARGET_LIVE_WINDOW,`${+e}`))}get liveEdgeStart(){var e;return(e=this.media)==null?void 0:e.liveEdgeStart}get startTime(){return v(V(this,_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.START_TIME))}set startTime(e){this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.START_TIME,`${e}`)}get preferPlayback(){let e=this.getAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PREFER_PLAYBACK);if(e===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.PlaybackTypes.MSE||e===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.PlaybackTypes.NATIVE)return e}set preferPlayback(e){e!==this.preferPlayback&&(e===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.PlaybackTypes.MSE||e===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.PlaybackTypes.NATIVE?this.setAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PREFER_PLAYBACK,e):this.removeAttribute(_mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.Attributes.PREFER_PLAYBACK))}get metadata(){var e;return(e=this.media)==null?void 0:e.metadata}set metadata(e){if(b(this,m,N).call(this),!this.media){A(\"underlying media element missing when trying to set metadata. metadata will not be set.\");return}this.media.metadata={...xt(this),...e}}get _hlsConfig(){var e;return(e=this.media)==null?void 0:e._hlsConfig}set _hlsConfig(e){if(b(this,m,N).call(this),!this.media){A(\"underlying media element missing when trying to set _hlsConfig. _hlsConfig will not be set.\");return}this.media._hlsConfig=e}async addCuePoints(e){var i;if(b(this,m,N).call(this),!this.media){A(\"underlying media element missing when trying to addCuePoints. cuePoints will not be added.\");return}return(i=this.media)==null?void 0:i.addCuePoints(e)}get activeCuePoint(){var e;return(e=this.media)==null?void 0:e.activeCuePoint}get cuePoints(){var e,i;return(i=(e=this.media)==null?void 0:e.cuePoints)!=null?i:[]}addChapters(e){var i;if(b(this,m,N).call(this),!this.media){A(\"underlying media element missing when trying to addChapters. chapters will not be added.\");return}return(i=this.media)==null?void 0:i.addChapters(e)}get activeChapter(){var e;return(e=this.media)==null?void 0:e.activeChapter}get chapters(){var e,i;return(i=(e=this.media)==null?void 0:e.chapters)!=null?i:[]}getStartDate(){var e;return(e=this.media)==null?void 0:e.getStartDate()}get currentPdt(){var e;return(e=this.media)==null?void 0:e.currentPdt}get tokens(){let e=this.getAttribute(o.PLAYBACK_TOKEN),i=this.getAttribute(o.DRM_TOKEN),r=this.getAttribute(o.THUMBNAIL_TOKEN),n=this.getAttribute(o.STORYBOARD_TOKEN);return{...u(this,ie),...e!=null?{playback:e}:{},...i!=null?{drm:i}:{},...r!=null?{thumbnail:r}:{},...n!=null?{storyboard:n}:{}}}set tokens(e){k(this,ie,e!=null?e:{})}get playbackToken(){var e;return(e=this.getAttribute(o.PLAYBACK_TOKEN))!=null?e:void 0}set playbackToken(e){this.setAttribute(o.PLAYBACK_TOKEN,`${e}`)}get drmToken(){var e;return(e=this.getAttribute(o.DRM_TOKEN))!=null?e:void 0}set drmToken(e){this.setAttribute(o.DRM_TOKEN,`${e}`)}get thumbnailToken(){var e;return(e=this.getAttribute(o.THUMBNAIL_TOKEN))!=null?e:void 0}set thumbnailToken(e){this.setAttribute(o.THUMBNAIL_TOKEN,`${e}`)}get storyboardToken(){var e;return(e=this.getAttribute(o.STORYBOARD_TOKEN))!=null?e:void 0}set storyboardToken(e){this.setAttribute(o.STORYBOARD_TOKEN,`${e}`)}addTextTrack(e,i,r,n){var l;let d=(l=this.media)==null?void 0:l.nativeEl;if(d)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.addTextTrack)(d,e,i,r,n)}removeTextTrack(e){var r;let i=(r=this.media)==null?void 0:r.nativeEl;if(i)return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.removeTextTrack)(i,e)}get textTracks(){var e;return(e=this.media)==null?void 0:e.textTracks}get castReceiver(){var e;return(e=this.getAttribute(o.CAST_RECEIVER))!=null?e:void 0}set castReceiver(e){e!==this.castReceiver&&(e?this.setAttribute(o.CAST_RECEIVER,e):this.removeAttribute(o.CAST_RECEIVER))}get castCustomData(){var e;return(e=this.media)==null?void 0:e.castCustomData}set castCustomData(e){if(!this.media){A(\"underlying media element missing when trying to set castCustomData. castCustomData will not be set.\");return}this.media.castCustomData=e}get noTooltips(){return this.hasAttribute(o.NO_TOOLTIPS)}set noTooltips(e){if(!e){this.removeAttribute(o.NO_TOOLTIPS);return}this.setAttribute(o.NO_TOOLTIPS,\"\")}get proudlyDisplayMuxBadge(){return this.hasAttribute(o.PROUDLY_DISPLAY_MUX_BADGE)}set proudlyDisplayMuxBadge(e){e?this.setAttribute(o.PROUDLY_DISPLAY_MUX_BADGE,\"\"):this.removeAttribute(o.PROUDLY_DISPLAY_MUX_BADGE)}};te=new WeakMap,ae=new WeakMap,ie=new WeakMap,w=new WeakMap,re=new WeakMap,H=new WeakMap,m=new WeakSet,N=function(){var e,i,r,n;if(!u(this,ae)){k(this,ae,!0),b(this,m,K).call(this);try{if(customElements.upgrade(this.mediaTheme),!(this.mediaTheme instanceof f.HTMLElement))throw\"\"}catch{A(\"<media-theme> failed to upgrade!\")}try{if(customElements.upgrade(this.media),!(this.media instanceof _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__[\"default\"]))throw\"\"}catch{A(\"<mux-video> failed to upgrade!\")}try{if(customElements.upgrade(this.mediaController),!(this.mediaController instanceof media_chrome__WEBPACK_IMPORTED_MODULE_0__.MediaController))throw\"\"}catch{A(\"<media-controller> failed to upgrade!\")}this.init(),b(this,m,St).call(this),b(this,m,Nt).call(this),b(this,m,wt).call(this),k(this,w,(i=(e=this.mediaController)==null?void 0:e.hasAttribute(media_chrome_dist_media_container_js__WEBPACK_IMPORTED_MODULE_1__.Attributes.USER_INACTIVE))!=null?i:!0),b(this,m,It).call(this),(r=this.media)==null||r.addEventListener(\"streamtypechange\",()=>b(this,m,K).call(this)),(n=this.media)==null||n.addEventListener(\"loadstart\",()=>b(this,m,K).call(this))}},Lt=function(){var e,i;try{(e=window==null?void 0:window.CSS)==null||e.registerProperty({name:\"--media-primary-color\",syntax:\"<color>\",inherits:!0}),(i=window==null?void 0:window.CSS)==null||i.registerProperty({name:\"--media-secondary-color\",syntax:\"<color>\",inherits:!0})}catch{}},we=function(e){Object.assign(u(this,H),e),b(this,m,K).call(this)},K=function(e={}){ct(bt(Ea(this,{...u(this,H),...e})),this.shadowRoot)},St=function(){let e=r=>{var l,p;if(!(r!=null&&r.startsWith(\"theme-\")))return;let n=r.replace(/^theme-/,\"\");if(Ne.includes(n))return;let d=this.getAttribute(r);d!=null?(l=this.mediaTheme)==null||l.setAttribute(n,d):(p=this.mediaTheme)==null||p.removeAttribute(n)};new MutationObserver(r=>{for(let{attributeName:n}of r)e(n)}).observe(this,{attributes:!0}),this.getAttributeNames().forEach(e)},Nt=function(){var i;let e=r=>{let{detail:n}=r;if(n instanceof _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.MediaError||(n=new _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.MediaError(n.message,n.code,n.fatal)),!(n!=null&&n.fatal)){O(n),n.data&&O(`${n.name} data:`,n.data);return}let d=Re(n,!1);d.message&&Ae(d),A(n),n.data&&A(`${n.name} data:`,n.data),b(this,m,we).call(this,{isDialogOpen:!0})};this.addEventListener(\"error\",e),this.media&&(this.media.errorTranslator=(r={})=>{var d,l,p;if(!(((d=this.media)==null?void 0:d.error)instanceof _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.MediaError))return r;let n=Re((l=this.media)==null?void 0:l.error,!1);return{player_error_code:(p=this.media)==null?void 0:p.error.code,player_error_message:n.message?String(n.message):r.player_error_message,player_error_context:n.context?String(n.context):r.player_error_context}}),(i=this.media)==null||i.addEventListener(\"error\",r=>{var d,l;let{detail:n}=r;if(!n){let{message:p,code:_}=(l=(d=this.media)==null?void 0:d.error)!=null?l:{};n=new _mux_mux_video__WEBPACK_IMPORTED_MODULE_4__.MediaError(p,_)}n!=null&&n.fatal&&this.dispatchEvent(new CustomEvent(\"error\",{detail:n}))})},wt=function(){var i,r,n,d;let e=()=>b(this,m,K).call(this);(r=(i=this.media)==null?void 0:i.textTracks)==null||r.addEventListener(\"addtrack\",e),(d=(n=this.media)==null?void 0:n.textTracks)==null||d.addEventListener(\"removetrack\",e)},It=function(){var _,F;if(!/Firefox/i.test(navigator.userAgent))return;let i,r=new WeakMap,n=()=>this.streamType===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.LIVE&&!this.secondaryColor&&this.offsetWidth>=800,d=(x,C,R=!1)=>{if(n())return;Array.from(x&&x.activeCues||[]).forEach(h=>{if(!(!h.snapToLines||h.line<-5||h.line>=0&&h.line<10))if(!C||this.paused){let oe=h.text.split(`\n`).length,W=-3;this.streamType===_mux_playback_core__WEBPACK_IMPORTED_MODULE_5__.StreamTypes.LIVE&&(W=-2);let Z=W-oe;if(h.line===Z&&!R)return;r.has(h)||r.set(h,h.line),h.line=Z}else setTimeout(()=>{h.line=r.get(h)||\"auto\"},500)})},l=()=>{var x,C;d(i,(C=(x=this.mediaController)==null?void 0:x.hasAttribute(media_chrome_dist_media_container_js__WEBPACK_IMPORTED_MODULE_1__.Attributes.USER_INACTIVE))!=null?C:!1)},p=()=>{var R,B;let C=Array.from(((B=(R=this.mediaController)==null?void 0:R.media)==null?void 0:B.textTracks)||[]).filter(h=>[\"subtitles\",\"captions\"].includes(h.kind)&&h.mode===\"showing\")[0];C!==i&&(i==null||i.removeEventListener(\"cuechange\",l)),i=C,i==null||i.addEventListener(\"cuechange\",l),d(i,u(this,w))};p(),(_=this.textTracks)==null||_.addEventListener(\"change\",p),(F=this.textTracks)==null||F.addEventListener(\"addtrack\",p),this.addEventListener(\"userinactivechange\",()=>{var C,R;let x=(R=(C=this.mediaController)==null?void 0:C.hasAttribute(media_chrome_dist_media_container_js__WEBPACK_IMPORTED_MODULE_1__.Attributes.USER_INACTIVE))!=null?R:!0;u(this,w)!==x&&(k(this,w,x),d(i,u(this,w)))})};function V(t,a){return t.media?t.media.getAttribute(a):t.getAttribute(a)}f.customElements.get(\"mux-player\")||(f.customElements.define(\"mux-player\",ee),f.MuxPlayerElement=ee);var Ci=ee;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mux/mux-player/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mux/mux-uploader-react/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@mux/mux-uploader-react/dist/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MuxUploaderDrop: () => (/* binding */ Wr),\n/* harmony export */   MuxUploaderFileSelect: () => (/* binding */ Gr),\n/* harmony export */   MuxUploaderPause: () => (/* binding */ an),\n/* harmony export */   MuxUploaderProgress: () => (/* binding */ Zr),\n/* harmony export */   MuxUploaderRetry: () => (/* binding */ tn),\n/* harmony export */   MuxUploaderStatus: () => (/* binding */ dn),\n/* harmony export */   ProgressTypes: () => (/* binding */ Xs),\n/* harmony export */   \"default\": () => (/* binding */ qs)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* __next_internal_client_entry_do_not_use__ MuxUploaderDrop,MuxUploaderFileSelect,MuxUploaderPause,MuxUploaderProgress,MuxUploaderRetry,MuxUploaderStatus,ProgressTypes,default auto */ \nvar _t = Object.create, Ke = Object.defineProperty, zt = Object.getOwnPropertyDescriptor, Ye = Object.getOwnPropertyNames, Ot = Object.getPrototypeOf, It = Object.prototype.hasOwnProperty, G = (e, t)=>function() {\n        return t || (0, e[Ye(e)[0]])((t = {\n            exports: {}\n        }).exports, t), t.exports;\n    }, Dt = (e, t, r, n)=>{\n    if (t && typeof t == \"object\" || typeof t == \"function\") for (let s of Ye(t))!It.call(e, s) && s !== r && Ke(e, s, {\n        get: ()=>t[s],\n        enumerable: !(n = zt(t, s)) || n.enumerable\n    });\n    return e;\n}, Ft = (e, t, r)=>(r = e != null ? _t(Ot(e)) : {}, Dt(t || !e || !e.__esModule ? Ke(r, \"default\", {\n        value: e,\n        enumerable: !0\n    }) : r, e)), Bt = G({\n    \"node_modules/global/window.js\" (e, t) {\n        var r;\n         false ? 0 : typeof global != \"undefined\" ? r = global : typeof self != \"undefined\" ? r = self : r = {}, t.exports = r;\n    }\n}), Ht = G({\n    \"node_modules/is-function/index.js\" (e, t) {\n        t.exports = n;\n        var r = Object.prototype.toString;\n        function n(s) {\n            if (!s) return !1;\n            var a = r.call(s);\n            return a === \"[object Function]\" || typeof s == \"function\" && a !== \"[object RegExp]\" ||  false && (0);\n        }\n    }\n}), Nt = G({\n    \"node_modules/parse-headers/parse-headers.js\" (e, t) {\n        var r = function(s) {\n            return s.replace(/^\\s+|\\s+$/g, \"\");\n        }, n = function(s) {\n            return Object.prototype.toString.call(s) === \"[object Array]\";\n        };\n        t.exports = function(s) {\n            if (!s) return {};\n            for(var a = {}, l = r(s).split(`\n`), u = 0; u < l.length; u++){\n                var c = l[u], h = c.indexOf(\":\"), m = r(c.slice(0, h)).toLowerCase(), k = r(c.slice(h + 1));\n                typeof a[m] == \"undefined\" ? a[m] = k : n(a[m]) ? a[m].push(k) : a[m] = [\n                    a[m],\n                    k\n                ];\n            }\n            return a;\n        };\n    }\n}), jt = G({\n    \"node_modules/xtend/immutable.js\" (e, t) {\n        t.exports = n;\n        var r = Object.prototype.hasOwnProperty;\n        function n() {\n            for(var s = {}, a = 0; a < arguments.length; a++){\n                var l = arguments[a];\n                for(var u in l)r.call(l, u) && (s[u] = l[u]);\n            }\n            return s;\n        }\n    }\n}), Wt = G({\n    \"node_modules/xhr/index.js\" (e, t) {\n        \"use strict\";\n        var r = Bt(), n = Ht(), s = Nt(), a = jt();\n        t.exports = h, t.exports.default = h, h.XMLHttpRequest = r.XMLHttpRequest || ye, h.XDomainRequest = \"withCredentials\" in new h.XMLHttpRequest ? h.XMLHttpRequest : r.XDomainRequest, l([\n            \"get\",\n            \"put\",\n            \"post\",\n            \"patch\",\n            \"head\",\n            \"delete\"\n        ], function(o) {\n            h[o === \"delete\" ? \"del\" : o] = function(v, y, O) {\n                return y = c(v, y, O), y.method = o.toUpperCase(), m(y);\n            };\n        });\n        function l(o, v) {\n            for(var y = 0; y < o.length; y++)v(o[y]);\n        }\n        function u(o) {\n            for(var v in o)if (o.hasOwnProperty(v)) return !1;\n            return !0;\n        }\n        function c(o, v, y) {\n            var O = o;\n            return n(v) ? (y = v, typeof o == \"string\" && (O = {\n                uri: o\n            })) : O = a(v, {\n                uri: o\n            }), O.callback = y, O;\n        }\n        function h(o, v, y) {\n            return v = c(o, v, y), m(v);\n        }\n        function m(o) {\n            if (typeof o.callback == \"undefined\") throw new Error(\"callback argument missing\");\n            var v = !1, y = function(F, se, Lt) {\n                v || (v = !0, o.callback(F, se, Lt));\n            };\n            function O() {\n                d.readyState === 4 && setTimeout(Ie, 0);\n            }\n            function Ut() {\n                var f = void 0;\n                if (d.response ? f = d.response : f = d.responseText || k(d), De) try {\n                    f = JSON.parse(f);\n                } catch  {}\n                return f;\n            }\n            function Ee(f) {\n                return clearTimeout(Se), f instanceof Error || (f = new Error(\"\" + (f || \"Unknown XMLHttpRequest Error\"))), f.statusCode = 0, y(f, Fe);\n            }\n            function Ie() {\n                if (!ne) {\n                    var f;\n                    clearTimeout(Se), o.useXDR && d.status === void 0 ? f = 200 : f = d.status === 1223 ? 204 : d.status;\n                    var F = Fe, se = null;\n                    return f !== 0 ? (F = {\n                        body: Ut(),\n                        statusCode: f,\n                        method: $,\n                        headers: {},\n                        url: xe,\n                        rawRequest: d\n                    }, d.getAllResponseHeaders && (F.headers = s(d.getAllResponseHeaders()))) : se = new Error(\"Internal XMLHttpRequest Error\"), y(se, F, F.body);\n                }\n            }\n            var d = o.xhr || null;\n            d || (o.cors || o.useXDR ? d = new h.XDomainRequest : d = new h.XMLHttpRequest);\n            var re, ne, xe = d.url = o.uri || o.url, $ = d.method = o.method || \"GET\", ke = o.body || o.data, U = d.headers = o.headers || {}, Ce = !!o.sync, De = !1, Se, Fe = {\n                body: void 0,\n                headers: {},\n                statusCode: 0,\n                method: $,\n                url: xe,\n                rawRequest: d\n            };\n            if (\"json\" in o && o.json !== !1 && (De = !0, U.accept || U.Accept || (U.Accept = \"application/json\"), $ !== \"GET\" && $ !== \"HEAD\" && (U[\"content-type\"] || U[\"Content-Type\"] || (U[\"Content-Type\"] = \"application/json\"), ke = JSON.stringify(o.json === !0 ? ke : o.json))), d.onreadystatechange = O, d.onload = Ie, d.onerror = Ee, d.onprogress = function() {}, d.onabort = function() {\n                ne = !0;\n            }, d.ontimeout = Ee, d.open($, xe, !Ce, o.username, o.password), Ce || (d.withCredentials = !!o.withCredentials), !Ce && o.timeout > 0 && (Se = setTimeout(function() {\n                if (!ne) {\n                    ne = !0, d.abort(\"timeout\");\n                    var f = new Error(\"XMLHttpRequest timeout\");\n                    f.code = \"ETIMEDOUT\", Ee(f);\n                }\n            }, o.timeout)), d.setRequestHeader) for(re in U)U.hasOwnProperty(re) && d.setRequestHeader(re, U[re]);\n            else if (o.headers && !u(o.headers)) throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n            return \"responseType\" in o && (d.responseType = o.responseType), \"beforeSend\" in o && typeof o.beforeSend == \"function\" && o.beforeSend(d), d.send(ke || null), d;\n        }\n        function k(o) {\n            try {\n                if (o.responseType === \"document\") return o.responseXML;\n                var v = o.responseXML && o.responseXML.documentElement.nodeName === \"parsererror\";\n                if (o.responseType === \"\" && !v) return o.responseXML;\n            } catch  {}\n            return null;\n        }\n        function ye() {}\n    }\n});\nfunction Pe(e, t, ...r) {\n    if (!e) throw new TypeError(Ze(t, r));\n}\nfunction Ze(e, t) {\n    let r = 0;\n    return e.replace(/%[os]/gu, ()=>Je(t[r++]));\n}\nfunction Je(e) {\n    return typeof e != \"object\" || e === null ? String(e) : Object.prototype.toString.call(e);\n}\nvar Be;\nfunction $t(e) {\n    try {\n        let t = e instanceof Error ? e : new Error(Je(e));\n        if (Be) {\n            Be(t);\n            return;\n        }\n        if (typeof dispatchEvent == \"function\" && typeof ErrorEvent == \"function\") dispatchEvent(new ErrorEvent(\"error\", {\n            error: t,\n            message: t.message\n        }));\n        else if (typeof process != \"undefined\" && typeof process.emit == \"function\") {\n            process.emit(\"uncaughtException\", t);\n            return;\n        }\n        console.error(t);\n    } catch  {}\n}\nvar M =  false ? 0 : typeof self != \"undefined\" ? self : typeof global != \"undefined\" ? global : typeof globalThis != \"undefined\" ? globalThis : void 0, He, L = class {\n    constructor(e, t){\n        this.code = e, this.message = t;\n    }\n    warn(...e) {\n        var t;\n        try {\n            if (He) {\n                He({\n                    ...this,\n                    args: e\n                });\n                return;\n            }\n            let r = ((t = new Error().stack) !== null && t !== void 0 ? t : \"\").replace(/^(?:.+?\\n){2}/gu, `\n`);\n            console.warn(this.message, ...e, r);\n        } catch  {}\n    }\n}, Xt = new L(\"W01\", \"Unable to initialize event under dispatching.\"), qt = new L(\"W02\", \"Assigning any falsy value to 'cancelBubble' property has no effect.\"), Gt = new L(\"W03\", \"Assigning any truthy value to 'returnValue' property has no effect.\"), Vt = new L(\"W04\", \"Unable to preventDefault on non-cancelable events.\"), Kt = new L(\"W05\", \"Unable to preventDefault inside passive event listener invocation.\"), Yt = new L(\"W06\", \"An event listener wasn't added because it has been added already: %o, %o\"), Re = new L(\"W07\", \"The %o option value was abandoned because the event listener wasn't added as duplicated.\"), Ne = new L(\"W08\", \"The 'callback' argument must be a function or an object that has 'handleEvent' method: %o\"), kn = new L(\"W09\", \"Event attribute handler must be a function: %o\"), _ = class {\n    static get NONE() {\n        return je;\n    }\n    static get CAPTURING_PHASE() {\n        return We;\n    }\n    static get AT_TARGET() {\n        return $e;\n    }\n    static get BUBBLING_PHASE() {\n        return Xe;\n    }\n    constructor(e, t){\n        Object.defineProperty(this, \"isTrusted\", {\n            value: !1,\n            enumerable: !0\n        });\n        let r = t != null ? t : {};\n        Te.set(this, {\n            type: String(e),\n            bubbles: !!r.bubbles,\n            cancelable: !!r.cancelable,\n            composed: !!r.composed,\n            target: null,\n            currentTarget: null,\n            stopPropagationFlag: !1,\n            stopImmediatePropagationFlag: !1,\n            canceledFlag: !1,\n            inPassiveListenerFlag: !1,\n            dispatchFlag: !1,\n            timeStamp: Date.now()\n        });\n    }\n    get type() {\n        return g(this).type;\n    }\n    get target() {\n        return g(this).target;\n    }\n    get srcElement() {\n        return g(this).target;\n    }\n    get currentTarget() {\n        return g(this).currentTarget;\n    }\n    composedPath() {\n        let e = g(this).currentTarget;\n        return e ? [\n            e\n        ] : [];\n    }\n    get NONE() {\n        return je;\n    }\n    get CAPTURING_PHASE() {\n        return We;\n    }\n    get AT_TARGET() {\n        return $e;\n    }\n    get BUBBLING_PHASE() {\n        return Xe;\n    }\n    get eventPhase() {\n        return g(this).dispatchFlag ? 2 : 0;\n    }\n    stopPropagation() {\n        g(this).stopPropagationFlag = !0;\n    }\n    get cancelBubble() {\n        return g(this).stopPropagationFlag;\n    }\n    set cancelBubble(e) {\n        e ? g(this).stopPropagationFlag = !0 : qt.warn();\n    }\n    stopImmediatePropagation() {\n        let e = g(this);\n        e.stopPropagationFlag = e.stopImmediatePropagationFlag = !0;\n    }\n    get bubbles() {\n        return g(this).bubbles;\n    }\n    get cancelable() {\n        return g(this).cancelable;\n    }\n    get returnValue() {\n        return !g(this).canceledFlag;\n    }\n    set returnValue(e) {\n        e ? Gt.warn() : qe(g(this));\n    }\n    preventDefault() {\n        qe(g(this));\n    }\n    get defaultPrevented() {\n        return g(this).canceledFlag;\n    }\n    get composed() {\n        return g(this).composed;\n    }\n    get isTrusted() {\n        return !1;\n    }\n    get timeStamp() {\n        return g(this).timeStamp;\n    }\n    initEvent(e, t = !1, r = !1) {\n        let n = g(this);\n        if (n.dispatchFlag) {\n            Xt.warn();\n            return;\n        }\n        Te.set(this, {\n            ...n,\n            type: String(e),\n            bubbles: !!t,\n            cancelable: !!r,\n            target: null,\n            currentTarget: null,\n            stopPropagationFlag: !1,\n            stopImmediatePropagationFlag: !1,\n            canceledFlag: !1\n        });\n    }\n}, je = 0, We = 1, $e = 2, Xe = 3, Te = new WeakMap;\nfunction g(e, t = \"this\") {\n    let r = Te.get(e);\n    return Pe(r != null, \"'%s' must be an object that Event constructor created, but got another one: %o\", t, e), r;\n}\nfunction qe(e) {\n    if (e.inPassiveListenerFlag) {\n        Kt.warn();\n        return;\n    }\n    if (!e.cancelable) {\n        Vt.warn();\n        return;\n    }\n    e.canceledFlag = !0;\n}\nObject.defineProperty(_, \"NONE\", {\n    enumerable: !0\n});\nObject.defineProperty(_, \"CAPTURING_PHASE\", {\n    enumerable: !0\n});\nObject.defineProperty(_, \"AT_TARGET\", {\n    enumerable: !0\n});\nObject.defineProperty(_, \"BUBBLING_PHASE\", {\n    enumerable: !0\n});\nvar we = Object.getOwnPropertyNames(_.prototype);\nfor(let e = 0; e < we.length; ++e)we[e] !== \"constructor\" && Object.defineProperty(_.prototype, we[e], {\n    enumerable: !0\n});\ntypeof M != \"undefined\" && typeof M.Event != \"undefined\" && Object.setPrototypeOf(_.prototype, M.Event.prototype);\nfunction Zt(e) {\n    return M.DOMException ? new M.DOMException(e, \"InvalidStateError\") : (N == null && (N = class Qe extends Error {\n        constructor(r){\n            super(r), Error.captureStackTrace && Error.captureStackTrace(this, Qe);\n        }\n        get code() {\n            return 11;\n        }\n        get name() {\n            return \"InvalidStateError\";\n        }\n    }, Object.defineProperties(N.prototype, {\n        code: {\n            enumerable: !0\n        },\n        name: {\n            enumerable: !0\n        }\n    }), Ve(N), Ve(N.prototype)), new N(e));\n}\nvar N, Ge = {\n    INDEX_SIZE_ERR: 1,\n    DOMSTRING_SIZE_ERR: 2,\n    HIERARCHY_REQUEST_ERR: 3,\n    WRONG_DOCUMENT_ERR: 4,\n    INVALID_CHARACTER_ERR: 5,\n    NO_DATA_ALLOWED_ERR: 6,\n    NO_MODIFICATION_ALLOWED_ERR: 7,\n    NOT_FOUND_ERR: 8,\n    NOT_SUPPORTED_ERR: 9,\n    INUSE_ATTRIBUTE_ERR: 10,\n    INVALID_STATE_ERR: 11,\n    SYNTAX_ERR: 12,\n    INVALID_MODIFICATION_ERR: 13,\n    NAMESPACE_ERR: 14,\n    INVALID_ACCESS_ERR: 15,\n    VALIDATION_ERR: 16,\n    TYPE_MISMATCH_ERR: 17,\n    SECURITY_ERR: 18,\n    NETWORK_ERR: 19,\n    ABORT_ERR: 20,\n    URL_MISMATCH_ERR: 21,\n    QUOTA_EXCEEDED_ERR: 22,\n    TIMEOUT_ERR: 23,\n    INVALID_NODE_TYPE_ERR: 24,\n    DATA_CLONE_ERR: 25\n};\nfunction Ve(e) {\n    let t = Object.keys(Ge);\n    for(let r = 0; r < t.length; ++r){\n        let n = t[r], s = Ge[n];\n        Object.defineProperty(e, n, {\n            get () {\n                return s;\n            },\n            configurable: !0,\n            enumerable: !0\n        });\n    }\n}\nvar ae = class extends _ {\n    static wrap(e) {\n        return new (tt(e))(e);\n    }\n    constructor(e){\n        super(e.type, {\n            bubbles: e.bubbles,\n            cancelable: e.cancelable,\n            composed: e.composed\n        }), e.cancelBubble && super.stopPropagation(), e.defaultPrevented && super.preventDefault(), et.set(this, {\n            original: e\n        });\n        let t = Object.keys(e);\n        for(let r = 0; r < t.length; ++r){\n            let n = t[r];\n            n in this || Object.defineProperty(this, n, rt(e, n));\n        }\n    }\n    stopPropagation() {\n        super.stopPropagation();\n        let { original: e } = I(this);\n        \"stopPropagation\" in e && e.stopPropagation();\n    }\n    get cancelBubble() {\n        return super.cancelBubble;\n    }\n    set cancelBubble(e) {\n        super.cancelBubble = e;\n        let { original: t } = I(this);\n        \"cancelBubble\" in t && (t.cancelBubble = e);\n    }\n    stopImmediatePropagation() {\n        super.stopImmediatePropagation();\n        let { original: e } = I(this);\n        \"stopImmediatePropagation\" in e && e.stopImmediatePropagation();\n    }\n    get returnValue() {\n        return super.returnValue;\n    }\n    set returnValue(e) {\n        super.returnValue = e;\n        let { original: t } = I(this);\n        \"returnValue\" in t && (t.returnValue = e);\n    }\n    preventDefault() {\n        super.preventDefault();\n        let { original: e } = I(this);\n        \"preventDefault\" in e && e.preventDefault();\n    }\n    get timeStamp() {\n        let { original: e } = I(this);\n        return \"timeStamp\" in e ? e.timeStamp : super.timeStamp;\n    }\n}, et = new WeakMap;\nfunction I(e) {\n    let t = et.get(e);\n    return Pe(t != null, \"'this' is expected an Event object, but got\", e), t;\n}\nvar ie = new WeakMap;\nie.set(Object.prototype, ae);\ntypeof M != \"undefined\" && typeof M.Event != \"undefined\" && ie.set(M.Event.prototype, ae);\nfunction tt(e) {\n    let t = Object.getPrototypeOf(e);\n    if (t == null) return ae;\n    let r = ie.get(t);\n    return r == null && (r = Jt(tt(t), t), ie.set(t, r)), r;\n}\nfunction Jt(e, t) {\n    class r extends e {\n    }\n    let n = Object.keys(t);\n    for(let s = 0; s < n.length; ++s)Object.defineProperty(r.prototype, n[s], rt(t, n[s]));\n    return r;\n}\nfunction rt(e, t) {\n    let r = Object.getOwnPropertyDescriptor(e, t);\n    return {\n        get () {\n            let n = I(this).original, s = n[t];\n            return typeof s == \"function\" ? s.bind(n) : s;\n        },\n        set (n) {\n            let s = I(this).original;\n            s[t] = n;\n        },\n        configurable: r.configurable,\n        enumerable: r.enumerable\n    };\n}\nfunction Qt(e, t, r, n, s, a) {\n    return {\n        callback: e,\n        flags: (t ? 1 : 0) | (r ? 2 : 0) | (n ? 4 : 0),\n        signal: s,\n        signalListener: a\n    };\n}\nfunction er(e) {\n    e.flags |= 8;\n}\nfunction nt(e) {\n    return (e.flags & 1) === 1;\n}\nfunction st(e) {\n    return (e.flags & 2) === 2;\n}\nfunction it(e) {\n    return (e.flags & 4) === 4;\n}\nfunction tr(e) {\n    return (e.flags & 8) === 8;\n}\nfunction rr({ callback: e }, t, r) {\n    try {\n        typeof e == \"function\" ? e.call(t, r) : typeof e.handleEvent == \"function\" && e.handleEvent(r);\n    } catch (n) {\n        $t(n);\n    }\n}\nfunction at({ listeners: e }, t, r) {\n    for(let n = 0; n < e.length; ++n)if (e[n].callback === t && nt(e[n]) === r) return n;\n    return -1;\n}\nfunction nr(e, t, r, n, s, a) {\n    let l;\n    a && (l = ot.bind(null, e, t, r), a.addEventListener(\"abort\", l));\n    let u = Qt(t, r, n, s, a, l);\n    return e.cow ? (e.cow = !1, e.listeners = [\n        ...e.listeners,\n        u\n    ]) : e.listeners.push(u), u;\n}\nfunction ot(e, t, r) {\n    let n = at(e, t, r);\n    return n !== -1 ? lt(e, n) : !1;\n}\nfunction lt(e, t, r = !1) {\n    let n = e.listeners[t];\n    return er(n), n.signal && n.signal.removeEventListener(\"abort\", n.signalListener), e.cow && !r ? (e.cow = !1, e.listeners = e.listeners.filter((s, a)=>a !== t), !1) : (e.listeners.splice(t, 1), !0);\n}\nfunction sr() {\n    return Object.create(null);\n}\nfunction ir(e, t) {\n    var r;\n    return (r = e[t]) !== null && r !== void 0 ? r : e[t] = {\n        attrCallback: void 0,\n        attrListener: void 0,\n        cow: !1,\n        listeners: []\n    };\n}\nvar oe = class {\n    constructor(){\n        ut.set(this, sr());\n    }\n    addEventListener(e, t, r) {\n        let n = Me(this), { callback: s, capture: a, once: l, passive: u, signal: c, type: h } = ar(e, t, r);\n        if (s == null || c != null && c.aborted) return;\n        let m = ir(n, h), k = at(m, s, a);\n        if (k !== -1) {\n            lr(m.listeners[k], u, l, c);\n            return;\n        }\n        nr(m, s, a, u, l, c);\n    }\n    removeEventListener(e, t, r) {\n        let n = Me(this), { callback: s, capture: a, type: l } = or(e, t, r), u = n[l];\n        s != null && u && ot(u, s, a);\n    }\n    dispatchEvent(e) {\n        let t = Me(this)[String(e.type)];\n        if (t == null) return !0;\n        let r = e instanceof _ ? e : ae.wrap(e), n = g(r, \"event\");\n        if (n.dispatchFlag) throw Zt(\"This event has been in dispatching.\");\n        if (n.dispatchFlag = !0, n.target = n.currentTarget = this, !n.stopPropagationFlag) {\n            let { cow: s, listeners: a } = t;\n            t.cow = !0;\n            for(let l = 0; l < a.length; ++l){\n                let u = a[l];\n                if (!tr(u) && (it(u) && lt(t, l, !s) && (l -= 1), n.inPassiveListenerFlag = st(u), rr(u, this, r), n.inPassiveListenerFlag = !1, n.stopImmediatePropagationFlag)) break;\n            }\n            s || (t.cow = !1);\n        }\n        return n.target = null, n.currentTarget = null, n.stopImmediatePropagationFlag = !1, n.stopPropagationFlag = !1, n.dispatchFlag = !1, !n.canceledFlag;\n    }\n}, ut = new WeakMap;\nfunction Me(e, t = \"this\") {\n    let r = ut.get(e);\n    return Pe(r != null, \"'%s' must be an object that EventTarget constructor created, but got another one: %o\", t, e), r;\n}\nfunction ar(e, t, r) {\n    var n;\n    return dt(t), typeof r == \"object\" && r !== null ? {\n        type: String(e),\n        callback: t != null ? t : void 0,\n        capture: !!r.capture,\n        passive: !!r.passive,\n        once: !!r.once,\n        signal: (n = r.signal) !== null && n !== void 0 ? n : void 0\n    } : {\n        type: String(e),\n        callback: t != null ? t : void 0,\n        capture: !!r,\n        passive: !1,\n        once: !1,\n        signal: void 0\n    };\n}\nfunction or(e, t, r) {\n    return dt(t), typeof r == \"object\" && r !== null ? {\n        type: String(e),\n        callback: t != null ? t : void 0,\n        capture: !!r.capture\n    } : {\n        type: String(e),\n        callback: t != null ? t : void 0,\n        capture: !!r\n    };\n}\nfunction dt(e) {\n    if (!(typeof e == \"function\" || typeof e == \"object\" && e !== null && typeof e.handleEvent == \"function\")) {\n        if (e == null || typeof e == \"object\") {\n            Ne.warn(e);\n            return;\n        }\n        throw new TypeError(Ze(Ne.message, [\n            e\n        ]));\n    }\n}\nfunction lr(e, t, r, n) {\n    Yt.warn(nt(e) ? \"capture\" : \"bubble\", e.callback), st(e) !== t && Re.warn(\"passive\"), it(e) !== r && Re.warn(\"once\"), e.signal !== n && Re.warn(\"signal\");\n}\nvar Ae = Object.getOwnPropertyNames(oe.prototype);\nfor(let e = 0; e < Ae.length; ++e)Ae[e] !== \"constructor\" && Object.defineProperty(oe.prototype, Ae[e], {\n    enumerable: !0\n});\ntypeof M != \"undefined\" && typeof M.EventTarget != \"undefined\" && Object.setPrototypeOf(oe.prototype, M.EventTarget.prototype);\nvar ur = Ft(Wt()), Ue = 30720, V = 512e3, K = 256, X = (e, { minChunkSize: t = K, maxChunkSize: r = V } = {})=>e == null || typeof e == \"number\" && e >= 256 && e % 256 === 0 && e >= t && e <= r, q = (e, { minChunkSize: t = K, maxChunkSize: r = V } = {})=>new TypeError(`chunkSize ${e} must be a positive number in multiples of 256, between ${t} and ${r}`), dr = class {\n    constructor(e, t = {}){\n        this.readableStream = e;\n        var r, n, s;\n        if (!X(t.defaultChunkSize, t)) throw q(t.defaultChunkSize, t);\n        this.defaultChunkSize = (r = t.defaultChunkSize) != null ? r : Ue, this.minChunkSize = (n = t.minChunkSize) != null ? n : K, this.maxChunkSize = (s = t.maxChunkSize) != null ? s : V;\n    }\n    get chunkSize() {\n        var e;\n        return (e = this._chunkSize) != null ? e : this.defaultChunkSize;\n    }\n    set chunkSize(e) {\n        if (!X(e, this)) throw q(e, this);\n        this._chunkSize = e;\n    }\n    get chunkByteSize() {\n        return this.chunkSize * 1024;\n    }\n    get error() {\n        return this._error;\n    }\n    async *[Symbol.asyncIterator]() {\n        let e, t = this.readableStream.getReader();\n        try {\n            for(;;){\n                let { done: r, value: n } = await t.read();\n                if (r) {\n                    if (e) {\n                        let a = e;\n                        e = void 0, yield a;\n                    }\n                    break;\n                }\n                let s = n instanceof Uint8Array ? new Blob([\n                    n\n                ], {\n                    type: \"application/octet-stream\"\n                }) : n;\n                for(e = e ? new Blob([\n                    e,\n                    s\n                ]) : s; e;)if (e.size === this.chunkByteSize) {\n                    let a = e;\n                    e = void 0, yield a;\n                    break;\n                } else {\n                    if (e.size < this.chunkByteSize) break;\n                    {\n                        let a = e.slice(0, this.chunkByteSize);\n                        e = e.slice(this.chunkByteSize), yield a;\n                    }\n                }\n            }\n        } catch (r) {\n            this._error = r;\n        } finally{\n            if (e) {\n                let r = e;\n                e = void 0, yield r;\n            }\n            t.releaseLock();\n            return;\n        }\n    }\n}, pr = class {\n    constructor(e, t = {}){\n        this.file = e;\n        var r, n, s;\n        if (!X(t.defaultChunkSize, t)) throw q(t.defaultChunkSize, t);\n        this.defaultChunkSize = (r = t.defaultChunkSize) != null ? r : Ue, this.minChunkSize = (n = t.minChunkSize) != null ? n : K, this.maxChunkSize = (s = t.maxChunkSize) != null ? s : V;\n    }\n    get chunkSize() {\n        var e;\n        return (e = this._chunkSize) != null ? e : this.defaultChunkSize;\n    }\n    set chunkSize(e) {\n        if (!X(e, this)) throw q(e, this);\n        this._chunkSize = e;\n    }\n    get chunkByteSize() {\n        return this.chunkSize * 1024;\n    }\n    get error() {\n        return this._error;\n    }\n    async *[Symbol.asyncIterator]() {\n        let e = new FileReader, t = 0, r = ()=>new Promise((n)=>{\n                if (t >= this.file.size) {\n                    n(void 0);\n                    return;\n                }\n                let s = Math.min(this.chunkByteSize, this.file.size - t);\n                e.onload = ()=>{\n                    e.result !== null ? n(new Blob([\n                        e.result\n                    ], {\n                        type: \"application/octet-stream\"\n                    })) : n(void 0);\n                }, e.readAsArrayBuffer(this.file.slice(t, t + s));\n            });\n        try {\n            for(;;){\n                let n = await r();\n                if (n) t += n.size, yield n;\n                else break;\n            }\n        } catch (n) {\n            this._error = n;\n        }\n    }\n}, cr = [\n    200,\n    201,\n    202,\n    204,\n    308\n], pt = [\n    408,\n    502,\n    503,\n    504\n], hr = [\n    308\n], ct = (e, t)=>!!e && cr.includes(e.statusCode), fr = (e, { retryCodes: t = pt })=>!e || t.includes(e.statusCode), gr = (e, t)=>t.attemptCount >= t.attempts || !(ct(e) || fr(e, t)), mr = (e, t)=>{\n    var r;\n    if (!e || !hr.includes(e.statusCode) || !((r = e.headers) != null && r.range)) return !1;\n    let n = e.headers.range.match(/bytes=(\\d+)-(\\d+)/);\n    return n ? parseInt(n[2], 10) < t.currentChunkEndByte : !1;\n}, Le = class {\n    static createUpload(e) {\n        return new Le(e);\n    }\n    constructor(e){\n        if (this.eventTarget = new oe, this.endpoint = e.endpoint, this.file = e.file, this.headers = e.headers || {}, this.method = e.method || \"PUT\", this.attempts = e.attempts || 5, this.delayBeforeAttempt = e.delayBeforeAttempt || 1, this.retryCodes = e.retryCodes || pt, this.dynamicChunkSize = e.dynamicChunkSize || !1, this.maxFileBytes = (e.maxFileSize || 0) * 1024, this.chunkCount = 0, this.attemptCount = 0, this._offline =  false && 0, this._paused = !1, this.success = !1, this.nextChunkRangeStart = 0, e.useLargeFileWorkaround) {\n            let t = (r)=>{\n                this.chunkedIterable.error && (console.warn(`Unable to read file of size ${this.file.size} bytes via a ReadableStream. Falling back to in-memory FileReader!`), r.stopImmediatePropagation(), this.chunkedIterable = new pr(this.file, {\n                    ...e,\n                    defaultChunkSize: e.chunkSize\n                }), this.chunkedIterator = this.chunkedIterable[Symbol.asyncIterator](), this.getEndpoint().then(()=>{\n                    this.sendChunks();\n                }).catch((n)=>{\n                    let s = n != null && n.message ? `: ${n.message}` : \"\";\n                    this.dispatch(\"error\", {\n                        message: `Failed to get endpoint${s}`\n                    });\n                }), this.off(\"error\", t));\n            };\n            this.on(\"error\", t);\n        }\n        this.chunkedIterable = new dr(this.file.stream(), {\n            ...e,\n            defaultChunkSize: e.chunkSize\n        }), this.chunkedIterator = this.chunkedIterable[Symbol.asyncIterator](), this.totalChunks = Math.ceil(this.file.size / this.chunkByteSize), this.validateOptions(), this.getEndpoint().then(()=>this.sendChunks()).catch((t)=>{\n            let r = t != null && t.message ? `: ${t.message}` : \"\";\n            this.dispatch(\"error\", {\n                message: `Failed to get endpoint${r}`\n            });\n        }),  false && (0);\n    }\n    get maxChunkSize() {\n        var e, t;\n        return (t = (e = this.chunkedIterable) == null ? void 0 : e.maxChunkSize) != null ? t : V;\n    }\n    get minChunkSize() {\n        var e, t;\n        return (t = (e = this.chunkedIterable) == null ? void 0 : e.minChunkSize) != null ? t : K;\n    }\n    get chunkSize() {\n        var e, t;\n        return (t = (e = this.chunkedIterable) == null ? void 0 : e.chunkSize) != null ? t : Ue;\n    }\n    set chunkSize(e) {\n        this.chunkedIterable.chunkSize = e;\n    }\n    get chunkByteSize() {\n        return this.chunkedIterable.chunkByteSize;\n    }\n    get totalChunkSize() {\n        return Math.ceil(this.file.size / this.chunkByteSize);\n    }\n    on(e, t) {\n        this.eventTarget.addEventListener(e, t);\n    }\n    once(e, t) {\n        this.eventTarget.addEventListener(e, t, {\n            once: !0\n        });\n    }\n    off(e, t) {\n        this.eventTarget.removeEventListener(e, t);\n    }\n    get offline() {\n        return this._offline;\n    }\n    get paused() {\n        return this._paused;\n    }\n    abort() {\n        var e;\n        this.pause(), (e = this.currentXhr) == null || e.abort();\n    }\n    pause() {\n        this._paused = !0;\n    }\n    resume() {\n        this._paused && (this._paused = !1, this.sendChunks());\n    }\n    get successfulPercentage() {\n        return this.nextChunkRangeStart / this.file.size;\n    }\n    dispatch(e, t) {\n        let r = new CustomEvent(e, {\n            detail: t\n        });\n        this.eventTarget.dispatchEvent(r);\n    }\n    validateOptions() {\n        if (!this.endpoint || typeof this.endpoint != \"function\" && typeof this.endpoint != \"string\") throw new TypeError(\"endpoint must be defined as a string or a function that returns a promise\");\n        if (!(this.file instanceof File)) throw new TypeError(\"file must be a File object\");\n        if (this.headers && typeof this.headers != \"function\" && typeof this.headers != \"object\") throw new TypeError(\"headers must be null, an object, or a function that returns an object or a promise\");\n        if (!X(this.chunkSize, {\n            maxChunkSize: this.maxChunkSize,\n            minChunkSize: this.minChunkSize\n        })) throw q(this.chunkSize, {\n            maxChunkSize: this.maxChunkSize,\n            minChunkSize: this.minChunkSize\n        });\n        if (this.maxChunkSize && (typeof this.maxChunkSize != \"number\" || this.maxChunkSize < 256 || this.maxChunkSize % 256 !== 0 || this.maxChunkSize < this.chunkSize || this.maxChunkSize < this.minChunkSize)) throw new TypeError(`maxChunkSize must be a positive number in multiples of 256, and larger than or equal to both ${this.minChunkSize} and ${this.chunkSize}`);\n        if (this.minChunkSize && (typeof this.minChunkSize != \"number\" || this.minChunkSize < 256 || this.minChunkSize % 256 !== 0 || this.minChunkSize > this.chunkSize || this.minChunkSize > this.maxChunkSize)) throw new TypeError(`minChunkSize must be a positive number in multiples of 256, and smaller than ${this.chunkSize} and ${this.maxChunkSize}`);\n        if (this.maxFileBytes > 0 && this.maxFileBytes < this.file.size) throw new Error(`file size exceeds maximum (${this.file.size} > ${this.maxFileBytes})`);\n        if (this.attempts && (typeof this.attempts != \"number\" || this.attempts <= 0)) throw new TypeError(\"retries must be a positive number\");\n        if (this.delayBeforeAttempt && (typeof this.delayBeforeAttempt != \"number\" || this.delayBeforeAttempt < 0)) throw new TypeError(\"delayBeforeAttempt must be a positive number\");\n    }\n    getEndpoint() {\n        return typeof this.endpoint == \"string\" ? (this.endpointValue = this.endpoint, Promise.resolve(this.endpoint)) : this.endpoint(this.file).then((e)=>{\n            if (this.endpointValue = e, typeof e != \"string\") throw new TypeError(\"endpoint must return a string\");\n            return this.endpointValue;\n        });\n    }\n    xhrPromise(e) {\n        let t = (r)=>{\n            r.upload.onprogress = (n)=>{\n                var s;\n                let a = this.totalChunks - this.chunkCount, l = (this.file.size - this.nextChunkRangeStart) / this.file.size / a, c = n.loaded / ((s = n.total) != null ? s : this.chunkByteSize) * l;\n                this.dispatch(\"progress\", Math.min((this.successfulPercentage + c) * 100, 100));\n            };\n        };\n        return new Promise((r, n)=>{\n            this.currentXhr = (0, ur.default)({\n                ...e,\n                beforeSend: t\n            }, (s, a)=>(this.currentXhr = void 0, s ? n(s) : r(a)));\n        });\n    }\n    async sendChunk(e) {\n        let t = this.nextChunkRangeStart, r = t + e.size - 1, s = {\n            ...await (typeof this.headers == \"function\" ? this.headers() : this.headers),\n            \"Content-Type\": this.file.type,\n            \"Content-Range\": `bytes ${t}-${r}/${this.file.size}`\n        };\n        return this.dispatch(\"attempt\", {\n            chunkNumber: this.chunkCount,\n            totalChunks: this.totalChunks,\n            chunkSize: this.chunkSize\n        }), this.xhrPromise({\n            headers: s,\n            url: this.endpointValue,\n            method: this.method,\n            body: e\n        });\n    }\n    async sendChunkWithRetries(e) {\n        let t = async (l, u)=>{\n            var c;\n            let m = (new Date().getTime() - this.lastChunkStart.getTime()) / 1e3;\n            if (this.dispatch(\"chunkSuccess\", {\n                chunk: this.chunkCount,\n                chunkSize: this.chunkSize,\n                attempts: this.attemptCount,\n                timeInterval: m,\n                response: l\n            }), this.attemptCount = 0, this.chunkCount = ((c = this.chunkCount) != null ? c : 0) + 1, this.nextChunkRangeStart = this.nextChunkRangeStart + this.chunkByteSize, this.dynamicChunkSize) {\n                let k = this.chunkSize;\n                m < 10 ? k = Math.min(this.chunkSize * 2, this.maxChunkSize) : m > 30 && (k = Math.max(this.chunkSize / 2, this.minChunkSize)), this.chunkSize = Math.ceil(k / 256) * 256;\n                let ye = (this.file.size - this.nextChunkRangeStart) / this.chunkByteSize;\n                this.totalChunks = Math.ceil(this.chunkCount + ye);\n            }\n            return !0;\n        }, r = async (l, u)=>(this.dispatch(\"progress\", Math.min(this.successfulPercentage * 100, 100)), this.dispatch(\"error\", {\n                message: `Server responded with ${l.statusCode}. Stopping upload.`,\n                chunk: this.chunkCount,\n                attempts: this.attemptCount,\n                response: l\n            }), !1), n = async (l, u)=>(this.dispatch(\"attemptFailure\", {\n                message: `An error occured uploading chunk ${this.chunkCount}. ${this.attempts - this.attemptCount} retries left.`,\n                chunkNumber: this.chunkCount,\n                attemptsLeft: this.attempts - this.attemptCount,\n                response: l\n            }), new Promise((c)=>{\n                setTimeout(async ()=>{\n                    if (this._paused || this.offline) {\n                        this.pendingChunk = e, c(!1);\n                        return;\n                    }\n                    let h = await this.sendChunkWithRetries(e);\n                    c(h);\n                }, this.delayBeforeAttempt * 1e3);\n            })), s;\n        try {\n            this.attemptCount = this.attemptCount + 1, this.lastChunkStart = new Date, s = await this.sendChunk(e);\n        } catch (l) {\n            typeof (l == null ? void 0 : l.statusCode) == \"number\" && (s = l);\n        }\n        let a = {\n            retryCodes: this.retryCodes,\n            attemptCount: this.attemptCount,\n            attempts: this.attempts,\n            currentChunkEndByte: this.nextChunkRangeStart + e.size - 1\n        };\n        return mr(s, a) ? n(s, e) : ct(s, a) ? t(s, e) : gr(s, a) ? r(s, e) : n(s, e);\n    }\n    async sendChunks() {\n        if (this.pendingChunk && !(this._paused || this.offline)) {\n            let e = this.pendingChunk;\n            this.pendingChunk = void 0;\n            let t = await this.sendChunkWithRetries(e);\n            this.success && t && this.dispatch(\"success\");\n        }\n        for(; !(this.success || this._paused || this.offline);){\n            let { value: e, done: t } = await this.chunkedIterator.next(), r = !e && t;\n            if (e && (r = await this.sendChunkWithRetries(e)), this.chunkedIterable.error) {\n                r = !1, this.dispatch(\"error\", {\n                    message: `Unable to read file of size ${this.file.size} bytes. Try loading from another browser.`\n                });\n                return;\n            }\n            if (this.success = !!t, this.success && r && this.dispatch(\"success\"), !r) return;\n        }\n    }\n};\nvar br = Object.defineProperty, gt = (e)=>{\n    throw TypeError(e);\n}, vr = (e, t)=>{\n    for(var r in t)br(e, r, {\n        get: t[r],\n        enumerable: !0\n    });\n}, mt = (e, t, r)=>t.has(e) || gt(\"Cannot \" + r), i = (e, t, r)=>(mt(e, t, \"read from private field\"), r ? r.call(e) : t.get(e)), E = (e, t, r)=>t.has(e) ? gt(\"Cannot add the same private member more than once\") : t instanceof WeakSet ? t.add(e) : t.set(e, r), x = (e, t, r, n)=>(mt(e, t, \"write to private field\"), n ? n.call(e, r) : t.set(e, r), r), ze = {};\nvr(ze, {\n    ProgressTypes: ()=>j\n});\nvar j = {\n    BAR: \"bar\",\n    RADIAL: \"radial\",\n    PERCENTAGE: \"percentage\"\n}, pe = class {\n    addEventListener() {}\n    removeEventListener() {}\n    dispatchEvent(e) {\n        return !0;\n    }\n};\nif (typeof DocumentFragment == \"undefined\") {\n    class e extends pe {\n    }\n    globalThis.DocumentFragment = e;\n}\nvar Oe = class extends pe {\n}, yr = class extends pe {\n}, Er = {\n    get (e) {},\n    define (e, t, r) {},\n    getName (e) {\n        return null;\n    },\n    upgrade (e) {},\n    whenDefined (e) {\n        return Promise.resolve(Oe);\n    }\n}, ue, xr = class {\n    constructor(e, t = {}){\n        E(this, ue), x(this, ue, t == null ? void 0 : t.detail);\n    }\n    get detail() {\n        return i(this, ue);\n    }\n    initCustomEvent() {}\n};\nue = new WeakMap;\nfunction kr(e, t) {\n    return new Oe;\n}\nvar bt = {\n    document: {\n        createElement: kr\n    },\n    DocumentFragment,\n    customElements: Er,\n    CustomEvent: xr,\n    EventTarget: pe,\n    HTMLElement: Oe,\n    HTMLVideoElement: yr\n}, vt =  true || 0, p = vt ? bt : globalThis, P = vt ? bt.document : globalThis.document, yt = (e, t)=>e ? e.closest(t) || yt(e.getRootNode().host, t) : null, H = (e)=>{\n    let t = e.getAttribute(\"mux-uploader\");\n    return t ? document.getElementById(t) : yt(e, \"mux-uploader\");\n}, Et = P.createElement(\"template\");\nEt.innerHTML = `\n<style>\n  :host {\n    position: relative;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border: 2px dashed #ccc;\n    padding: 2.5rem 2rem;\n    border-radius: .25rem;\n  }\n\n  slot[name='heading'] > * {\n    margin-bottom: 0.75rem;\n    font-size: 1.75rem;\n    text-align: center;\n  }\n\n  slot[name='separator'] > * {\n    margin-bottom: 0.75rem;\n  }\n\n  #overlay {\n    display: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  :host([active][overlay]) > #overlay {\n    background: var(--overlay-background-color, rgba(226, 253, 255, 0.95));\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  :host([file-ready])::part(heading),\n  :host([file-ready])::part(separator) {\n    display: none;\n  }\n</style>\n\n<slot name=\"heading\" part=\"heading\">\n  <span>Drop a video file here to upload</span>\n</slot>\n<slot name=\"separator\" part=\"separator\">\n  <span>or</span>\n</slot>\n<slot></slot>\n\n<div id=\"overlay\">\n  <h1 id=\"overlay-label\"></h1>\n</div>\n`;\nvar _e = {\n    MUX_UPLOADER: \"mux-uploader\",\n    OVERLAY_TEXT: \"overlay-text\"\n}, de, w, Y, ht = class extends p.HTMLElement {\n    constructor(){\n        super(), E(this, de), E(this, w), E(this, Y);\n        let e = this.attachShadow({\n            mode: \"open\"\n        });\n        e.appendChild(Et.content.cloneNode(!0)), x(this, de, e.getElementById(\"overlay-label\"));\n    }\n    connectedCallback() {\n        if (x(this, w, H(this)), x(this, Y, new AbortController), i(this, w)) {\n            let e = {\n                signal: i(this, Y).signal\n            };\n            i(this, w).addEventListener(\"file-ready\", ()=>this.toggleAttribute(\"file-ready\", !0), e), i(this, w).addEventListener(\"uploadstart\", ()=>this.toggleAttribute(\"upload-in-progress\", !0), e), i(this, w).addEventListener(\"success\", ()=>{\n                this.toggleAttribute(\"upload-in-progress\", !1), this.toggleAttribute(\"upload-complete\", !0);\n            }, e), i(this, w).addEventListener(\"reset\", ()=>{\n                this.toggleAttribute(\"file-ready\", !1), this.toggleAttribute(\"upload-in-progress\", !1), this.toggleAttribute(\"upload-complete\", !1);\n            }, e), this.setupDragEvents(e), this.toggleAttribute(\"upload-in-progress\", i(this, w).hasAttribute(\"upload-in-progress\")), this.toggleAttribute(\"upload-complete\", i(this, w).hasAttribute(\"upload-complete\")), this.toggleAttribute(\"file-ready\", i(this, w).hasAttribute(\"file-ready\"));\n        }\n    }\n    disconnectedCallback() {\n        var e;\n        (e = i(this, Y)) == null || e.abort();\n    }\n    attributeChangedCallback(e, t, r) {\n        e === _e.OVERLAY_TEXT && t !== r ? i(this, de).innerHTML = r != null ? r : \"\" : e === \"active\" && this.hasAttribute(\"overlay\") && r != null && (this._currentDragTarget = this);\n    }\n    static get observedAttributes() {\n        return [\n            _e.OVERLAY_TEXT,\n            _e.MUX_UPLOADER,\n            \"active\"\n        ];\n    }\n    setupDragEvents(e) {\n        this.addEventListener(\"dragenter\", (t)=>{\n            this._currentDragTarget = t.target, t.preventDefault(), t.stopPropagation(), this.toggleAttribute(\"active\", !0);\n        }, e), this.addEventListener(\"dragleave\", (t)=>{\n            this._currentDragTarget === t.target && (this._currentDragTarget = void 0, this.toggleAttribute(\"active\", !1));\n        }, e), this.addEventListener(\"dragover\", (t)=>{\n            t.preventDefault(), t.stopPropagation();\n        }, e), this.addEventListener(\"drop\", (t)=>{\n            var r;\n            t.preventDefault(), t.stopPropagation();\n            let { dataTransfer: n } = t, { files: s } = n, a = s[0];\n            ((r = i(this, w)) != null ? r : this).dispatchEvent(new CustomEvent(\"file-ready\", {\n                composed: !0,\n                bubbles: !0,\n                detail: a\n            })), this.removeAttribute(\"active\");\n        }, e);\n    }\n};\nde = new WeakMap, w = new WeakMap, Y = new WeakMap;\np.customElements.get(\"mux-uploader-drop\") || (p.customElements.define(\"mux-uploader-drop\", ht), p.MuxUploaderDropElement = ht);\nfunction Cr(e) {\n    return `${Math.floor(e)}%`;\n}\nvar xt = P.createElement(\"template\"), Sr = \"Media upload progress bar\";\nxt.innerHTML = `\n<style>\n  :host {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  }\n\n  .bar-type {\n    background: var(--progress-bar-background-color, #e6e6e6);\n    border-radius: var(--progress-bar-border-radius, 100px);\n    height: var(--progress-bar-height, 4px);\n    width: 100%;\n  }\n\n  .radial-type,\n  .bar-type,\n  #percentage-type,\n  :host([type=\"bar\"][upload-error]) #percentage-type {\n    display: none;\n  }\n\n  :host([type=\"radial\"][upload-in-progress]) .radial-type,\n  :host([type=\"bar\"][upload-in-progress]) .bar-type {\n    display: block;\n  }\n\n  :host([type=\"percentage\"][upload-in-progress]) #percentage-type {\n    display: var(--progress-percentage-display, block);\n  }\n\n  :host([type=\"bar\"][upload-error]) .progress-bar {\n    background: #e22c3e;\n  }\n\n  .progress-bar {\n    box-shadow: var(--progress-bar-box-shadow, 0 10px 40px -10px #fff);\n    border-radius: var(--progress-bar-border-radius, 100px);\n    background: var(--progress-bar-fill-color, #000000);\n    height: var(--progress-bar-height, 4px);\n    width: 0%;\n    transition: width 0.25s;\n  }\n\n  circle {\n    stroke: var(--progress-radial-fill-color, black);\n    stroke-width: 6;  /* Thickness of the circle */\n    fill: transparent; /* Make inside of the circle see-through */\n\n    /* Animation */\n    transition: 0.35s;\n    transform: rotate(-90deg);\n    transform-origin: 50% 50%;\n    -webkit-transform-origin: 50% 50%;\n    -moz-transform-origin: 50% 50%;\n  }\n\n  #percentage-type {\n    font-size: inherit;\n    margin: 0 0 1em;\n  }\n</style>\n\n<slot></slot>\n\n<p id=\"percentage-type\"></p>\n<div class=\"bar-type\">\n  <div role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" class=\"progress-bar\" id=\"progress-bar\" tabindex=\"0\"></div>\n</div>\n<div class=\"radial-type\">\n  <svg\n    width=\"120\"\n    height=\"120\">\n    <!-- To prevent overflow of the SVG wrapper, radius must be  (svgWidth / 2) - (circleStrokeWidth * 2)\n      or use overflow: visible on the svg.-->\n    <circle\n      r=\"52\"\n      cx=\"60\"\n      cy=\"60\"\n    />\n  <svg>\n</div>\n`;\nvar T, Z, Rr = class extends p.HTMLElement {\n    constructor(){\n        var e, t, r, n;\n        super(), E(this, T), E(this, Z), this.onUploadStart = ()=>{\n            var s;\n            (s = this.progressBar) == null || s.focus(), this.toggleAttribute(\"upload-in-progress\", !0);\n        }, this.onProgress = (s)=>{\n            var a;\n            let l = s.detail;\n            switch((a = this.progressBar) == null || a.setAttribute(\"aria-valuenow\", `${Math.floor(l)}`), this.getAttribute(\"type\")){\n                case j.BAR:\n                    {\n                        this.progressBar && (this.progressBar.style.width = `${l}%`);\n                        break;\n                    }\n                case j.RADIAL:\n                    {\n                        if (this.svgCircle) {\n                            let u = this.getCircumference() - l / 100 * this.getCircumference();\n                            this.svgCircle.style.strokeDashoffset = u.toString();\n                        }\n                        break;\n                    }\n                case j.PERCENTAGE:\n                    {\n                        this.uploadPercentage && (this.uploadPercentage.innerHTML = Cr(l));\n                        break;\n                    }\n            }\n        }, this.onSuccess = ()=>{\n            this.toggleAttribute(\"upload-in-progress\", !1), this.toggleAttribute(\"upload-complete\", !0);\n        }, this.onReset = ()=>{\n            this.toggleAttribute(\"upload-in-progress\", !1), this.uploadPercentage && (this.uploadPercentage.innerHTML = \"\"), this.svgCircle && (this.svgCircle.style.strokeDashoffset = `${this.getCircumference()}`);\n        }, this.attachShadow({\n            mode: \"open\"\n        }).appendChild(xt.content.cloneNode(!0)), this.svgCircle = (e = this.shadowRoot) == null ? void 0 : e.querySelector(\"circle\"), this.progressBar = (t = this.shadowRoot) == null ? void 0 : t.getElementById(\"progress-bar\"), this.uploadPercentage = (r = this.shadowRoot) == null ? void 0 : r.getElementById(\"percentage-type\"), (n = this.progressBar) == null || n.setAttribute(\"aria-description\", Sr);\n    }\n    connectedCallback() {\n        if (this.setDefaultType(), x(this, T, H(this)), x(this, Z, new AbortController), i(this, T)) {\n            let e = {\n                signal: i(this, Z).signal\n            };\n            i(this, T).addEventListener(\"uploadstart\", this.onUploadStart, e), i(this, T).addEventListener(\"reset\", this.onReset), i(this, T).addEventListener(\"progress\", this.onProgress), i(this, T).addEventListener(\"success\", this.onSuccess), this.toggleAttribute(\"upload-in-progress\", i(this, T).hasAttribute(\"upload-in-progress\")), this.toggleAttribute(\"upload-complete\", i(this, T).hasAttribute(\"upload-complete\"));\n        }\n    }\n    disconnectedCallback() {\n        var e;\n        (e = i(this, Z)) == null || e.abort();\n    }\n    getRadius() {\n        var e;\n        return Number((e = this.svgCircle) == null ? void 0 : e.getAttribute(\"r\"));\n    }\n    getCircumference() {\n        return this.getRadius() * 2 * Math.PI;\n    }\n    setDefaultType() {\n        let e = this.getAttribute(\"type\");\n        e || this.setAttribute(\"type\", j.BAR), e === j.RADIAL && this.svgCircle && (this.svgCircle.style.strokeDasharray = `${this.getCircumference()} ${this.getCircumference()}`, this.svgCircle.style.strokeDashoffset = `${this.getCircumference()}`);\n    }\n};\nT = new WeakMap, Z = new WeakMap;\np.customElements.get(\"mux-uploader-progress\") || p.customElements.define(\"mux-uploader-progress\", Rr);\nvar kt = P.createElement(\"template\");\nkt.innerHTML = `\n<style>\n\n:host([upload-error]) {\n  color: #e22c3e;\n}\n</style>\n\n<span id=\"status-message\" role=\"status\" aria-live=\"polite\"></span>\n`;\nvar R, J, wr = class extends p.HTMLElement {\n    constructor(){\n        var e;\n        super(), E(this, R), E(this, J), this.clearStatusMessage = ()=>{\n            this.toggleAttribute(\"upload-error\", !1), this.statusMessage && (this.statusMessage.innerHTML = \"\");\n        }, this.onUploadError = (t)=>{\n            this.toggleAttribute(\"upload-error\", !0), this.statusMessage && (this.statusMessage.innerHTML = t.detail.message);\n        }, this.onSuccess = ()=>{\n            this.toggleAttribute(\"upload-error\", !1);\n            let t = \"Upload complete!\";\n            this.statusMessage && (this.statusMessage.innerHTML = t), console.info(t);\n        }, this.onOffline = ()=>{\n            this.toggleAttribute(\"upload-error\", !1);\n            let t = \"Currently offline. Upload will resume automatically when online.\";\n            this.statusMessage && (this.statusMessage.innerHTML = t);\n        }, this.attachShadow({\n            mode: \"open\"\n        }).appendChild(kt.content.cloneNode(!0)), this.statusMessage = (e = this.shadowRoot) == null ? void 0 : e.getElementById(\"status-message\");\n    }\n    connectedCallback() {\n        if (x(this, R, H(this)), x(this, J, new AbortController), i(this, R)) {\n            let e = {\n                signal: i(this, J).signal\n            };\n            i(this, R).addEventListener(\"reset\", this.clearStatusMessage, e), i(this, R).addEventListener(\"uploaderror\", this.onUploadError, e), i(this, R).addEventListener(\"success\", this.onSuccess, e), i(this, R).addEventListener(\"uploadstart\", this.clearStatusMessage, e), i(this, R).addEventListener(\"offline\", this.onOffline, e), i(this, R).addEventListener(\"online\", this.clearStatusMessage, e), this.toggleAttribute(\"upload-in-progress\", i(this, R).hasAttribute(\"upload-in-progress\")), this.toggleAttribute(\"upload-complete\", i(this, R).hasAttribute(\"upload-complete\")), this.toggleAttribute(\"upload-error\", i(this, R).hasAttribute(\"upload-error\"));\n        }\n    }\n    disconnectedCallback() {\n        var e;\n        (e = i(this, J)) == null || e.abort();\n    }\n};\nR = new WeakMap, J = new WeakMap;\np.customElements.get(\"mux-uploader-status\") || p.customElements.define(\"mux-uploader-status\", wr);\nvar Ct = P.createElement(\"template\");\nCt.innerHTML = `\n<style>\n  #retry-button {\n    color: #e22c3e;\n    text-decoration-line: underline;\n    cursor: pointer;\n    position: relative;\n    display: none;\n  }\n\n  :host([upload-error]) #retry-button {\n    display: inline-block;\n  }\n</style>\n\n<span id=\"retry-button\" role=\"button\" tabindex=\"0\">Try again</span>\n`;\nvar D, Q, Mr = class extends p.HTMLElement {\n    constructor(){\n        var e;\n        super(), E(this, D), E(this, Q), this.handleKeyup = (t)=>{\n            let r = [\n                \"Enter\",\n                \" \"\n            ], { key: n } = t;\n            r.includes(n) && this.triggerReset();\n        }, this.triggerReset = ()=>{\n            var t;\n            (t = i(this, D)) == null || t.dispatchEvent(new CustomEvent(\"reset\"));\n        }, this.attachShadow({\n            mode: \"open\"\n        }).appendChild(Ct.content.cloneNode(!0)), this.retryButton = (e = this.shadowRoot) == null ? void 0 : e.getElementById(\"retry-button\");\n    }\n    connectedCallback() {\n        var e, t;\n        if (x(this, D, H(this)), x(this, Q, new AbortController), i(this, D)) {\n            let r = {\n                signal: i(this, Q).signal\n            };\n            i(this, D).addEventListener(\"uploaderror\", ()=>this.toggleAttribute(\"upload-error\", !0)), i(this, D).addEventListener(\"reset\", ()=>this.toggleAttribute(\"upload-error\", !1)), (e = this.retryButton) == null || e.addEventListener(\"click\", this.triggerReset, r), (t = this.retryButton) == null || t.addEventListener(\"keyup\", this.handleKeyup, r), this.toggleAttribute(\"upload-error\", i(this, D).hasAttribute(\"upload-error\"));\n        }\n    }\n    disconnectedCallback() {\n        var e;\n        (e = i(this, Q)) == null || e.abort();\n    }\n};\nD = new WeakMap, Q = new WeakMap;\np.customElements.get(\"mux-uploader-retry\") || p.customElements.define(\"mux-uploader-retry\", Mr);\nvar St = P.createElement(\"template\");\nSt.innerHTML = `\n<style>\n#pause-button {\n  cursor: pointer;\n  line-height: 16px;\n  background: #fff;\n  border: 1px solid #000;\n  color: #000000;\n  padding: 16px 24px;\n  border-radius: 4px;\n  -webkit-transition: all 0.2s ease;\n  transition: all 0.2s ease;\n  font-family: inherit;\n  font-size: inherit;\n  position: relative;\n  display: none;\n}\n\n#pause-button:hover:not(:disabled) {\n  color: #fff;\n  background: #404040;\n}\n\n#pause-button:active {\n  color: #fff;\n  background: #000;\n}\n\n#pause-button:disabled {\n  cursor: not-allowed;\n}\n\n:host([upload-in-progress]:not([upload-error], [upload-complete])) #pause-button {\n  display: initial;\n}\n</style>\n\n<button id=\"pause-button\">Pause</span>\n`;\nvar b, ee, Ar = class extends p.HTMLElement {\n    constructor(){\n        super(), E(this, b), E(this, ee), this.triggerPause = ()=>{\n            if (!i(this, b)) {\n                console.warn(\"pausing before a mux-uploader element is associated is unsupported!\");\n                return;\n            }\n            this.pauseButton.disabled || (i(this, b).paused = !i(this, b).paused);\n        }, this.attachShadow({\n            mode: \"open\"\n        }).appendChild(St.content.cloneNode(!0));\n    }\n    connectedCallback() {\n        if (x(this, b, H(this)), x(this, ee, new AbortController), i(this, b)) {\n            let e = {\n                signal: i(this, ee).signal\n            };\n            i(this, b).addEventListener(\"uploadstart\", ()=>this.toggleAttribute(\"upload-in-progress\", !0), e), i(this, b).addEventListener(\"uploaderror\", ()=>{\n                this.toggleAttribute(\"upload-error\", !0), this.toggleAttribute(\"upload-complete\", !1), this.toggleAttribute(\"upload-in-progress\", !1);\n            }), i(this, b).addEventListener(\"success\", ()=>{\n                this.toggleAttribute(\"upload-complete\", !0), this.toggleAttribute(\"upload-error\", !1), this.toggleAttribute(\"upload-in-progress\", !1);\n            }), i(this, b).addEventListener(\"reset\", ()=>{\n                this.toggleAttribute(\"upload-error\", !1), this.toggleAttribute(\"upload-in-progress\", !1), this.toggleAttribute(\"upload-complete\", !1);\n            }), i(this, b).addEventListener(\"pausedchange\", ()=>{\n                var t;\n                if (this.pauseButton.disabled = !1, !i(this, b)) return;\n                let r = (t = i(this, b).paused) != null ? t : !1;\n                this.pauseButton.innerHTML = r ? \"Pausing...\" : \"Pause\", r && (this.pauseButton.disabled = !0, i(this, b).addEventListener(\"chunksuccess\", ()=>{\n                    var n;\n                    this.pauseButton.innerHTML = (n = i(this, b)) != null && n.paused ? \"Resume\" : \"Pause\", this.pauseButton.disabled = !1;\n                }, {\n                    once: !0\n                }));\n            }), this.pauseButton.addEventListener(\"click\", this.triggerPause, e), this.toggleAttribute(\"upload-in-progress\", i(this, b).hasAttribute(\"upload-in-progress\")), this.toggleAttribute(\"upload-complete\", i(this, b).hasAttribute(\"upload-complete\")), this.toggleAttribute(\"upload-error\", i(this, b).hasAttribute(\"upload-error\"));\n        }\n    }\n    disconnectedCallback() {\n        var e;\n        (e = i(this, ee)) == null || e.abort();\n    }\n    get pauseButton() {\n        var e;\n        return (e = this.shadowRoot) == null ? void 0 : e.getElementById(\"pause-button\");\n    }\n};\nb = new WeakMap, ee = new WeakMap;\np.customElements.get(\"mux-uploader-pause\") || p.customElements.define(\"mux-uploader-pause\", Ar);\nvar Rt = `\n  <style>\n  #file-select {\n    cursor: pointer;\n    line-height: 16px;\n    background: #fff;\n    border: 1px solid #000;\n    color: #000000;\n    padding: 16px 24px;\n    border-radius: 4px;\n    -webkit-transition: all 0.2s ease;\n    transition: all 0.2s ease;\n    font-family: inherit;\n    font-size: inherit;\n    position: relative;\n  }\n\n  #file-select:hover {\n    color: #fff;\n    background: #404040;\n  }\n\n  #file-select:active {\n    color: #fff;\n    background: #000;\n  }\n\n  </style>\n\n  <button id=\"file-select\" type=\"button\" part=\"file-select-button\">Upload a video</button>\n`, wt = P.createElement(\"template\");\nwt.innerHTML = `\n  <style>\n    :host { display: inline-block; }\n\n    :host([file-ready]) > slot  {\n      display: none;\n    }\n  </style>\n\n  <slot>\n    ${Rt}\n  </slot>\n`;\nvar z, A, te, Tr = class extends p.HTMLElement {\n    constructor(){\n        var e, t, r;\n        super(), E(this, z), E(this, A), E(this, te), this.attachShadow({\n            mode: \"open\"\n        }).appendChild(wt.content.cloneNode(!0)), this.handleFilePickerElClick = this.handleFilePickerElClick.bind(this), this.filePickerEl = (e = this.shadowRoot) == null ? void 0 : e.querySelector(\"button\"), (r = (t = this.shadowRoot) == null ? void 0 : t.querySelector(\"slot\")) == null || r.addEventListener(\"slotchange\", (n)=>{\n            let s = n.currentTarget;\n            this.filePickerEl = s.assignedElements({\n                flatten: !0\n            }).filter((a)=>![\n                    \"STYLE\"\n                ].includes(a.nodeName))[0];\n        });\n    }\n    connectedCallback() {\n        if (x(this, A, H(this)), x(this, te, new AbortController), i(this, A)) {\n            let e = {\n                signal: i(this, te).signal\n            };\n            i(this, A).addEventListener(\"file-ready\", ()=>{\n                this.toggleAttribute(\"file-ready\", !0);\n            }, e), i(this, A).addEventListener(\"uploadstart\", ()=>this.toggleAttribute(\"upload-in-progress\", !0), e), i(this, A).addEventListener(\"success\", ()=>{\n                this.toggleAttribute(\"upload-in-progress\", !1), this.toggleAttribute(\"upload-complete\", !0);\n            }, e), i(this, A).addEventListener(\"reset\", ()=>{\n                this.toggleAttribute(\"file-ready\", !1);\n            }, e), this.toggleAttribute(\"upload-in-progress\", i(this, A).hasAttribute(\"upload-in-progress\")), this.toggleAttribute(\"upload-complete\", i(this, A).hasAttribute(\"upload-complete\")), this.toggleAttribute(\"file-ready\", i(this, A).hasAttribute(\"file-ready\"));\n        }\n    }\n    disconnectedCallback() {\n        var e;\n        (e = i(this, te)) == null || e.abort();\n    }\n    get filePickerEl() {\n        return i(this, z);\n    }\n    set filePickerEl(e) {\n        e !== i(this, z) && (i(this, z) && i(this, z).removeEventListener(\"click\", this.handleFilePickerElClick), x(this, z, e), i(this, z) && i(this, z).addEventListener(\"click\", this.handleFilePickerElClick));\n    }\n    handleFilePickerElClick() {\n        var e, t;\n        let r = this.getAttribute(\"mux-uploader\"), n = r ? P.getElementById(r) : this.getRootNode().host;\n        (t = (e = n == null ? void 0 : n.shadowRoot) == null ? void 0 : e.querySelector(\"#hidden-file-input\")) == null || t.click();\n    }\n};\nz = new WeakMap, A = new WeakMap, te = new WeakMap;\np.customElements.get(\"mux-uploader-file-select\") || p.customElements.define(\"mux-uploader-file-select\", Tr);\nfunction le(e, t) {\n    return e ? \"\" : t;\n}\nvar Pr = (e, t)=>{\n    if (t == null || t === !1) return \"\";\n    let r = t === !0 ? \"\" : `${t}`;\n    return `${e}=\"${r}\"`;\n};\nfunction Ur(e) {\n    let { noDrop: t, noProgress: r, noStatus: n, noRetry: s, pausable: a, type: l } = e, u = t ? \"div\" : 'mux-uploader-drop overlay part=\"drop\"', c = le(r, `\n      <mux-uploader-progress part=\"progress progress-percentage\" type=\"percentage\"></mux-uploader-progress>\n      <mux-uploader-progress part=\"progress progress-bar\" ${Pr(\"type\", l)}></mux-uploader-progress>\n    `), h = le(n, '<mux-uploader-status part=\"status\"></mux-uploader-status>'), m = le(s, '<mux-uploader-retry part=\"retry\"></mux-uploader-retry>'), k = le(!a, '<mux-uploader-pause part=\"pause\"></mux-uploader-pause>');\n    return P.createRange().createContextualFragment(`\n    <${u}>\n      ${h}\n      ${m}\n      ${k}\n\n      <mux-uploader-file-select part=\"file-select\">\n        <slot name=\"file-select\">\n          ${Rt}\n        </slot>\n      </mux-uploader-file-select>\n\n      ${c}\n    </${u}>\n  `);\n}\nvar Mt = P.createElement(\"template\");\nMt.innerHTML = `\n<style>\n  :host {\n    display: flex;\n    flex-direction: column;\n  }\n\n  mux-uploader-drop {\n    flex-grow: 1;\n  }\n\n  input[type=\"file\"] {\n    display: none;\n  }\n</style>\n\n<input id=\"hidden-file-input\" type=\"file\" accept=\"video/*, audio/*\" />\n<mux-uploader-sr-text></mux-uploader-sr-text>\n`;\nvar ft = class extends p.HTMLElement {\n    static get observedAttributes() {\n        return [\n            \"pausable\",\n            \"type\",\n            \"no-drop\",\n            \"no-progress\",\n            \"no-status\",\n            \"no-retry\",\n            \"max-file-size\",\n            \"use-large-file-workaround\"\n        ];\n    }\n    constructor(){\n        var e;\n        super(), this.attachShadow({\n            mode: \"open\"\n        }).appendChild(Mt.content.cloneNode(!0)), this.updateLayout(), (e = this.hiddenFileInput) == null || e.addEventListener(\"change\", ()=>{\n            var t, r;\n            let n = (r = (t = this.hiddenFileInput) == null ? void 0 : t.files) == null ? void 0 : r[0];\n            this.toggleAttribute(\"file-ready\", !!n), n && this.dispatchEvent(new CustomEvent(\"file-ready\", {\n                composed: !0,\n                bubbles: !0,\n                detail: n\n            }));\n        });\n    }\n    connectedCallback() {\n        this.addEventListener(\"file-ready\", this.handleUpload), this.addEventListener(\"reset\", this.resetState);\n    }\n    disconnectedCallback() {\n        this.removeEventListener(\"file-ready\", this.handleUpload, !1), this.removeEventListener(\"reset\", this.resetState);\n    }\n    attributeChangedCallback() {\n        this.updateLayout();\n    }\n    get hiddenFileInput() {\n        var e;\n        return (e = this.shadowRoot) == null ? void 0 : e.querySelector(\"#hidden-file-input\");\n    }\n    get endpoint() {\n        var e;\n        return (e = this.getAttribute(\"endpoint\")) != null ? e : this._endpoint;\n    }\n    set endpoint(e) {\n        e !== this.endpoint && (typeof e == \"string\" ? this.setAttribute(\"endpoint\", e) : e == null && this.removeAttribute(\"endpoint\"), this._endpoint = e);\n    }\n    get type() {\n        var e;\n        return (e = this.getAttribute(\"type\")) != null ? e : void 0;\n    }\n    set type(e) {\n        e != this.type && (e ? this.setAttribute(\"type\", e) : this.removeAttribute(\"type\"));\n    }\n    get noDrop() {\n        return this.hasAttribute(\"no-drop\");\n    }\n    set noDrop(e) {\n        this.toggleAttribute(\"no-drop\", !!e);\n    }\n    get noProgress() {\n        return this.hasAttribute(\"no-progress\");\n    }\n    set noProgress(e) {\n        this.toggleAttribute(\"no-progress\", !!e);\n    }\n    get noStatus() {\n        return this.hasAttribute(\"no-status\");\n    }\n    set noStatus(e) {\n        this.toggleAttribute(\"no-status\", !!e);\n    }\n    get noRetry() {\n        return this.hasAttribute(\"no-retry\");\n    }\n    set noRetry(e) {\n        this.toggleAttribute(\"no-retry\", !!e);\n    }\n    get pausable() {\n        return this.hasAttribute(\"pausable\");\n    }\n    set pausable(e) {\n        this.toggleAttribute(\"pausable\", !!e);\n    }\n    get dynamicChunkSize() {\n        return this.hasAttribute(\"dynamic-chunk-size\");\n    }\n    set dynamicChunkSize(e) {\n        e !== this.hasAttribute(\"dynamic-chunk-size\") && (e ? this.setAttribute(\"dynamic-chunk-size\", \"\") : this.removeAttribute(\"dynamic-chunk-size\"));\n    }\n    get useLargeFileWorkaround() {\n        return this.hasAttribute(\"use-large-file-workaround\");\n    }\n    set useLargeFileWorkaround(e) {\n        e != this.useLargeFileWorkaround && this.toggleAttribute(\"use-large-file-workaround\", !!e);\n    }\n    get maxFileSize() {\n        let e = this.getAttribute(\"max-file-size\");\n        return e !== null ? parseInt(e) : void 0;\n    }\n    set maxFileSize(e) {\n        e ? this.setAttribute(\"max-file-size\", e.toString()) : this.removeAttribute(\"max-file-size\");\n    }\n    get chunkSize() {\n        let e = this.getAttribute(\"chunk-size\");\n        return e !== null ? parseInt(e) : void 0;\n    }\n    set chunkSize(e) {\n        e ? this.setAttribute(\"chunk-size\", e.toString()) : this.removeAttribute(\"chunk-size\");\n    }\n    get upload() {\n        return this._upload;\n    }\n    get paused() {\n        var e, t;\n        return (t = (e = this.upload) == null ? void 0 : e.paused) != null ? t : !1;\n    }\n    set paused(e) {\n        if (!this.upload) {\n            console.warn(\"Pausing before an upload has begun is unsupported\");\n            return;\n        }\n        let t = !!e;\n        t !== this.paused && (t ? this.upload.pause() : this.upload.resume(), this.toggleAttribute(\"paused\", t), this.dispatchEvent(new CustomEvent(\"pausedchange\", {\n            detail: t\n        })));\n    }\n    updateLayout() {\n        var e, t;\n        let r = (e = this.shadowRoot) == null ? void 0 : e.querySelector(\"mux-uploader-drop, div\");\n        r && r.remove();\n        let n = Ur(this);\n        (t = this.shadowRoot) == null || t.appendChild(n);\n    }\n    setError(e) {\n        this.setAttribute(\"upload-error\", \"\"), this.dispatchEvent(new CustomEvent(\"uploaderror\", {\n            detail: {\n                message: e\n            }\n        }));\n    }\n    resetState() {\n        this.removeAttribute(\"upload-error\"), this.removeAttribute(\"upload-in-progress\"), this.removeAttribute(\"upload-complete\"), this.hiddenFileInput.value = \"\";\n    }\n    handleUpload(e) {\n        let t = this.endpoint, r = this.dynamicChunkSize;\n        if (t) this.removeAttribute(\"upload-error\");\n        else {\n            this.setError(\"No url or endpoint specified -- cannot handleUpload\");\n            return;\n        }\n        try {\n            let n = Le.createUpload({\n                endpoint: t,\n                dynamicChunkSize: r,\n                file: e.detail,\n                maxFileSize: this.maxFileSize,\n                chunkSize: this.chunkSize,\n                useLargeFileWorkaround: this.useLargeFileWorkaround\n            });\n            this._upload = n, this.dispatchEvent(new CustomEvent(\"uploadstart\", {\n                detail: {\n                    file: n.file,\n                    chunkSize: n.chunkSize\n                }\n            })), this.setAttribute(\"upload-in-progress\", \"\"), n.offline && this.dispatchEvent(new CustomEvent(\"offline\")), n.on(\"attempt\", (s)=>{\n                this.dispatchEvent(new CustomEvent(\"chunkattempt\", s));\n            }), n.on(\"chunkSuccess\", (s)=>{\n                this.dispatchEvent(new CustomEvent(\"chunksuccess\", s));\n            }), n.on(\"error\", (s)=>{\n                this.setAttribute(\"upload-error\", \"\"), console.error(\"error handler\", s.detail.message), this.dispatchEvent(new CustomEvent(\"uploaderror\", s));\n            }), n.on(\"progress\", (s)=>{\n                this.dispatchEvent(new CustomEvent(\"progress\", s));\n            }), n.on(\"success\", (s)=>{\n                this.removeAttribute(\"upload-in-progress\"), this.setAttribute(\"upload-complete\", \"\"), this.dispatchEvent(new CustomEvent(\"success\", s));\n            }), n.on(\"offline\", (s)=>{\n                this.dispatchEvent(new CustomEvent(\"offline\", s));\n            }), n.on(\"online\", (s)=>{\n                this.dispatchEvent(new CustomEvent(\"online\", s));\n            });\n        } catch (n) {\n            n instanceof Error && this.setError(n.message);\n        }\n    }\n};\np.customElements.get(\"mux-uploader\") || (p.customElements.define(\"mux-uploader\", ft), p.MuxUploaderElement = ft);\nvar At = P.createElement(\"template\");\nAt.innerHTML = `\n<style>\n\n.sr-only {\n  position:absolute;\n  left:-10000px;\n  top:auto;\n  width:1px;\n  height:1px;\n  overflow:hidden;\n}\n</style>\n\n<div class=\"sr-only\" id=\"sr-only\" aria-live=\"polite\"></div>\n`;\nvar B, Lr = class extends p.HTMLElement {\n    constructor(){\n        var e;\n        super(), E(this, B), this.attachShadow({\n            mode: \"open\"\n        }).appendChild(At.content.cloneNode(!0)), this.srOnlyText = (e = this.shadowRoot) == null ? void 0 : e.getElementById(\"sr-only\");\n    }\n    connectedCallback() {\n        x(this, B, H(this)), i(this, B) && i(this, B).addEventListener(\"success\", this.updateText.bind(this));\n    }\n    disconnectedCallback() {\n        i(this, B) && i(this, B).removeEventListener(\"success\", this.updateText.bind(this));\n    }\n    updateText() {\n        this.srOnlyText && (this.srOnlyText.textContent = \"Upload complete!\");\n    }\n};\nB = new WeakMap;\np.customElements.get(\"mux-uploader-sr-text\") || p.customElements.define(\"mux-uploader-sr-text\", Lr);\n\nvar Tt = {\n    className: \"class\",\n    classname: \"class\",\n    htmlFor: \"for\",\n    crossOrigin: \"crossorigin\",\n    viewBox: \"viewBox\",\n    playsInline: \"playsinline\",\n    autoPlay: \"autoplay\"\n}, _r = (e)=>e == null, zr = (e, t)=>_r(t) ? !1 : e in t, Or = (e)=>e.replace(/[A-Z]/g, (t)=>`-${t.toLowerCase()}`), Ir = (e, t)=>{\n    if (!(typeof t == \"boolean\" && !t)) {\n        if (zr(e, Tt)) return Tt[e];\n        if (typeof t != null) return /[A-Z]/.test(e) ? Or(e) : e;\n    }\n};\nvar Dr = (e, t)=>typeof e == \"boolean\" ? \"\" : e, C = (e = {})=>Object.entries(e).reduce((t, [r, n])=>{\n        let s = Ir(r, n);\n        if (!s) return t;\n        let a = Dr(n, r);\n        return t[s] = a, t;\n    }, {});\n\n\nvar S = (...e)=>{\n    let t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        e.forEach((r)=>{\n            r && (typeof r == \"function\" ? r(t.current) : r.current = t.current);\n        });\n    }, [\n        e\n    ]), t;\n};\nvar Nr = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ children: e, ...t }, r)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mux-uploader-drop\", C({\n        ...t,\n        ref: r\n    }), e)), jr = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t)=>{\n    let r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), n = S(r, t);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Nr, {\n        ref: n,\n        ...e\n    });\n}), Wr = jr;\n\n\nvar Xr = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ children: e, ...t }, r)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mux-uploader-file-select\", C({\n        ...t,\n        ref: r\n    }), e)), qr = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t)=>{\n    let r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), n = S(r, t);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Xr, {\n        ref: n,\n        ...e\n    });\n}), Gr = qr;\n\n\nvar Kr = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ children: e, ...t }, r)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mux-uploader-progress\", C({\n        ...t,\n        ref: r\n    }), e)), Yr = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t)=>{\n    let r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), n = S(r, t);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Kr, {\n        ref: n,\n        ...e\n    });\n}), Zr = Yr;\n\n\nvar Qr = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ children: e, ...t }, r)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mux-uploader-retry\", C({\n        ...t,\n        ref: r\n    }), e)), en = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t)=>{\n    let r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), n = S(r, t);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Qr, {\n        ref: n,\n        ...e\n    });\n}), tn = en;\n\n\nvar nn = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ children: e, ...t }, r)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mux-uploader-pause\", C({\n        ...t,\n        ref: r\n    }), e)), sn = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t)=>{\n    let r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), n = S(r, t);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(nn, {\n        ref: n,\n        ...e\n    });\n}), an = sn;\n\n\nvar ln = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ children: e, ...t }, r)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mux-uploader-status\", C({\n        ...t,\n        ref: r\n    }), e)), un = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t)=>{\n    let r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), n = S(r, t);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ln, {\n        ref: n,\n        ...e\n    });\n}), dn = un;\n\n\nvar cn = Object.prototype.hasOwnProperty, hn = (e, t)=>{\n    if (Object.is(e, t)) return !0;\n    if (typeof e != \"object\" || e === null || typeof t != \"object\" || t === null) return !1;\n    if (Array.isArray(e)) return !Array.isArray(t) || e.length !== t.length ? !1 : e.some((s, a)=>t[a] === s);\n    let r = Object.keys(e), n = Object.keys(t);\n    if (r.length !== n.length) return !1;\n    for(let s = 0; s < r.length; s++)if (!cn.call(t, r[s]) || !Object.is(e[r[s]], t[r[s]])) return !1;\n    return !0;\n}, fn = (e, t, r)=>!hn(t, e[r]), gn = (e, t, r)=>{\n    e[r] = t;\n}, mn = (e, t, r, n = gn, s = fn)=>(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let a = r == null ? void 0 : r.current;\n        a && s(a, t, e) && n(a, t, e);\n    }, [\n        r == null ? void 0 : r.current,\n        t\n    ]), Pt = mn;\nvar Xs = ze.ProgressTypes, yn = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ children: e, ...t }, r)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mux-uploader\", C({\n        ...t,\n        ref: r\n    }), e)), W = (e, t, r)=>(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let n = t == null ? void 0 : t.current;\n        if (!(!n || !r)) return n.addEventListener(e, r), ()=>{\n            n.removeEventListener(e, r);\n        };\n    }, [\n        t == null ? void 0 : t.current,\n        r\n    ]), En = (e, t)=>{\n    let { onUploadStart: r, onChunkAttempt: n, onChunkSuccess: s, onUploadError: a, onProgress: l, onSuccess: u, endpoint: c, ...h } = t;\n    return Pt(\"endpoint\", c, e), W(\"uploadstart\", e, r), W(\"chunkattempt\", e, n), W(\"chunksuccess\", e, s), W(\"uploaderror\", e, a), W(\"progress\", e, l), W(\"success\", e, u), [\n        h\n    ];\n}, xn = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t)=>{\n    let r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), n = S(r, t), [s] = En(r, e);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(yn, {\n        ref: n,\n        ...s\n    });\n});\nvar qs = xn;\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mux/mux-uploader-react/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mux/mux-video/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@mux/mux-video/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Attributes: () => (/* binding */ o),\n/* harmony export */   MediaError: () => (/* reexport safe */ _mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.MediaError),\n/* harmony export */   VideoEvents: () => (/* binding */ fe),\n/* harmony export */   \"default\": () => (/* binding */ ws),\n/* harmony export */   generatePlayerInitTime: () => (/* reexport safe */ _mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.generatePlayerInitTime),\n/* harmony export */   playerSoftwareName: () => (/* binding */ ui),\n/* harmony export */   playerSoftwareVersion: () => (/* binding */ ci)\n/* harmony export */ });\n/* harmony import */ var _mux_playback_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mux/playback-core */ \"(ssr)/./node_modules/@mux/playback-core/dist/index.mjs\");\nvar hi=Object.defineProperty;var li=Object.getPrototypeOf;var fi=Reflect.get;var Ae=e=>{throw TypeError(e)};var mi=(e,i,t)=>i in e?hi(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t;var E=(e,i,t)=>mi(e,typeof i!=\"symbol\"?i+\"\":i,t),de=(e,i,t)=>i.has(e)||Ae(\"Cannot \"+t);var r=(e,i,t)=>(de(e,i,\"read from private field\"),t?t.call(e):i.get(e)),l=(e,i,t)=>i.has(e)?Ae(\"Cannot add the same private member more than once\"):i instanceof WeakSet?i.add(e):i.set(e,t),u=(e,i,t,s)=>(de(e,i,\"write to private field\"),s?s.call(e,t):i.set(e,t),t),v=(e,i,t)=>(de(e,i,\"access private method\"),t);var jt=(e,i,t)=>fi(li(e),t,i);var gt=class{addEventListener(){}removeEventListener(){}dispatchEvent(i){return!0}};if(typeof DocumentFragment==\"undefined\"){class e extends gt{}globalThis.DocumentFragment=e}var Lt=class extends gt{},ce=class extends gt{},pi={get(e){},define(e,i,t){},getName(e){return null},upgrade(e){},whenDefined(e){return Promise.resolve(Lt)}},Mt,ue=class{constructor(i,t={}){l(this,Mt);u(this,Mt,t==null?void 0:t.detail)}get detail(){return r(this,Mt)}initCustomEvent(){}};Mt=new WeakMap;function gi(e,i){return new Lt}var ke={document:{createElement:gi},DocumentFragment,customElements:pi,CustomEvent:ue,EventTarget:gt,HTMLElement:Lt,HTMLVideoElement:ce},Se=typeof window==\"undefined\"||typeof globalThis.customElements==\"undefined\",Wt=Se?ke:globalThis,Qi=Se?ke.document:globalThis.document;var Ei=()=>{try{return\"0.25.2\"}catch{}return\"UNKNOWN\"},Ti=Ei(),Re=()=>Ti;var fe=[\"abort\",\"canplay\",\"canplaythrough\",\"durationchange\",\"emptied\",\"encrypted\",\"ended\",\"error\",\"loadeddata\",\"loadedmetadata\",\"loadstart\",\"pause\",\"play\",\"playing\",\"progress\",\"ratechange\",\"seeked\",\"seeking\",\"stalled\",\"suspend\",\"timeupdate\",\"volumechange\",\"waiting\",\"waitingforkey\",\"resize\",\"enterpictureinpicture\",\"leavepictureinpicture\",\"webkitbeginfullscreen\",\"webkitendfullscreen\",\"webkitpresentationmodechanged\"],Ie=[\"autopictureinpicture\",\"disablepictureinpicture\",\"disableremoteplayback\",\"autoplay\",\"controls\",\"controlslist\",\"crossorigin\",\"loop\",\"muted\",\"playsinline\",\"poster\",\"preload\",\"src\"];function bi(e){return`\n    <style>\n      :host {\n        display: inline-flex;\n        line-height: 0;\n        flex-direction: column;\n        justify-content: end;\n      }\n\n      audio {\n        width: 100%;\n      }\n    </style>\n    <slot name=\"media\">\n      <audio${xe(e)}></audio>\n    </slot>\n    <slot></slot>\n  `}function vi(e){return`\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n        object-fit: var(--media-object-fit, contain);\n        object-position: var(--media-object-position, 50% 50%);\n      }\n\n      video::-webkit-media-text-track-container {\n        transform: var(--media-webkit-text-track-transform);\n        transition: var(--media-webkit-text-track-transition);\n      }\n    </style>\n    <slot name=\"media\">\n      <video${xe(e)}></video>\n    </slot>\n    <slot></slot>\n  `}function we(e,{tag:i,is:t}){var h,m,d,T,w,Pe,rt,a,p,C,k,ot,he,Oe,le,Le,Me;let s=(m=(h=globalThis.document)==null?void 0:h.createElement)==null?void 0:m.call(h,i,{is:t}),n=s?yi(s):[];return d=class extends e{constructor(){super(...arguments);l(this,k);l(this,rt,!1);l(this,a,null);l(this,p,new Map);l(this,C);E(this,\"get\");E(this,\"set\");E(this,\"call\")}static get observedAttributes(){var g,I,S;return v(g=d,w,Pe).call(g),[...(S=(I=s==null?void 0:s.constructor)==null?void 0:I.observedAttributes)!=null?S:[],...Ie]}get nativeEl(){var f,g,I,S,A;return v(this,k,ot).call(this),(A=(S=(g=(f=r(this,a))!=null?f:this.querySelector(\":scope > [slot=media]\"))!=null?g:this.querySelector(i))!=null?S:(I=this.shadowRoot)==null?void 0:I.querySelector(i))!=null?A:null}set nativeEl(f){u(this,a,f)}get defaultMuted(){return this.hasAttribute(\"muted\")}set defaultMuted(f){this.toggleAttribute(\"muted\",f)}get src(){return this.getAttribute(\"src\")}set src(f){this.setAttribute(\"src\",`${f}`)}get preload(){var f,g;return(g=this.getAttribute(\"preload\"))!=null?g:(f=this.nativeEl)==null?void 0:f.preload}set preload(f){this.setAttribute(\"preload\",`${f}`)}init(){var f;if(!this.shadowRoot){this.attachShadow({mode:\"open\"});let g=Ai(this.attributes);t&&(g.is=t),i&&(g.part=i),this.shadowRoot.innerHTML=this.constructor.getTemplateHTML(g)}this.nativeEl.muted=this.hasAttribute(\"muted\");for(let g of n)v(this,k,Le).call(this,g);u(this,C,new MutationObserver(v(this,k,Oe).bind(this))),this.shadowRoot.addEventListener(\"slotchange\",this),v(this,k,he).call(this);for(let g of this.constructor.Events)(f=this.shadowRoot)==null||f.addEventListener(g,this,!0)}handleEvent(f){if(f.type===\"slotchange\"){v(this,k,he).call(this);return}f.target===this.nativeEl&&this.dispatchEvent(new CustomEvent(f.type,{detail:f.detail}))}attributeChangedCallback(f,g,I){v(this,k,ot).call(this),v(this,k,Me).call(this,f,g,I)}connectedCallback(){v(this,k,ot).call(this)}},T=new WeakMap,w=new WeakSet,Pe=function(){if(r(this,T))return;u(this,T,!0);let f=new Set(this.observedAttributes);f.delete(\"muted\");for(let g of n)if(!(g in this.prototype))if(typeof s[g]==\"function\")this.prototype[g]=function(...I){return v(this,k,ot).call(this),(()=>{var P;if(this.call)return this.call(g,...I);let A=(P=this.nativeEl)==null?void 0:P[g];return A==null?void 0:A.apply(this.nativeEl,I)})()};else{let I={get(){var A,P,Ot;v(this,k,ot).call(this);let S=g.toLowerCase();if(f.has(S)){let pt=this.getAttribute(S);return pt===null?!1:pt===\"\"?!0:pt}return(Ot=(A=this.get)==null?void 0:A.call(this,g))!=null?Ot:(P=this.nativeEl)==null?void 0:P[g]}};g!==g.toUpperCase()&&(I.set=function(S){v(this,k,ot).call(this);let A=g.toLowerCase();if(f.has(A)){S===!0||S===!1||S==null?this.toggleAttribute(A,!!S):this.setAttribute(A,S);return}if(this.set){this.set(g,S);return}this.nativeEl&&(this.nativeEl[g]=S)}),Object.defineProperty(this.prototype,g,I)}},rt=new WeakMap,a=new WeakMap,p=new WeakMap,C=new WeakMap,k=new WeakSet,ot=function(){r(this,rt)||(u(this,rt,!0),this.init())},he=function(){var S;let f=new Map(r(this,p)),g=(S=this.shadowRoot)==null?void 0:S.querySelector(\"slot:not([name])\");(g==null?void 0:g.assignedElements({flatten:!0}).filter(A=>[\"track\",\"source\"].includes(A.localName))).forEach(A=>{var Ot,pt;f.delete(A);let P=r(this,p).get(A);P||(P=A.cloneNode(),r(this,p).set(A,P),(Ot=r(this,C))==null||Ot.observe(A,{attributes:!0})),(pt=this.nativeEl)==null||pt.append(P),v(this,k,le).call(this,P)}),f.forEach((A,P)=>{A.remove(),r(this,p).delete(P)})},Oe=function(f){var g;for(let I of f)if(I.type===\"attributes\"){let{target:S,attributeName:A}=I,P=r(this,p).get(S);P&&A&&(P.setAttribute(A,(g=S.getAttribute(A))!=null?g:\"\"),v(this,k,le).call(this,P))}},le=function(f){f&&f.localName===\"track\"&&f.default&&(f.kind===\"chapters\"||f.kind===\"metadata\")&&f.track.mode===\"disabled\"&&(f.track.mode=\"hidden\")},Le=function(f){if(Object.prototype.hasOwnProperty.call(this,f)){let g=this[f];delete this[f],this[f]=g}},Me=function(f,g,I){var S,A,P;[\"id\",\"class\"].includes(f)||!d.observedAttributes.includes(f)&&this.constructor.observedAttributes.includes(f)||(I===null?(S=this.nativeEl)==null||S.removeAttribute(f):((A=this.nativeEl)==null?void 0:A.getAttribute(f))!==I&&((P=this.nativeEl)==null||P.setAttribute(f,I)))},l(d,w),E(d,\"getTemplateHTML\",i.endsWith(\"audio\")?bi:vi),E(d,\"shadowRootOptions\",{mode:\"open\"}),E(d,\"Events\",fe),l(d,T,!1),d}function yi(e){let i=[];for(let t=Object.getPrototypeOf(e);t&&t!==HTMLElement.prototype;t=Object.getPrototypeOf(t)){let s=Object.getOwnPropertyNames(t);i.push(...s)}return i}function xe(e){let i=\"\";for(let t in e){if(!Ie.includes(t))continue;let s=e[t];s===\"\"?i+=` ${t}`:i+=` ${t}=\"${s}\"`}return i}function Ai(e){let i={};for(let t of e)i[t.name]=t.value;return i}var Ce,$t=we((Ce=globalThis.HTMLElement)!=null?Ce:class{},{tag:\"video\"}),_e,rr=we((_e=globalThis.HTMLElement)!=null?_e:class{},{tag:\"audio\"});var D=new WeakMap,Et=class extends Error{},zt=class extends Error{};var ki=[\"application/x-mpegURL\",\"application/vnd.apple.mpegurl\",\"audio/mpegurl\"],Ne=globalThis.WeakRef?class extends Set{add(e){super.add(new WeakRef(e))}forEach(e){super.forEach(i=>{let t=i.deref();t&&e(t)})}}:Set;function De(e){var i,t,s;(t=(i=globalThis.chrome)==null?void 0:i.cast)!=null&&t.isAvailable?(s=globalThis.cast)!=null&&s.framework?e():customElements.whenDefined(\"google-cast-button\").then(e):globalThis.__onGCastApiAvailable=()=>{customElements.whenDefined(\"google-cast-button\").then(e)}}function Ve(){return globalThis.chrome}function Ge(){var t;let e=\"https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1\";if((t=globalThis.chrome)!=null&&t.cast||document.querySelector(`script[src=\"${e}\"]`))return;let i=document.createElement(\"script\");i.src=e,document.head.append(i)}function V(){var e,i;return(i=(e=globalThis.cast)==null?void 0:e.framework)==null?void 0:i.CastContext.getInstance()}function wt(){var e;return(e=V())==null?void 0:e.getCurrentSession()}function Xt(){var e;return(e=wt())==null?void 0:e.getSessionObj().media[0]}function Fe(e){return new Promise((i,t)=>{Xt().editTracksInfo(e,i,t)})}function Be(e){return new Promise((i,t)=>{Xt().getStatus(e,i,t)})}function me(e){return V().setOptions({...pe(),...e})}function pe(){return{receiverApplicationId:\"CC1AD845\",autoJoinPolicy:\"origin_scoped\",androidReceiverCompatible:!1,language:\"en-US\",resumeSavedSession:!0}}function Si(e){if(!e)return;let i=/\\.([a-zA-Z0-9]+)(?:\\?.*)?$/,t=e.match(i);return t?t[1]:null}function Ri(e){let i=e.split(`\n`),t=[];for(let s=0;s<i.length;s++)if(i[s].trim().startsWith(\"#EXT-X-STREAM-INF\")){let h=i[s+1]?i[s+1].trim():\"\";h&&!h.startsWith(\"#\")&&t.push(h)}return t}function Ci(e){return e.split(`\n`).find(s=>!s.trim().startsWith(\"#\")&&s.trim()!==\"\")}async function Ke(e){try{let t=(await fetch(e,{method:\"HEAD\"})).headers.get(\"Content-Type\");return ki.some(s=>t===s)}catch(i){return console.error(\"Error while trying to get the Content-Type of the manifest\",i),!1}}async function qe(e){try{let i=await(await fetch(e)).text(),t=i,s=Ri(i);if(s.length>0){let m=new URL(s[0],e).toString();t=await(await fetch(m)).text()}let n=Ci(t);return Si(n)}catch(i){console.error(\"Error while trying to parse the manifest playlist\",i);return}}var Jt=new Ne,U=new WeakSet,L;De(()=>{var e,i,t,s;if(!((i=(e=globalThis.chrome)==null?void 0:e.cast)!=null&&i.isAvailable)){console.debug(\"chrome.cast.isAvailable\",(s=(t=globalThis.chrome)==null?void 0:t.cast)==null?void 0:s.isAvailable);return}L||(L=cast.framework,V().addEventListener(L.CastContextEventType.CAST_STATE_CHANGED,n=>{Jt.forEach(h=>{var m,d;return(d=(m=D.get(h)).onCastStateChanged)==null?void 0:d.call(m,n)})}),V().addEventListener(L.CastContextEventType.SESSION_STATE_CHANGED,n=>{Jt.forEach(h=>{var m,d;return(d=(m=D.get(h)).onSessionStateChanged)==null?void 0:d.call(m,n)})}),Jt.forEach(n=>{var h,m;return(m=(h=D.get(n)).init)==null?void 0:m.call(h)}))});var Ue=0,y,xt,M,G,dt,ct,Y,Qt,R,at,Ye,He,ge,je,Ee,We,Te,Zt=class extends EventTarget{constructor(t){super();l(this,R);l(this,y);l(this,xt);l(this,M);l(this,G);l(this,dt,\"disconnected\");l(this,ct,!1);l(this,Y,new Set);l(this,Qt,new WeakMap);u(this,y,t),Jt.add(this),D.set(this,{init:()=>v(this,R,Ee).call(this),onCastStateChanged:()=>v(this,R,ge).call(this),onSessionStateChanged:()=>v(this,R,je).call(this),getCastPlayer:()=>r(this,R,at)}),v(this,R,Ee).call(this)}get state(){return r(this,dt)}async watchAvailability(t){if(r(this,y).disableRemotePlayback)throw new Et(\"disableRemotePlayback attribute is present.\");return r(this,Qt).set(t,++Ue),r(this,Y).add(t),queueMicrotask(()=>t(v(this,R,He).call(this))),Ue}async cancelWatchAvailability(t){if(r(this,y).disableRemotePlayback)throw new Et(\"disableRemotePlayback attribute is present.\");t?r(this,Y).delete(t):r(this,Y).clear()}async prompt(){var s,n,h,m;if(r(this,y).disableRemotePlayback)throw new Et(\"disableRemotePlayback attribute is present.\");if(!((n=(s=globalThis.chrome)==null?void 0:s.cast)!=null&&n.isAvailable))throw new zt(\"The RemotePlayback API is disabled on this platform.\");let t=U.has(r(this,y));U.add(r(this,y)),me(r(this,y).castOptions),Object.entries(r(this,G)).forEach(([d,T])=>{r(this,M).controller.addEventListener(d,T)});try{await V().requestSession()}catch(d){if(t||U.delete(r(this,y)),d===\"cancel\")return;throw new Error(d)}(m=(h=D.get(r(this,y)))==null?void 0:h.loadOnPrompt)==null||m.call(h)}};y=new WeakMap,xt=new WeakMap,M=new WeakMap,G=new WeakMap,dt=new WeakMap,ct=new WeakMap,Y=new WeakMap,Qt=new WeakMap,R=new WeakSet,at=function(){if(U.has(r(this,y)))return r(this,M)},Ye=function(){U.has(r(this,y))&&(Object.entries(r(this,G)).forEach(([t,s])=>{r(this,M).controller.removeEventListener(t,s)}),U.delete(r(this,y)),r(this,y).muted=r(this,M).isMuted,r(this,y).currentTime=r(this,M).savedPlayerState.currentTime,r(this,M).savedPlayerState.isPaused===!1&&r(this,y).play())},He=function(){var s;let t=(s=V())==null?void 0:s.getCastState();return t&&t!==\"NO_DEVICES_AVAILABLE\"},ge=function(){let t=V().getCastState();if(U.has(r(this,y))&&t===\"CONNECTING\"&&(u(this,dt,\"connecting\"),this.dispatchEvent(new Event(\"connecting\"))),!r(this,ct)&&(t!=null&&t.includes(\"CONNECT\"))){u(this,ct,!0);for(let s of r(this,Y))s(!0)}else if(r(this,ct)&&(!t||t===\"NO_DEVICES_AVAILABLE\")){u(this,ct,!1);for(let s of r(this,Y))s(!1)}},je=async function(){var s;let{SESSION_RESUMED:t}=L.SessionState;if(V().getSessionState()===t&&r(this,y).castSrc===((s=Xt())==null?void 0:s.media.contentId)){U.add(r(this,y)),Object.entries(r(this,G)).forEach(([n,h])=>{r(this,M).controller.addEventListener(n,h)});try{await Be(new chrome.cast.media.GetStatusRequest)}catch(n){console.error(n)}r(this,G)[L.RemotePlayerEventType.IS_PAUSED_CHANGED](),r(this,G)[L.RemotePlayerEventType.PLAYER_STATE_CHANGED]()}},Ee=function(){!L||r(this,xt)||(u(this,xt,!0),me(r(this,y).castOptions),r(this,y).textTracks.addEventListener(\"change\",()=>v(this,R,Te).call(this)),v(this,R,ge).call(this),u(this,M,new L.RemotePlayer),new L.RemotePlayerController(r(this,M)),u(this,G,{[L.RemotePlayerEventType.IS_CONNECTED_CHANGED]:({value:t})=>{t===!0?(u(this,dt,\"connected\"),this.dispatchEvent(new Event(\"connect\"))):(v(this,R,Ye).call(this),u(this,dt,\"disconnected\"),this.dispatchEvent(new Event(\"disconnect\")))},[L.RemotePlayerEventType.DURATION_CHANGED]:()=>{r(this,y).dispatchEvent(new Event(\"durationchange\"))},[L.RemotePlayerEventType.VOLUME_LEVEL_CHANGED]:()=>{r(this,y).dispatchEvent(new Event(\"volumechange\"))},[L.RemotePlayerEventType.IS_MUTED_CHANGED]:()=>{r(this,y).dispatchEvent(new Event(\"volumechange\"))},[L.RemotePlayerEventType.CURRENT_TIME_CHANGED]:()=>{var t;(t=r(this,R,at))!=null&&t.isMediaLoaded&&r(this,y).dispatchEvent(new Event(\"timeupdate\"))},[L.RemotePlayerEventType.VIDEO_INFO_CHANGED]:()=>{r(this,y).dispatchEvent(new Event(\"resize\"))},[L.RemotePlayerEventType.IS_PAUSED_CHANGED]:()=>{r(this,y).dispatchEvent(new Event(this.paused?\"pause\":\"play\"))},[L.RemotePlayerEventType.PLAYER_STATE_CHANGED]:()=>{var t,s;((t=r(this,R,at))==null?void 0:t.playerState)!==chrome.cast.media.PlayerState.PAUSED&&r(this,y).dispatchEvent(new Event({[chrome.cast.media.PlayerState.PLAYING]:\"playing\",[chrome.cast.media.PlayerState.BUFFERING]:\"waiting\",[chrome.cast.media.PlayerState.IDLE]:\"emptied\"}[(s=r(this,R,at))==null?void 0:s.playerState]))},[L.RemotePlayerEventType.IS_MEDIA_LOADED_CHANGED]:async()=>{var t;(t=r(this,R,at))!=null&&t.isMediaLoaded&&(await Promise.resolve(),v(this,R,We).call(this))}}))},We=function(){v(this,R,Te).call(this)},Te=async function(){var a,p,C,k,st;if(!r(this,R,at))return;let s=((p=(a=r(this,M).mediaInfo)==null?void 0:a.tracks)!=null?p:[]).filter(({type:_})=>_===chrome.cast.media.TrackType.TEXT),n=[...r(this,y).textTracks].filter(({kind:_})=>_===\"subtitles\"||_===\"captions\"),h=s.map(({language:_,name:nt,trackId:O})=>{var N;let{mode:q}=(N=n.find(ye=>ye.language===_&&ye.label===nt))!=null?N:{};return q?{mode:q,trackId:O}:!1}).filter(Boolean),d=h.filter(({mode:_})=>_!==\"showing\").map(({trackId:_})=>_),T=h.find(({mode:_})=>_===\"showing\"),w=(st=(k=(C=wt())==null?void 0:C.getSessionObj().media[0])==null?void 0:k.activeTrackIds)!=null?st:[],K=w;if(w.length&&(K=K.filter(_=>!d.includes(_))),T!=null&&T.trackId&&(K=[...K,T.trackId]),K=[...new Set(K)],!((_,nt)=>_.length===nt.length&&_.every(O=>nt.includes(O)))(w,K))try{let _=new chrome.cast.media.EditTracksInfoRequest(K);await Fe(_)}catch(_){console.error(_)}};var $e=e=>{var i,t,s,n,h,m,d,b,ze;return t=class extends e{constructor(){super(...arguments);l(this,d);l(this,s,{paused:!1});l(this,n,pe());l(this,h);l(this,m)}get remote(){return r(this,m)?r(this,m):Ve()?(this.disableRemotePlayback||Ge(),D.set(this,{loadOnPrompt:()=>v(this,d,ze).call(this)}),u(this,m,new Zt(this))):super.remote}attributeChangedCallback(a,p,C){if(super.attributeChangedCallback(a,p,C),a===\"cast-receiver\"&&C){r(this,n).receiverApplicationId=C;return}if(r(this,d,b))switch(a){case\"cast-stream-type\":case\"cast-src\":this.load();break}}async load(){var _,nt;if(!r(this,d,b))return super.load();let a=new chrome.cast.media.MediaInfo(this.castSrc,this.castContentType);a.customData=this.castCustomData;let p=[...this.querySelectorAll(\"track\")].filter(({kind:O,src:q})=>q&&(O===\"subtitles\"||O===\"captions\")),C=[],k=0;if(p.length&&(a.tracks=p.map(O=>{let q=++k;C.length===0&&O.track.mode===\"showing\"&&C.push(q);let N=new chrome.cast.media.Track(q,chrome.cast.media.TrackType.TEXT);return N.trackContentId=O.src,N.trackContentType=\"text/vtt\",N.subtype=O.kind===\"captions\"?chrome.cast.media.TextTrackType.CAPTIONS:chrome.cast.media.TextTrackType.SUBTITLES,N.name=O.label,N.language=O.srclang,N})),this.castStreamType===\"live\"?a.streamType=chrome.cast.media.StreamType.LIVE:a.streamType=chrome.cast.media.StreamType.BUFFERED,a.metadata=new chrome.cast.media.GenericMediaMetadata,a.metadata.title=this.title,a.metadata.images=[{url:this.poster}],Ke(this.castSrc)){let O=await qe(this.castSrc);((O==null?void 0:O.includes(\"m4s\"))||(O==null?void 0:O.includes(\"mp4\")))&&(a.hlsSegmentFormat=chrome.cast.media.HlsSegmentFormat.FMP4,a.hlsVideoSegmentFormat=chrome.cast.media.HlsVideoSegmentFormat.FMP4)}let st=new chrome.cast.media.LoadRequest(a);st.currentTime=(_=super.currentTime)!=null?_:0,st.autoplay=!r(this,s).paused,st.activeTrackIds=C,await((nt=wt())==null?void 0:nt.loadMedia(st)),this.dispatchEvent(new Event(\"volumechange\"))}play(){var a;if(r(this,d,b)){r(this,d,b).isPaused&&((a=r(this,d,b).controller)==null||a.playOrPause());return}return super.play()}pause(){var a;if(r(this,d,b)){r(this,d,b).isPaused||(a=r(this,d,b).controller)==null||a.playOrPause();return}super.pause()}get castOptions(){return r(this,n)}get castReceiver(){var a;return(a=this.getAttribute(\"cast-receiver\"))!=null?a:void 0}set castReceiver(a){this.castReceiver!=a&&this.setAttribute(\"cast-receiver\",`${a}`)}get castSrc(){var a,p,C;return(C=(p=this.getAttribute(\"cast-src\"))!=null?p:(a=this.querySelector(\"source\"))==null?void 0:a.src)!=null?C:this.currentSrc}set castSrc(a){this.castSrc!=a&&this.setAttribute(\"cast-src\",`${a}`)}get castContentType(){var a;return(a=this.getAttribute(\"cast-content-type\"))!=null?a:void 0}set castContentType(a){this.setAttribute(\"cast-content-type\",`${a}`)}get castStreamType(){var a,p;return(p=(a=this.getAttribute(\"cast-stream-type\"))!=null?a:this.streamType)!=null?p:void 0}set castStreamType(a){this.setAttribute(\"cast-stream-type\",`${a}`)}get castCustomData(){return r(this,h)}set castCustomData(a){let p=typeof a;if(![\"object\",\"undefined\"].includes(p)){console.error(`castCustomData must be nullish or an object but value was of type ${p}`);return}u(this,h,a)}get readyState(){if(r(this,d,b))switch(r(this,d,b).playerState){case chrome.cast.media.PlayerState.IDLE:return 0;case chrome.cast.media.PlayerState.BUFFERING:return 2;default:return 3}return super.readyState}get paused(){return r(this,d,b)?r(this,d,b).isPaused:super.paused}get muted(){var a;return r(this,d,b)?(a=r(this,d,b))==null?void 0:a.isMuted:super.muted}set muted(a){var p;if(r(this,d,b)){(a&&!r(this,d,b).isMuted||!a&&r(this,d,b).isMuted)&&((p=r(this,d,b).controller)==null||p.muteOrUnmute());return}super.muted=a}get volume(){var a,p;return r(this,d,b)?(p=(a=r(this,d,b))==null?void 0:a.volumeLevel)!=null?p:1:super.volume}set volume(a){var p;if(r(this,d,b)){r(this,d,b).volumeLevel=+a,(p=r(this,d,b).controller)==null||p.setVolumeLevel();return}super.volume=a}get duration(){var a,p,C;return r(this,d,b)&&((a=r(this,d,b))!=null&&a.isMediaLoaded)?(C=(p=r(this,d,b))==null?void 0:p.duration)!=null?C:NaN:super.duration}get currentTime(){var a,p,C;return r(this,d,b)&&((a=r(this,d,b))!=null&&a.isMediaLoaded)?(C=(p=r(this,d,b))==null?void 0:p.currentTime)!=null?C:0:super.currentTime}set currentTime(a){var p;if(r(this,d,b)){r(this,d,b).currentTime=a,(p=r(this,d,b).controller)==null||p.seek();return}super.currentTime=a}},s=new WeakMap,n=new WeakMap,h=new WeakMap,m=new WeakMap,d=new WeakSet,b=function(){var a,p;return(p=(a=D.get(this.remote))==null?void 0:a.getCastPlayer)==null?void 0:p.call(a)},ze=async function(){r(this,s).paused=jt(t.prototype,this,\"paused\"),jt(t.prototype,this,\"pause\").call(this),this.muted=jt(t.prototype,this,\"muted\");try{await this.load()}catch(a){console.error(a)}},E(t,\"observedAttributes\",[...(i=e.observedAttributes)!=null?i:[],\"cast-src\",\"cast-content-type\",\"cast-stream-type\",\"cast-receiver\"]),t};var F=class extends Event{constructor(t,s){super(t);E(this,\"track\");this.track=s.track}};var be=new WeakMap;function c(e){var i;return(i=be.get(e))!=null?i:_i(e,{})}function _i(e,i){let t=be.get(e);return t||be.set(e,t={}),Object.assign(t,i)}function te(e,i){let t=e.videoTracks;c(i).media=e,c(i).renditionSet||(c(i).renditionSet=new Set);let s=c(t).trackSet;s.add(i);let n=s.size-1;n in ht.prototype||Object.defineProperty(ht.prototype,n,{get(){return[...c(this).trackSet][n]}}),queueMicrotask(()=>{t.dispatchEvent(new F(\"addtrack\",{track:i}))})}function ee(e){var s;let i=(s=c(e).media)==null?void 0:s.videoTracks;if(!i)return;c(i).trackSet.delete(e),queueMicrotask(()=>{i.dispatchEvent(new F(\"removetrack\",{track:e}))})}function Xe(e){var s;let i=(s=c(e).media.videoTracks)!=null?s:[],t=!1;for(let n of i)n!==e&&(n.selected=!1,t=!0);if(t){if(c(i).changeRequested)return;c(i).changeRequested=!0,queueMicrotask(()=>{delete c(i).changeRequested,i.dispatchEvent(new Event(\"change\"))})}}var H,j,W,ut,Nt,ht=class extends EventTarget{constructor(){super();l(this,ut);l(this,H);l(this,j);l(this,W);c(this).trackSet=new Set}[Symbol.iterator](){return r(this,ut,Nt).values()}get length(){return r(this,ut,Nt).size}getTrackById(t){var s;return(s=[...r(this,ut,Nt)].find(n=>n.id===t))!=null?s:null}get selectedIndex(){return[...r(this,ut,Nt)].findIndex(t=>t.selected)}get onaddtrack(){return r(this,H)}set onaddtrack(t){r(this,H)&&(this.removeEventListener(\"addtrack\",r(this,H)),u(this,H,void 0)),typeof t==\"function\"&&(u(this,H,t),this.addEventListener(\"addtrack\",t))}get onremovetrack(){return r(this,j)}set onremovetrack(t){r(this,j)&&(this.removeEventListener(\"removetrack\",r(this,j)),u(this,j,void 0)),typeof t==\"function\"&&(u(this,j,t),this.addEventListener(\"removetrack\",t))}get onchange(){return r(this,W)}set onchange(t){r(this,W)&&(this.removeEventListener(\"change\",r(this,W)),u(this,W,void 0)),typeof t==\"function\"&&(u(this,W,t),this.addEventListener(\"change\",t))}};H=new WeakMap,j=new WeakMap,W=new WeakMap,ut=new WeakSet,Nt=function(){return c(this).trackSet};var B=class extends Event{constructor(t,s){super(t);E(this,\"rendition\");this.rendition=s.rendition}};function Je(e,i){let t=c(e).media.videoRenditions;c(i).media=c(e).media,c(i).track=e;let s=c(e).renditionSet;s.add(i);let n=s.size-1;n in lt.prototype||Object.defineProperty(lt.prototype,n,{get(){return Tt(this)[n]}}),queueMicrotask(()=>{e.selected&&t.dispatchEvent(new B(\"addrendition\",{rendition:i}))})}function Ze(e){let i=c(e).media.videoRenditions,t=c(e).track;c(t).renditionSet.delete(e),queueMicrotask(()=>{c(e).track.selected&&i.dispatchEvent(new B(\"removerendition\",{rendition:e}))})}function Qe(e){let i=c(e).media.videoRenditions;!i||c(i).changeRequested||(c(i).changeRequested=!0,queueMicrotask(()=>{delete c(i).changeRequested,c(e).track.selected&&i.dispatchEvent(new Event(\"change\"))}))}function Tt(e){return[...c(e).media.videoTracks].filter(t=>t.selected).flatMap(t=>[...c(t).renditionSet])}var $,z,X,lt=class extends EventTarget{constructor(){super(...arguments);l(this,$);l(this,z);l(this,X)}[Symbol.iterator](){return Tt(this).values()}get length(){return Tt(this).length}getRenditionById(t){var s;return(s=Tt(this).find(n=>`${n.id}`==`${t}`))!=null?s:null}get selectedIndex(){return Tt(this).findIndex(t=>t.selected)}set selectedIndex(t){for(let[s,n]of Tt(this).entries())n.selected=s===t}get onaddrendition(){return r(this,$)}set onaddrendition(t){r(this,$)&&(this.removeEventListener(\"addrendition\",r(this,$)),u(this,$,void 0)),typeof t==\"function\"&&(u(this,$,t),this.addEventListener(\"addrendition\",t))}get onremoverendition(){return r(this,z)}set onremoverendition(t){r(this,z)&&(this.removeEventListener(\"removerendition\",r(this,z)),u(this,z,void 0)),typeof t==\"function\"&&(u(this,z,t),this.addEventListener(\"removerendition\",t))}get onchange(){return r(this,X)}set onchange(t){r(this,X)&&(this.removeEventListener(\"change\",r(this,X)),u(this,X,void 0)),typeof t==\"function\"&&(u(this,X,t),this.addEventListener(\"change\",t))}};$=new WeakMap,z=new WeakMap,X=new WeakMap;var bt,Dt=class{constructor(){E(this,\"src\");E(this,\"id\");E(this,\"width\");E(this,\"height\");E(this,\"bitrate\");E(this,\"frameRate\");E(this,\"codec\");l(this,bt,!1)}get selected(){return r(this,bt)}set selected(i){r(this,bt)!==i&&(u(this,bt,i),Qe(this))}};bt=new WeakMap;var vt,yt=class{constructor(){E(this,\"id\");E(this,\"kind\");E(this,\"label\",\"\");E(this,\"language\",\"\");E(this,\"sourceBuffer\");l(this,vt,!1)}addRendition(i,t,s,n,h,m){let d=new Dt;return d.src=i,d.width=t,d.height=s,d.frameRate=m,d.bitrate=h,d.codec=n,Je(this,d),d}removeRendition(i){Ze(i)}get selected(){return r(this,vt)}set selected(i){r(this,vt)!==i&&(u(this,vt,i),i===!0&&Xe(this))}};vt=new WeakMap;function ti(e,i){let t=c(e).media.audioRenditions;c(i).media=c(e).media,c(i).track=e;let s=c(e).renditionSet;s.add(i);let n=s.size-1;n in ft.prototype||Object.defineProperty(ft.prototype,n,{get(){return At(this)[n]}}),queueMicrotask(()=>{e.enabled&&t.dispatchEvent(new B(\"addrendition\",{rendition:i}))})}function ei(e){let i=c(e).media.audioRenditions,t=c(e).track;c(t).renditionSet.delete(e),queueMicrotask(()=>{c(e).track.enabled&&i.dispatchEvent(new B(\"removerendition\",{rendition:e}))})}function ii(e){let i=c(e).media.audioRenditions;!i||c(i).changeRequested||(c(i).changeRequested=!0,queueMicrotask(()=>{delete c(i).changeRequested,c(e).track.enabled&&i.dispatchEvent(new Event(\"change\"))}))}function At(e){return[...c(e).media.audioTracks].filter(t=>t.enabled).flatMap(t=>[...c(t).renditionSet])}var J,Z,Q,ft=class extends EventTarget{constructor(){super(...arguments);l(this,J);l(this,Z);l(this,Q)}[Symbol.iterator](){return At(this).values()}get length(){return At(this).length}getRenditionById(t){var s;return(s=At(this).find(n=>`${n.id}`==`${t}`))!=null?s:null}get selectedIndex(){return At(this).findIndex(t=>t.selected)}set selectedIndex(t){for(let[s,n]of At(this).entries())n.selected=s===t}get onaddrendition(){return r(this,J)}set onaddrendition(t){r(this,J)&&(this.removeEventListener(\"addrendition\",r(this,J)),u(this,J,void 0)),typeof t==\"function\"&&(u(this,J,t),this.addEventListener(\"addrendition\",t))}get onremoverendition(){return r(this,Z)}set onremoverendition(t){r(this,Z)&&(this.removeEventListener(\"removerendition\",r(this,Z)),u(this,Z,void 0)),typeof t==\"function\"&&(u(this,Z,t),this.addEventListener(\"removerendition\",t))}get onchange(){return r(this,Q)}set onchange(t){r(this,Q)&&(this.removeEventListener(\"change\",r(this,Q)),u(this,Q,void 0)),typeof t==\"function\"&&(u(this,Q,t),this.addEventListener(\"change\",t))}};J=new WeakMap,Z=new WeakMap,Q=new WeakMap;var kt,Vt=class{constructor(){E(this,\"src\");E(this,\"id\");E(this,\"bitrate\");E(this,\"codec\");l(this,kt,!1)}get selected(){return r(this,kt)}set selected(i){r(this,kt)!==i&&(u(this,kt,i),ii(this))}};kt=new WeakMap;function re(e,i){let t=e.audioTracks;c(i).media=e,c(i).renditionSet||(c(i).renditionSet=new Set);let s=c(t).trackSet;s.add(i);let n=s.size-1;n in mt.prototype||Object.defineProperty(mt.prototype,n,{get(){return[...c(this).trackSet][n]}}),queueMicrotask(()=>{t.dispatchEvent(new F(\"addtrack\",{track:i}))})}function se(e){var s;let i=(s=c(e).media)==null?void 0:s.audioTracks;if(!i)return;c(i).trackSet.delete(e),queueMicrotask(()=>{i.dispatchEvent(new F(\"removetrack\",{track:e}))})}function ri(e){let i=c(e).media.audioTracks;!i||c(i).changeRequested||(c(i).changeRequested=!0,queueMicrotask(()=>{delete c(i).changeRequested,i.dispatchEvent(new Event(\"change\"))}))}var tt,et,it,St,ie,mt=class extends EventTarget{constructor(){super();l(this,St);l(this,tt);l(this,et);l(this,it);c(this).trackSet=new Set}[Symbol.iterator](){return r(this,St,ie).values()}get length(){return r(this,St,ie).size}getTrackById(t){var s;return(s=[...r(this,St,ie)].find(n=>n.id===t))!=null?s:null}get onaddtrack(){return r(this,tt)}set onaddtrack(t){r(this,tt)&&(this.removeEventListener(\"addtrack\",r(this,tt)),u(this,tt,void 0)),typeof t==\"function\"&&(u(this,tt,t),this.addEventListener(\"addtrack\",t))}get onremovetrack(){return r(this,et)}set onremovetrack(t){r(this,et)&&(this.removeEventListener(\"removetrack\",r(this,et)),u(this,et,void 0)),typeof t==\"function\"&&(u(this,et,t),this.addEventListener(\"removetrack\",t))}get onchange(){return r(this,it)}set onchange(t){r(this,it)&&(this.removeEventListener(\"change\",r(this,it)),u(this,it,void 0)),typeof t==\"function\"&&(u(this,it,t),this.addEventListener(\"change\",t))}};tt=new WeakMap,et=new WeakMap,it=new WeakMap,St=new WeakSet,ie=function(){return c(this).trackSet};var Rt,Ct=class{constructor(){E(this,\"id\");E(this,\"kind\");E(this,\"label\",\"\");E(this,\"language\",\"\");E(this,\"sourceBuffer\");l(this,Rt,!1)}addRendition(i,t,s){let n=new Vt;return n.src=i,n.codec=t,n.bitrate=s,ti(this,n),n}removeRendition(i){ei(i)}get enabled(){return r(this,Rt)}set enabled(i){r(this,Rt)!==i&&(u(this,Rt,i),ri(this))}};Rt=new WeakMap;var si=ne(globalThis.HTMLMediaElement,\"video\"),ni=ne(globalThis.HTMLMediaElement,\"audio\");function oi(e){if(!(e!=null&&e.prototype))return e;let i=ne(e,\"video\");(!i||`${i}`.includes(\"[native code]\"))&&Object.defineProperty(e.prototype,\"videoTracks\",{get(){return Ii(this)}});let t=ne(e,\"audio\");(!t||`${t}`.includes(\"[native code]\"))&&Object.defineProperty(e.prototype,\"audioTracks\",{get(){return Pi(this)}}),\"addVideoTrack\"in e.prototype||(e.prototype.addVideoTrack=function(h,m=\"\",d=\"\"){let T=new yt;return T.kind=h,T.label=m,T.language=d,te(this,T),T}),\"removeVideoTrack\"in e.prototype||(e.prototype.removeVideoTrack=ee),\"addAudioTrack\"in e.prototype||(e.prototype.addAudioTrack=function(h,m=\"\",d=\"\"){let T=new Ct;return T.kind=h,T.label=m,T.language=d,re(this,T),T}),\"removeAudioTrack\"in e.prototype||(e.prototype.removeAudioTrack=se),\"videoRenditions\"in e.prototype||Object.defineProperty(e.prototype,\"videoRenditions\",{get(){return s(this)}});let s=h=>{let m=c(h).videoRenditions;return m||(m=new lt,c(m).media=h,c(h).videoRenditions=m),m};\"audioRenditions\"in e.prototype||Object.defineProperty(e.prototype,\"audioRenditions\",{get(){return n(this)}});let n=h=>{let m=c(h).audioRenditions;return m||(m=new ft,c(m).media=h,c(h).audioRenditions=m),m};return e}function ne(e,i){var t;if(e!=null&&e.prototype)return(t=Object.getOwnPropertyDescriptor(e.prototype,`${i}Tracks`))==null?void 0:t.get}function Ii(e){var t;let i=c(e).videoTracks;if(!i&&(i=new ht,c(e).videoTracks=i,si)){let s=si.call((t=e.nativeEl)!=null?t:e);for(let n of s)te(e,n);s.addEventListener(\"change\",()=>{i.dispatchEvent(new Event(\"change\"))}),s.addEventListener(\"addtrack\",n=>{if([...i].some(h=>h instanceof yt)){for(let h of s)ee(h);return}te(e,n.track)}),s.addEventListener(\"removetrack\",n=>{ee(n.track)})}return i}function Pi(e){var t;let i=c(e).audioTracks;if(!i&&(i=new mt,c(e).audioTracks=i,ni)){let s=ni.call((t=e.nativeEl)!=null?t:e);for(let n of s)re(e,n);s.addEventListener(\"change\",()=>{i.dispatchEvent(new Event(\"change\"))}),s.addEventListener(\"addtrack\",n=>{if([...i].some(h=>h instanceof Ct)){for(let h of s)se(h);return}re(e,n.track)}),s.addEventListener(\"removetrack\",n=>{se(n.track)})}return i}var ai=`\n<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" class=\"logo\" part=\"logo\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\" viewBox=\"0 0 1600 500\"><g fill=\"#fff\"><path d=\"M994.287 93.486c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31m0-93.486c-34.509 0-62.484 27.976-62.484 62.486v187.511c0 68.943-56.09 125.033-125.032 125.033s-125.03-56.09-125.03-125.033V62.486C681.741 27.976 653.765 0 619.256 0s-62.484 27.976-62.484 62.486v187.511C556.772 387.85 668.921 500 806.771 500c137.851 0 250.001-112.15 250.001-250.003V62.486c0-34.51-27.976-62.486-62.485-62.486M1537.51 468.511c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31m-275.883-218.509-143.33 143.329c-24.402 24.402-24.402 63.966 0 88.368 24.402 24.402 63.967 24.402 88.369 0l143.33-143.329 143.328 143.329c24.402 24.4 63.967 24.402 88.369 0 24.403-24.402 24.403-63.966.001-88.368l-143.33-143.329.001-.004 143.329-143.329c24.402-24.402 24.402-63.965 0-88.367s-63.967-24.402-88.369 0L1349.996 161.63 1206.667 18.302c-24.402-24.401-63.967-24.402-88.369 0s-24.402 63.965 0 88.367l143.329 143.329v.004ZM437.511 468.521c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31M461.426 4.759C438.078-4.913 411.2.432 393.33 18.303L249.999 161.632 106.669 18.303C88.798.432 61.922-4.913 38.573 4.759 15.224 14.43-.001 37.214-.001 62.488v375.026c0 34.51 27.977 62.486 62.487 62.486 34.51 0 62.486-27.976 62.486-62.486V213.341l80.843 80.844c24.404 24.402 63.965 24.402 88.369 0l80.843-80.844v224.173c0 34.51 27.976 62.486 62.486 62.486s62.486-27.976 62.486-62.486V62.488c0-25.274-15.224-48.058-38.573-57.729\" style=\"fill-rule:nonzero\"/></g></svg>`;fe.push(\"castchange\",\"entercast\",\"leavecast\");var o={BEACON_COLLECTION_DOMAIN:\"beacon-collection-domain\",CUSTOM_DOMAIN:\"custom-domain\",DEBUG:\"debug\",DISABLE_TRACKING:\"disable-tracking\",DISABLE_COOKIES:\"disable-cookies\",DRM_TOKEN:\"drm-token\",PLAYBACK_TOKEN:\"playback-token\",ENV_KEY:\"env-key\",MAX_RESOLUTION:\"max-resolution\",MIN_RESOLUTION:\"min-resolution\",RENDITION_ORDER:\"rendition-order\",PROGRAM_START_TIME:\"program-start-time\",PROGRAM_END_TIME:\"program-end-time\",ASSET_START_TIME:\"asset-start-time\",ASSET_END_TIME:\"asset-end-time\",METADATA_URL:\"metadata-url\",PLAYBACK_ID:\"playback-id\",PLAYER_SOFTWARE_NAME:\"player-software-name\",PLAYER_SOFTWARE_VERSION:\"player-software-version\",PLAYER_INIT_TIME:\"player-init-time\",PREFER_CMCD:\"prefer-cmcd\",PREFER_PLAYBACK:\"prefer-playback\",START_TIME:\"start-time\",STREAM_TYPE:\"stream-type\",TARGET_LIVE_WINDOW:\"target-live-window\",LIVE_EDGE_OFFSET:\"live-edge-offset\",TYPE:\"type\",LOGO:\"logo\"},Xi=Object.values(o),ci=Re(),ui=\"mux-video\",x,_t,Ft,It,Bt,Kt,qt,Ut,Yt,Pt,ae,ve=class extends $t{constructor(){super();l(this,Pt);l(this,x);l(this,_t);l(this,Ft);l(this,It,{});l(this,Bt,{});l(this,Kt);l(this,qt);l(this,Ut);l(this,Yt);u(this,Ft,(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.generatePlayerInitTime)())}static get NAME(){return ui}static get VERSION(){return ci}static get observedAttributes(){var t;return[...Xi,...(t=$t.observedAttributes)!=null?t:[]]}static getTemplateHTML(t={}){let s=super.getTemplateHTML(t),n=t.logo!==\"false\"&&t.logo!==void 0,h=t.logo&&t.logo!==\"\",m=t.logo,d=n?`\n      <style>\n        :host {\n          position: relative;\n        }\n        :host slot[name=\"logo\"] {\n          display: flex;\n          justify-content: end;\n          position: absolute;\n          top: 1rem;\n          right: 1rem;\n\n        }\n         :host slot[name=\"logo\"] .logo{\n          width: 5rem;\n          pointer-events: none;\n          user-select: none;\n         }\n      </style>\n      <slot name=\"logo\">\n        ${h?`<img class=\"logo\" part=\"logo\" src=\"${m}\" />`:ai}\n      </slot>\n    `:\"\";return`\n      ${s}\n      ${d}\n    `}get preferCmcd(){var t;return(t=this.getAttribute(o.PREFER_CMCD))!=null?t:void 0}set preferCmcd(t){t!==this.preferCmcd&&(t?_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.CmcdTypeValues.includes(t)?this.setAttribute(o.PREFER_CMCD,t):console.warn(`Invalid value for preferCmcd. Must be one of ${_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.CmcdTypeValues.join()}`):this.removeAttribute(o.PREFER_CMCD))}get playerInitTime(){return this.hasAttribute(o.PLAYER_INIT_TIME)?+this.getAttribute(o.PLAYER_INIT_TIME):r(this,Ft)}set playerInitTime(t){t!=this.playerInitTime&&(t==null?this.removeAttribute(o.PLAYER_INIT_TIME):this.setAttribute(o.PLAYER_INIT_TIME,`${+t}`))}get playerSoftwareName(){var t;return(t=r(this,Ut))!=null?t:ui}set playerSoftwareName(t){u(this,Ut,t)}get playerSoftwareVersion(){var t;return(t=r(this,qt))!=null?t:ci}set playerSoftwareVersion(t){u(this,qt,t)}get _hls(){var t;return(t=r(this,x))==null?void 0:t.engine}get mux(){var t;return(t=this.nativeEl)==null?void 0:t.mux}get error(){var t;return(t=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getError)(this.nativeEl))!=null?t:null}get errorTranslator(){return r(this,Yt)}set errorTranslator(t){u(this,Yt,t)}get src(){return this.getAttribute(\"src\")}set src(t){t!==this.src&&(t==null?this.removeAttribute(\"src\"):this.setAttribute(\"src\",t))}get type(){var t;return(t=this.getAttribute(o.TYPE))!=null?t:void 0}set type(t){t!==this.type&&(t?this.setAttribute(o.TYPE,t):this.removeAttribute(o.TYPE))}get autoplay(){let t=this.getAttribute(\"autoplay\");return t===null?!1:t===\"\"?!0:t}set autoplay(t){let s=this.autoplay;t!==s&&(t?this.setAttribute(\"autoplay\",typeof t==\"string\"?t:\"\"):this.removeAttribute(\"autoplay\"))}get preload(){let t=this.getAttribute(\"preload\");return t===\"\"?\"auto\":[\"none\",\"metadata\",\"auto\"].includes(t)?t:super.preload}set preload(t){t!=this.getAttribute(\"preload\")&&([\"\",\"none\",\"metadata\",\"auto\"].includes(t)?this.setAttribute(\"preload\",t):this.removeAttribute(\"preload\"))}get debug(){return this.getAttribute(o.DEBUG)!=null}set debug(t){t!==this.debug&&(t?this.setAttribute(o.DEBUG,\"\"):this.removeAttribute(o.DEBUG))}get disableTracking(){return this.hasAttribute(o.DISABLE_TRACKING)}set disableTracking(t){t!==this.disableTracking&&this.toggleAttribute(o.DISABLE_TRACKING,!!t)}get disableCookies(){return this.hasAttribute(o.DISABLE_COOKIES)}set disableCookies(t){t!==this.disableCookies&&(t?this.setAttribute(o.DISABLE_COOKIES,\"\"):this.removeAttribute(o.DISABLE_COOKIES))}get startTime(){let t=this.getAttribute(o.START_TIME);if(t==null)return;let s=+t;return Number.isNaN(s)?void 0:s}set startTime(t){t!==this.startTime&&(t==null?this.removeAttribute(o.START_TIME):this.setAttribute(o.START_TIME,`${t}`))}get playbackId(){var t;return this.hasAttribute(o.PLAYBACK_ID)?this.getAttribute(o.PLAYBACK_ID):(t=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.toPlaybackIdFromSrc)(this.src))!=null?t:void 0}set playbackId(t){t!==this.playbackId&&(t?this.setAttribute(o.PLAYBACK_ID,t):this.removeAttribute(o.PLAYBACK_ID))}get maxResolution(){var t;return(t=this.getAttribute(o.MAX_RESOLUTION))!=null?t:void 0}set maxResolution(t){t!==this.maxResolution&&(t?this.setAttribute(o.MAX_RESOLUTION,t):this.removeAttribute(o.MAX_RESOLUTION))}get minResolution(){var t;return(t=this.getAttribute(o.MIN_RESOLUTION))!=null?t:void 0}set minResolution(t){t!==this.minResolution&&(t?this.setAttribute(o.MIN_RESOLUTION,t):this.removeAttribute(o.MIN_RESOLUTION))}get renditionOrder(){var t;return(t=this.getAttribute(o.RENDITION_ORDER))!=null?t:void 0}set renditionOrder(t){t!==this.renditionOrder&&(t?this.setAttribute(o.RENDITION_ORDER,t):this.removeAttribute(o.RENDITION_ORDER))}get programStartTime(){let t=this.getAttribute(o.PROGRAM_START_TIME);if(t==null)return;let s=+t;return Number.isNaN(s)?void 0:s}set programStartTime(t){t==null?this.removeAttribute(o.PROGRAM_START_TIME):this.setAttribute(o.PROGRAM_START_TIME,`${t}`)}get programEndTime(){let t=this.getAttribute(o.PROGRAM_END_TIME);if(t==null)return;let s=+t;return Number.isNaN(s)?void 0:s}set programEndTime(t){t==null?this.removeAttribute(o.PROGRAM_END_TIME):this.setAttribute(o.PROGRAM_END_TIME,`${t}`)}get assetStartTime(){let t=this.getAttribute(o.ASSET_START_TIME);if(t==null)return;let s=+t;return Number.isNaN(s)?void 0:s}set assetStartTime(t){t==null?this.removeAttribute(o.ASSET_START_TIME):this.setAttribute(o.ASSET_START_TIME,`${t}`)}get assetEndTime(){let t=this.getAttribute(o.ASSET_END_TIME);if(t==null)return;let s=+t;return Number.isNaN(s)?void 0:s}set assetEndTime(t){t==null?this.removeAttribute(o.ASSET_END_TIME):this.setAttribute(o.ASSET_END_TIME,`${t}`)}get customDomain(){var t;return(t=this.getAttribute(o.CUSTOM_DOMAIN))!=null?t:void 0}set customDomain(t){t!==this.customDomain&&(t?this.setAttribute(o.CUSTOM_DOMAIN,t):this.removeAttribute(o.CUSTOM_DOMAIN))}get drmToken(){var t;return(t=this.getAttribute(o.DRM_TOKEN))!=null?t:void 0}set drmToken(t){t!==this.drmToken&&(t?this.setAttribute(o.DRM_TOKEN,t):this.removeAttribute(o.DRM_TOKEN))}get playbackToken(){var t,s,n,h;if(this.hasAttribute(o.PLAYBACK_TOKEN))return(t=this.getAttribute(o.PLAYBACK_TOKEN))!=null?t:void 0;if(this.hasAttribute(o.PLAYBACK_ID)){let[,m]=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.toPlaybackIdParts)((s=this.playbackId)!=null?s:\"\");return(n=new URLSearchParams(m).get(\"token\"))!=null?n:void 0}if(this.src)return(h=new URLSearchParams(this.src).get(\"token\"))!=null?h:void 0}set playbackToken(t){t!==this.playbackToken&&(t?this.setAttribute(o.PLAYBACK_TOKEN,t):this.removeAttribute(o.PLAYBACK_TOKEN))}get tokens(){let t=this.getAttribute(o.PLAYBACK_TOKEN),s=this.getAttribute(o.DRM_TOKEN);return{...r(this,Bt),...t!=null?{playback:t}:{},...s!=null?{drm:s}:{}}}set tokens(t){u(this,Bt,t!=null?t:{})}get ended(){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getEnded)(this.nativeEl,this._hls)}get envKey(){var t;return(t=this.getAttribute(o.ENV_KEY))!=null?t:void 0}set envKey(t){t!==this.envKey&&(t?this.setAttribute(o.ENV_KEY,t):this.removeAttribute(o.ENV_KEY))}get beaconCollectionDomain(){var t;return(t=this.getAttribute(o.BEACON_COLLECTION_DOMAIN))!=null?t:void 0}set beaconCollectionDomain(t){t!==this.beaconCollectionDomain&&(t?this.setAttribute(o.BEACON_COLLECTION_DOMAIN,t):this.removeAttribute(o.BEACON_COLLECTION_DOMAIN))}get streamType(){var t;return(t=this.getAttribute(o.STREAM_TYPE))!=null?t:(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getStreamType)(this.nativeEl)}set streamType(t){t!==this.streamType&&(t?this.setAttribute(o.STREAM_TYPE,t):this.removeAttribute(o.STREAM_TYPE))}get targetLiveWindow(){return this.hasAttribute(o.TARGET_LIVE_WINDOW)?+this.getAttribute(o.TARGET_LIVE_WINDOW):(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getTargetLiveWindow)(this.nativeEl)}set targetLiveWindow(t){t!=this.targetLiveWindow&&(t==null?this.removeAttribute(o.TARGET_LIVE_WINDOW):this.setAttribute(o.TARGET_LIVE_WINDOW,`${+t}`))}get liveEdgeStart(){var t,s;if(this.hasAttribute(o.LIVE_EDGE_OFFSET)){let{liveEdgeOffset:n}=this,h=(t=this.nativeEl.seekable.end(0))!=null?t:0,m=(s=this.nativeEl.seekable.start(0))!=null?s:0;return Math.max(m,h-n)}return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getLiveEdgeStart)(this.nativeEl)}get liveEdgeOffset(){if(this.hasAttribute(o.LIVE_EDGE_OFFSET))return+this.getAttribute(o.LIVE_EDGE_OFFSET)}set liveEdgeOffset(t){t!=this.liveEdgeOffset&&(t==null?this.removeAttribute(o.LIVE_EDGE_OFFSET):this.setAttribute(o.LIVE_EDGE_OFFSET,`${+t}`))}get seekable(){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getSeekable)(this.nativeEl)}async addCuePoints(t){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.addCuePoints)(this.nativeEl,t)}get activeCuePoint(){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getActiveCuePoint)(this.nativeEl)}get cuePoints(){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getCuePoints)(this.nativeEl)}async addChapters(t){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.addChapters)(this.nativeEl,t)}get activeChapter(){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getActiveChapter)(this.nativeEl)}get chapters(){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getChapters)(this.nativeEl)}getStartDate(){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getStartDate)(this.nativeEl,this._hls)}get currentPdt(){return (0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentPdt)(this.nativeEl,this._hls)}get preferPlayback(){let t=this.getAttribute(o.PREFER_PLAYBACK);if(t===_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.PlaybackTypes.MSE||t===_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.PlaybackTypes.NATIVE)return t}set preferPlayback(t){t!==this.preferPlayback&&(t===_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.PlaybackTypes.MSE||t===_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.PlaybackTypes.NATIVE?this.setAttribute(o.PREFER_PLAYBACK,t):this.removeAttribute(o.PREFER_PLAYBACK))}get metadata(){return{...this.getAttributeNames().filter(s=>s.startsWith(\"metadata-\")&&![o.METADATA_URL].includes(s)).reduce((s,n)=>{let h=this.getAttribute(n);return h!=null&&(s[n.replace(/^metadata-/,\"\").replace(/-/g,\"_\")]=h),s},{}),...r(this,It)}}set metadata(t){u(this,It,t!=null?t:{}),this.mux&&this.mux.emit(\"hb\",r(this,It))}get _hlsConfig(){return r(this,Kt)}set _hlsConfig(t){u(this,Kt,t)}get logo(){return this.getAttribute(o.LOGO)}set logo(t){t?this.setAttribute(o.LOGO,t):this.removeAttribute(o.LOGO)}load(){u(this,x,(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.initialize)(this,this.nativeEl,r(this,x)))}unload(){(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.teardown)(this.nativeEl,r(this,x)),u(this,x,void 0)}attributeChangedCallback(t,s,n){var m,d;switch($t.observedAttributes.includes(t)&&![\"src\",\"autoplay\",\"preload\"].includes(t)&&super.attributeChangedCallback(t,s,n),t){case o.PLAYER_SOFTWARE_NAME:this.playerSoftwareName=n!=null?n:void 0;break;case o.PLAYER_SOFTWARE_VERSION:this.playerSoftwareVersion=n!=null?n:void 0;break;case\"src\":{let T=!!s,w=!!n;!T&&w?v(this,Pt,ae).call(this):T&&!w?this.unload():T&&w&&(this.unload(),v(this,Pt,ae).call(this));break}case\"autoplay\":if(n===s)break;(m=r(this,x))==null||m.setAutoplay(this.autoplay);break;case\"preload\":if(n===s)break;(d=r(this,x))==null||d.setPreload(n);break;case o.PLAYBACK_ID:this.src=(0,_mux_playback_core__WEBPACK_IMPORTED_MODULE_0__.toMuxVideoURL)(this);break;case o.DEBUG:{let T=this.debug;this.mux&&console.info(\"Cannot toggle debug mode of mux data after initialization. Make sure you set all metadata to override before setting the src.\"),this._hls&&(this._hls.config.debug=T);break}case o.METADATA_URL:n&&fetch(n).then(T=>T.json()).then(T=>this.metadata=T).catch(()=>console.error(`Unable to load or parse metadata JSON from metadata-url ${n}!`));break;case o.STREAM_TYPE:(n==null||n!==s)&&this.dispatchEvent(new CustomEvent(\"streamtypechange\",{composed:!0,bubbles:!0}));break;case o.TARGET_LIVE_WINDOW:(n==null||n!==s)&&this.dispatchEvent(new CustomEvent(\"targetlivewindowchange\",{composed:!0,bubbles:!0,detail:this.targetLiveWindow}));break;default:break}}connectedCallback(){var t;(t=super.connectedCallback)==null||t.call(this),this.nativeEl&&this.src&&!r(this,x)&&v(this,Pt,ae).call(this)}disconnectedCallback(){this.unload()}};x=new WeakMap,_t=new WeakMap,Ft=new WeakMap,It=new WeakMap,Bt=new WeakMap,Kt=new WeakMap,qt=new WeakMap,Ut=new WeakMap,Yt=new WeakMap,Pt=new WeakSet,ae=async function(){r(this,_t)||(await u(this,_t,Promise.resolve()),u(this,_t,null),this.load())};var Ht,Gt=class extends $e(oi(ve)){constructor(){super(...arguments);l(this,Ht)}get muxCastCustomData(){return{mux:{playbackId:this.playbackId,minResolution:this.minResolution,maxResolution:this.maxResolution,renditionOrder:this.renditionOrder,customDomain:this.customDomain,tokens:{drm:this.drmToken},envKey:this.envKey,metadata:this.metadata,disableCookies:this.disableCookies,disableTracking:this.disableTracking,beaconCollectionDomain:this.beaconCollectionDomain,startTime:this.startTime,preferCmcd:this.preferCmcd}}}get castCustomData(){var t;return(t=r(this,Ht))!=null?t:this.muxCastCustomData}set castCustomData(t){u(this,Ht,t)}};Ht=new WeakMap;Wt.customElements.get(\"mux-video\")||(Wt.customElements.define(\"mux-video\",Gt),Wt.MuxVideoElement=Gt);var ws=Gt;\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mux/mux-video/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mux/playback-core/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@mux/playback-core/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoplayTypes: () => (/* binding */ F),\n/* harmony export */   CmcdTypeValues: () => (/* binding */ Yt),\n/* harmony export */   CmcdTypes: () => (/* binding */ O),\n/* harmony export */   ExtensionMimeTypeMap: () => (/* binding */ L),\n/* harmony export */   Hls: () => (/* binding */ E),\n/* harmony export */   MaxResolution: () => (/* binding */ Bt),\n/* harmony export */   MediaError: () => (/* binding */ f),\n/* harmony export */   MimeTypeShorthandMap: () => (/* binding */ K),\n/* harmony export */   MinResolution: () => (/* binding */ Jt),\n/* harmony export */   MuxErrorCategory: () => (/* binding */ x),\n/* harmony export */   MuxErrorCode: () => (/* binding */ R),\n/* harmony export */   MuxJWTAud: () => (/* binding */ se),\n/* harmony export */   PlaybackTypes: () => (/* binding */ z),\n/* harmony export */   RenditionOrder: () => (/* binding */ Gt),\n/* harmony export */   StreamTypes: () => (/* binding */ _),\n/* harmony export */   addChapters: () => (/* binding */ he),\n/* harmony export */   addCuePoints: () => (/* binding */ Pe),\n/* harmony export */   addTextTrack: () => (/* binding */ ne),\n/* harmony export */   allMediaTypes: () => (/* binding */ $t),\n/* harmony export */   errorCategoryToTokenNameOrPrefix: () => (/* binding */ V),\n/* harmony export */   generatePlayerInitTime: () => (/* binding */ Ur),\n/* harmony export */   generateUUID: () => (/* binding */ bt),\n/* harmony export */   getActiveChapter: () => (/* binding */ Le),\n/* harmony export */   getActiveCuePoint: () => (/* binding */ ve),\n/* harmony export */   getAppCertificate: () => (/* binding */ At),\n/* harmony export */   getChapters: () => (/* binding */ st),\n/* harmony export */   getCuePoints: () => (/* binding */ at),\n/* harmony export */   getCurrentPdt: () => (/* binding */ ct),\n/* harmony export */   getDRMConfig: () => (/* binding */ It),\n/* harmony export */   getEnded: () => (/* binding */ kt),\n/* harmony export */   getError: () => (/* binding */ Pt),\n/* harmony export */   getLicenseKey: () => (/* binding */ St),\n/* harmony export */   getLiveEdgeStart: () => (/* binding */ Fr),\n/* harmony export */   getMediaPlaylistLinesFromMultivariantPlaylistSrc: () => (/* binding */ pt),\n/* harmony export */   getSeekable: () => (/* binding */ We),\n/* harmony export */   getStartDate: () => (/* binding */ it),\n/* harmony export */   getStreamInfoFromHlsjsLevelDetails: () => (/* binding */ mt),\n/* harmony export */   getStreamInfoFromPlaylistLines: () => (/* binding */ ft),\n/* harmony export */   getStreamInfoFromSrcAndType: () => (/* binding */ Tt),\n/* harmony export */   getStreamType: () => (/* binding */ Se),\n/* harmony export */   getStreamTypeConfig: () => (/* binding */ Nt),\n/* harmony export */   getTargetLiveWindow: () => (/* binding */ Vr),\n/* harmony export */   getTextTrack: () => (/* binding */ S),\n/* harmony export */   i18n: () => (/* binding */ g),\n/* harmony export */   initialize: () => (/* binding */ Kr),\n/* harmony export */   isKeyOf: () => (/* binding */ w),\n/* harmony export */   isMuxVideoSrc: () => (/* binding */ je),\n/* harmony export */   isPseudoEnded: () => (/* binding */ _t),\n/* harmony export */   isStuckOnLastFragment: () => (/* binding */ Be),\n/* harmony export */   loadMedia: () => (/* binding */ Ut),\n/* harmony export */   mux: () => (/* reexport safe */ mux_embed__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   muxMediaState: () => (/* binding */ P),\n/* harmony export */   parseJwt: () => (/* binding */ ee),\n/* harmony export */   removeTextTrack: () => (/* binding */ ot),\n/* harmony export */   setupChapters: () => (/* binding */ Ne),\n/* harmony export */   setupCuePoints: () => (/* binding */ _e),\n/* harmony export */   setupHls: () => (/* binding */ Lt),\n/* harmony export */   setupMux: () => (/* binding */ Ot),\n/* harmony export */   setupNativeFairplayDRM: () => (/* binding */ wt),\n/* harmony export */   shorthandKeys: () => (/* binding */ Wt),\n/* harmony export */   teardown: () => (/* binding */ ht),\n/* harmony export */   toAppCertURL: () => (/* binding */ Ge),\n/* harmony export */   toDRMTypeFromKeySystem: () => (/* binding */ lt),\n/* harmony export */   toLicenseKeyURL: () => (/* binding */ j),\n/* harmony export */   toMuxVideoURL: () => (/* binding */ Hr),\n/* harmony export */   toPlaybackIdFromSrc: () => (/* binding */ Ct),\n/* harmony export */   toPlaybackIdParts: () => (/* binding */ W),\n/* harmony export */   updateStreamInfoFromHlsjsLevelDetails: () => (/* binding */ Et),\n/* harmony export */   updateStreamInfoFromSrc: () => (/* binding */ yt)\n/* harmony export */ });\n/* harmony import */ var mux_embed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mux-embed */ \"(ssr)/./node_modules/mux-embed/dist/mux.mjs\");\n/* harmony import */ var hls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hls.js */ \"(ssr)/./node_modules/hls.js/dist/hls.mjs\");\nvar E=hls_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];var x={VIDEO:\"video\",THUMBNAIL:\"thumbnail\",STORYBOARD:\"storyboard\",DRM:\"drm\"},R={NOT_AN_ERROR:0,NETWORK_OFFLINE:2000002,NETWORK_UNKNOWN_ERROR:2e6,NETWORK_NO_STATUS:2000001,NETWORK_INVALID_URL:24e5,NETWORK_NOT_FOUND:2404e3,NETWORK_NOT_READY:2412e3,NETWORK_GENERIC_SERVER_FAIL:25e5,NETWORK_TOKEN_MISSING:2403201,NETWORK_TOKEN_MALFORMED:2412202,NETWORK_TOKEN_EXPIRED:2403210,NETWORK_TOKEN_AUD_MISSING:2403221,NETWORK_TOKEN_AUD_MISMATCH:2403222,NETWORK_TOKEN_SUB_MISMATCH:2403232,ENCRYPTED_ERROR:5e6,ENCRYPTED_UNSUPPORTED_KEY_SYSTEM:5000001,ENCRYPTED_GENERATE_REQUEST_FAILED:5000002,ENCRYPTED_UPDATE_LICENSE_FAILED:5000003,ENCRYPTED_UPDATE_SERVER_CERT_FAILED:5000004,ENCRYPTED_CDM_ERROR:5000005,ENCRYPTED_OUTPUT_RESTRICTED:5000006,ENCRYPTED_MISSING_TOKEN:5000002},V=e=>e===x.VIDEO?\"playback\":e,k=class k extends Error{constructor(t,r=k.MEDIA_ERR_CUSTOM,n,o){var a;super(t),this.name=\"MediaError\",this.code=r,this.context=o,this.fatal=n!=null?n:r>=k.MEDIA_ERR_NETWORK&&r<=k.MEDIA_ERR_ENCRYPTED,this.message||(this.message=(a=k.defaultMessages[this.code])!=null?a:\"\")}};k.MEDIA_ERR_ABORTED=1,k.MEDIA_ERR_NETWORK=2,k.MEDIA_ERR_DECODE=3,k.MEDIA_ERR_SRC_NOT_SUPPORTED=4,k.MEDIA_ERR_ENCRYPTED=5,k.MEDIA_ERR_CUSTOM=100,k.defaultMessages={1:\"You aborted the media playback\",2:\"A network error caused the media download to fail.\",3:\"A media error caused playback to be aborted. The media could be corrupt or your browser does not support this format.\",4:\"An unsupported error occurred. The server or network failed, or your browser does not support this format.\",5:\"The media is encrypted and there are no keys to decrypt it.\"};var f=k;var Qe=e=>e==null,w=(e,t)=>Qe(t)?!1:e in t,F={ANY:\"any\",MUTED:\"muted\"},_={ON_DEMAND:\"on-demand\",LIVE:\"live\",UNKNOWN:\"unknown\"},z={MSE:\"mse\",NATIVE:\"native\"},O={HEADER:\"header\",QUERY:\"query\",NONE:\"none\"},Yt=Object.values(O),L={M3U8:\"application/vnd.apple.mpegurl\",MP4:\"video/mp4\"},K={HLS:L.M3U8},Wt=Object.keys(K),$t=[...Object.values(L),\"hls\",\"HLS\"],Bt={upTo720p:\"720p\",upTo1080p:\"1080p\",upTo1440p:\"1440p\",upTo2160p:\"2160p\"},Jt={noLessThan480p:\"480p\",noLessThan540p:\"540p\",noLessThan720p:\"720p\",noLessThan1080p:\"1080p\",noLessThan1440p:\"1440p\",noLessThan2160p:\"2160p\"},Gt={DESCENDING:\"desc\"};var Ze=\"en\",Y={code:Ze};var C=(e,t,r,n,o=e)=>{o.addEventListener(t,r,n),e.addEventListener(\"teardown\",()=>{o.removeEventListener(t,r)},{once:!0})};function pe(e,t,r){t&&r>t&&(r=t);for(let n=0;n<e.length;n++)if(e.start(n)<=r&&e.end(n)>=r)return!0;return!1}var W=e=>{let t=e.indexOf(\"?\");if(t<0)return[e];let r=e.slice(0,t),n=e.slice(t);return[r,n]},U=e=>{let{type:t}=e;if(t){let r=t.toUpperCase();return w(r,K)?K[r]:t}return et(e)},Q=e=>e===\"VOD\"?_.ON_DEMAND:_.LIVE,Z=e=>e===\"EVENT\"?Number.POSITIVE_INFINITY:e===\"VOD\"?Number.NaN:0,et=e=>{let{src:t}=e;if(!t)return\"\";let r=\"\";try{r=new URL(t).pathname}catch{console.error(\"invalid url\")}let n=r.lastIndexOf(\".\");if(n<0)return rt(e)?L.M3U8:\"\";let a=r.slice(n+1).toUpperCase();return w(a,L)?L[a]:\"\"},tt=\"mux.com\",rt=({src:e,customDomain:t=tt})=>{let r;try{r=new URL(`${e}`)}catch{return!1}let n=r.protocol===\"https:\",o=r.hostname===`stream.${t}`.toLowerCase(),a=r.pathname.split(\"/\"),s=a.length===2,u=!(a!=null&&a[1].includes(\".\"));return n&&o&&s&&u},ee=e=>{let t=(e!=null?e:\"\").split(\".\")[1];if(t)try{let r=t.replace(/-/g,\"+\").replace(/_/g,\"/\"),n=decodeURIComponent(atob(r).split(\"\").map(function(o){return\"%\"+(\"00\"+o.charCodeAt(0).toString(16)).slice(-2)}).join(\"\"));return JSON.parse(n)}catch{return}},fe=({exp:e},t=Date.now())=>!e||e*1e3<t,Te=({sub:e},t)=>e!==t,ye=({aud:e},t)=>!e,me=({aud:e},t)=>e!==t,Ee=\"en\";function g(e,t=!0){var o,a;let r=t&&(a=(o=Y)==null?void 0:o[e])!=null?a:e,n=t?Y.code:Ee;return new X(r,n)}var X=class{constructor(t,r=(n=>(n=Y)!=null?n:Ee)()){this.message=t,this.locale=r}format(t){return this.message.replace(/\\{(\\w+)\\}/g,(r,n)=>{var o;return(o=t[n])!=null?o:\"\"})}toString(){return this.message}};var nt=Object.values(F),ge=e=>typeof e==\"boolean\"||typeof e==\"string\"&&nt.includes(e),Me=(e,t,r)=>{let{autoplay:n}=e,o=!1,a=!1,s=ge(n)?n:!!n,u=()=>{o||C(t,\"playing\",()=>{o=!0},{once:!0})};if(u(),C(t,\"loadstart\",()=>{o=!1,u(),te(t,s)},{once:!0}),C(t,\"loadstart\",()=>{r||(e.streamType&&e.streamType!==_.UNKNOWN?a=e.streamType===_.LIVE:a=!Number.isFinite(t.duration)),te(t,s)},{once:!0}),r&&r.once(E.Events.LEVEL_LOADED,(c,i)=>{var d;e.streamType&&e.streamType!==_.UNKNOWN?a=e.streamType===_.LIVE:a=(d=i.details.live)!=null?d:!1}),!s){let c=()=>{!a||Number.isFinite(e.startTime)||(r!=null&&r.liveSyncPosition?t.currentTime=r.liveSyncPosition:Number.isFinite(t.seekable.end(0))&&(t.currentTime=t.seekable.end(0)))};r&&C(t,\"play\",()=>{t.preload===\"metadata\"?r.once(E.Events.LEVEL_UPDATED,c):c()},{once:!0})}return c=>{o||(s=ge(c)?c:!!c,te(t,s))}},te=(e,t)=>{if(!t)return;let r=e.muted,n=()=>e.muted=r;switch(t){case F.ANY:e.play().catch(()=>{e.muted=!0,e.play().catch(n)});break;case F.MUTED:e.muted=!0,e.play().catch(n);break;default:e.play().catch(()=>{});break}};var Re=({preload:e,src:t},r,n)=>{let o=d=>{d!=null&&[\"\",\"none\",\"metadata\",\"auto\"].includes(d)?r.setAttribute(\"preload\",d):r.removeAttribute(\"preload\")};if(!n)return o(e),o;let a=!1,s=!1,u=n.config.maxBufferLength,l=n.config.maxBufferSize,c=d=>{o(d);let p=d!=null?d:r.preload;s||p===\"none\"||(p===\"metadata\"?(n.config.maxBufferLength=1,n.config.maxBufferSize=1):(n.config.maxBufferLength=u,n.config.maxBufferSize=l),i())},i=()=>{!a&&t&&(a=!0,n.loadSource(t))};return C(r,\"play\",()=>{s=!0,n.config.maxBufferLength=u,n.config.maxBufferSize=l,i()},{once:!0}),c(e),c};function xe(e,t){var l;if(!(\"videoTracks\"in e))return;let r=new WeakMap;t.on(E.Events.MANIFEST_PARSED,function(c,i){u();let d=e.addVideoTrack(\"main\");d.selected=!0;for(let[p,T]of i.levels.entries()){let y=d.addRendition(T.url[0],T.width,T.height,T.videoCodec,T.bitrate);r.set(T,`${p}`),y.id=`${p}`}}),t.on(E.Events.AUDIO_TRACKS_UPDATED,function(c,i){s();for(let d of i.audioTracks){let p=d.default?\"main\":\"alternative\",T=e.addAudioTrack(p,d.name,d.lang);T.id=`${d.id}`,d.default&&(T.enabled=!0)}}),e.audioTracks.addEventListener(\"change\",()=>{var d;let c=+((d=[...e.audioTracks].find(p=>p.enabled))==null?void 0:d.id),i=t.audioTracks.map(p=>p.id);c!=t.audioTrack&&i.includes(c)&&(t.audioTrack=c)}),t.on(E.Events.LEVELS_UPDATED,function(c,i){var T;let d=e.videoTracks[(T=e.videoTracks.selectedIndex)!=null?T:0];if(!d)return;let p=i.levels.map(y=>r.get(y));for(let y of e.videoRenditions)y.id&&!p.includes(y.id)&&d.removeRendition(y)});let n=c=>{let i=c.target.selectedIndex;i!=t.nextLevel&&o(i)},o=c=>{let i=e.currentTime,d=!1,p=(T,y)=>{d||(d=!Number.isFinite(y.endOffset))};t.on(E.Events.BUFFER_FLUSHING,p),t.nextLevel=c,t.off(E.Events.BUFFER_FLUSHING,p),d||t.trigger(E.Events.BUFFER_FLUSHING,{startOffset:i+10,endOffset:1/0,type:\"video\"})};(l=e.videoRenditions)==null||l.addEventListener(\"change\",n);let a=()=>{for(let c of e.videoTracks)e.removeVideoTrack(c)},s=()=>{for(let c of e.audioTracks)e.removeAudioTrack(c)},u=()=>{a(),s()};t.once(E.Events.DESTROYING,u)}var re=e=>\"time\"in e?e.time:e.startTime;function be(e,t){t.on(E.Events.NON_NATIVE_TEXT_TRACKS_FOUND,(o,{tracks:a})=>{a.forEach(s=>{var i,d;let u=(i=s.subtitleTrack)!=null?i:s.closedCaptions,l=t.subtitleTracks.findIndex(({lang:p,name:T,type:y})=>p==(u==null?void 0:u.lang)&&T===s.label&&y.toLowerCase()===s.kind),c=((d=s._id)!=null?d:s.default)?\"default\":`${s.kind}${l}`;ne(e,s.kind,s.label,u==null?void 0:u.lang,c,s.default)})});let r=()=>{if(!t.subtitleTracks.length)return;let o=Array.from(e.textTracks).find(u=>u.id&&u.mode===\"showing\"&&[\"subtitles\",\"captions\"].includes(u.kind));if(!o)return;let a=t.subtitleTracks[t.subtitleTrack],s=a?a.default?\"default\":`${t.subtitleTracks[t.subtitleTrack].type.toLowerCase()}${t.subtitleTrack}`:void 0;if(t.subtitleTrack<0||(o==null?void 0:o.id)!==s){let u=t.subtitleTracks.findIndex(({lang:l,name:c,type:i,default:d})=>o.id===\"default\"&&d||l==o.language&&c===o.label&&i.toLowerCase()===o.kind);t.subtitleTrack=u}(o==null?void 0:o.id)===s&&o.cues&&Array.from(o.cues).forEach(u=>{o.addCue(u)})};e.textTracks.addEventListener(\"change\",r),t.on(E.Events.CUES_PARSED,(o,{track:a,cues:s})=>{let u=e.textTracks.getTrackById(a);if(!u)return;let l=u.mode===\"disabled\";l&&(u.mode=\"hidden\"),s.forEach(c=>{var i;(i=u.cues)!=null&&i.getCueById(c.id)||u.addCue(c)}),l&&(u.mode=\"disabled\")}),t.once(E.Events.DESTROYING,()=>{e.textTracks.removeEventListener(\"change\",r),e.querySelectorAll(\"track[data-removeondestroy]\").forEach(a=>{a.remove()})});let n=()=>{Array.from(e.textTracks).forEach(o=>{var a,s;if(![\"subtitles\",\"caption\"].includes(o.kind)&&(o.label===\"thumbnails\"||o.kind===\"chapters\")){if(!((a=o.cues)!=null&&a.length)){let u=\"track\";o.kind&&(u+=`[kind=\"${o.kind}\"]`),o.label&&(u+=`[label=\"${o.label}\"]`);let l=e.querySelector(u),c=(s=l==null?void 0:l.getAttribute(\"src\"))!=null?s:\"\";l==null||l.removeAttribute(\"src\"),setTimeout(()=>{l==null||l.setAttribute(\"src\",c)},0)}o.mode!==\"hidden\"&&(o.mode=\"hidden\")}})};t.once(E.Events.MANIFEST_LOADED,n),t.once(E.Events.MEDIA_ATTACHED,n)}function ne(e,t,r,n,o,a){let s=document.createElement(\"track\");return s.kind=t,s.label=r,n&&(s.srclang=n),o&&(s.id=o),a&&(s.default=!0),s.track.mode=[\"subtitles\",\"captions\"].includes(t)?\"disabled\":\"hidden\",s.setAttribute(\"data-removeondestroy\",\"\"),e.append(s),s.track}function ot(e,t){let r=Array.prototype.find.call(e.querySelectorAll(\"track\"),n=>n.track===t);r==null||r.remove()}function S(e,t,r){var n;return(n=Array.from(e.querySelectorAll(\"track\")).find(o=>o.track.label===t&&o.track.kind===r))==null?void 0:n.track}async function Ce(e,t,r,n){let o=S(e,r,n);return o||(o=ne(e,n,r),o.mode=\"hidden\",await new Promise(a=>setTimeout(()=>a(void 0),0))),o.mode!==\"hidden\"&&(o.mode=\"hidden\"),[...t].sort((a,s)=>re(s)-re(a)).forEach(a=>{var l,c;let s=a.value,u=re(a);if(\"endTime\"in a&&a.endTime!=null)o==null||o.addCue(new VTTCue(u,a.endTime,n===\"chapters\"?s:JSON.stringify(s!=null?s:null)));else{let i=Array.prototype.findIndex.call(o==null?void 0:o.cues,y=>y.startTime>=u),d=(l=o==null?void 0:o.cues)==null?void 0:l[i],p=d?d.startTime:Number.isFinite(e.duration)?e.duration:Number.MAX_SAFE_INTEGER,T=(c=o==null?void 0:o.cues)==null?void 0:c[i-1];T&&(T.endTime=u),o==null||o.addCue(new VTTCue(u,p,n===\"chapters\"?s:JSON.stringify(s!=null?s:null)))}}),e.textTracks.dispatchEvent(new Event(\"change\",{bubbles:!0,composed:!0})),o}var oe=\"cuepoints\",De=Object.freeze({label:oe});async function Pe(e,t,r=De){return Ce(e,t,r.label,\"metadata\")}var $=e=>({time:e.startTime,value:JSON.parse(e.text)});function at(e,t={label:oe}){let r=S(e,t.label,\"metadata\");return r!=null&&r.cues?Array.from(r.cues,n=>$(n)):[]}function ve(e,t={label:oe}){var a,s;let r=S(e,t.label,\"metadata\");if(!((a=r==null?void 0:r.activeCues)!=null&&a.length))return;if(r.activeCues.length===1)return $(r.activeCues[0]);let{currentTime:n}=e,o=Array.prototype.find.call((s=r.activeCues)!=null?s:[],({startTime:u,endTime:l})=>u<=n&&l>n);return $(o||r.activeCues[0])}async function _e(e,t=De){return new Promise(r=>{C(e,\"loadstart\",async()=>{let n=await Pe(e,[],t);C(e,\"cuechange\",()=>{let o=ve(e);if(o){let a=new CustomEvent(\"cuepointchange\",{composed:!0,bubbles:!0,detail:o});e.dispatchEvent(a)}},{},n),r(n)})})}var ae=\"chapters\",ke=Object.freeze({label:ae}),B=e=>({startTime:e.startTime,endTime:e.endTime,value:e.text});async function he(e,t,r=ke){return Ce(e,t,r.label,\"chapters\")}function st(e,t={label:ae}){var n;let r=S(e,t.label,\"chapters\");return(n=r==null?void 0:r.cues)!=null&&n.length?Array.from(r.cues,o=>B(o)):[]}function Le(e,t={label:ae}){var a,s;let r=S(e,t.label,\"chapters\");if(!((a=r==null?void 0:r.activeCues)!=null&&a.length))return;if(r.activeCues.length===1)return B(r.activeCues[0]);let{currentTime:n}=e,o=Array.prototype.find.call((s=r.activeCues)!=null?s:[],({startTime:u,endTime:l})=>u<=n&&l>n);return B(o||r.activeCues[0])}async function Ne(e,t=ke){return new Promise(r=>{C(e,\"loadstart\",async()=>{let n=await he(e,[],t);C(e,\"cuechange\",()=>{let o=Le(e);if(o){let a=new CustomEvent(\"chapterchange\",{composed:!0,bubbles:!0,detail:o});e.dispatchEvent(a)}},{},n),r(n)})})}function it(e,t){if(t){let r=t.playingDate;if(r!=null)return new Date(r.getTime()-e.currentTime*1e3)}return typeof e.getStartDate==\"function\"?e.getStartDate():new Date(NaN)}function ct(e,t){if(t&&t.playingDate)return t.playingDate;if(typeof e.getStartDate==\"function\"){let r=e.getStartDate();return new Date(r.getTime()+e.currentTime*1e3)}return new Date(NaN)}var se={VIDEO:\"v\",THUMBNAIL:\"t\",STORYBOARD:\"s\",DRM:\"d\"},ut=e=>{if(e===x.VIDEO)return se.VIDEO;if(e===x.DRM)return se.DRM},dt=(e,t)=>{var o,a;let r=V(e),n=`${r}Token`;return(o=t.tokens)!=null&&o[r]?(a=t.tokens)==null?void 0:a[r]:w(n,t)?t[n]:void 0},H=(e,t,r,n,o=!1,a=!(s=>(s=globalThis.navigator)==null?void 0:s.onLine)())=>{var v,A;if(a){let M=g(\"Your device appears to be offline\",o),D=void 0,m=f.MEDIA_ERR_NETWORK,h=new f(M,m,!1,D);return h.errorCategory=t,h.muxCode=R.NETWORK_OFFLINE,h.data=e,h}let u=\"status\"in e?e.status:e.code,l=Date.now(),c=f.MEDIA_ERR_NETWORK;if(u===200)return;let i=V(t),d=dt(t,r),p=ut(t),[T]=W((v=r.playbackId)!=null?v:\"\");if(!u||!T)return;let y=ee(d);if(d&&!y){let M=g(\"The {tokenNamePrefix}-token provided is invalid or malformed.\",o).format({tokenNamePrefix:i}),D=g(\"Compact JWT string: {token}\",o).format({token:d}),m=new f(M,c,!0,D);return m.errorCategory=t,m.muxCode=R.NETWORK_TOKEN_MALFORMED,m.data=e,m}if(u>=500){let M=new f(\"\",c,n!=null?n:!0);return M.errorCategory=t,M.muxCode=R.NETWORK_UNKNOWN_ERROR,M}if(u===403)if(y){if(fe(y,l)){let M={timeStyle:\"medium\",dateStyle:\"medium\"},D=g(\"The video\\u2019s secured {tokenNamePrefix}-token has expired.\",o).format({tokenNamePrefix:i}),m=g(\"Expired at: {expiredDate}. Current time: {currentDate}.\",o).format({expiredDate:new Intl.DateTimeFormat(\"en\",M).format((A=y.exp)!=null?A:0*1e3),currentDate:new Intl.DateTimeFormat(\"en\",M).format(l)}),h=new f(D,c,!0,m);return h.errorCategory=t,h.muxCode=R.NETWORK_TOKEN_EXPIRED,h.data=e,h}if(Te(y,T)){let M=g(\"The video\\u2019s playback ID does not match the one encoded in the {tokenNamePrefix}-token.\",o).format({tokenNamePrefix:i}),D=g(\"Specified playback ID: {playbackId} and the playback ID encoded in the {tokenNamePrefix}-token: {tokenPlaybackId}\",o).format({tokenNamePrefix:i,playbackId:T,tokenPlaybackId:y.sub}),m=new f(M,c,!0,D);return m.errorCategory=t,m.muxCode=R.NETWORK_TOKEN_SUB_MISMATCH,m.data=e,m}if(ye(y,p)){let M=g(\"The {tokenNamePrefix}-token is formatted with incorrect information.\",o).format({tokenNamePrefix:i}),D=g(\"The {tokenNamePrefix}-token has no aud value. aud value should be {expectedAud}.\",o).format({tokenNamePrefix:i,expectedAud:p}),m=new f(M,c,!0,D);return m.errorCategory=t,m.muxCode=R.NETWORK_TOKEN_AUD_MISSING,m.data=e,m}if(me(y,p)){let M=g(\"The {tokenNamePrefix}-token is formatted with incorrect information.\",o).format({tokenNamePrefix:i}),D=g(\"The {tokenNamePrefix}-token has an incorrect aud value: {aud}. aud value should be {expectedAud}.\",o).format({tokenNamePrefix:i,expectedAud:p,aud:y.aud}),m=new f(M,c,!0,D);return m.errorCategory=t,m.muxCode=R.NETWORK_TOKEN_AUD_MISMATCH,m.data=e,m}}else{let M=g(\"Authorization error trying to access this {category} URL. If this is a signed URL, you might need to provide a {tokenNamePrefix}-token.\",o).format({tokenNamePrefix:i,category:t}),D=g(\"Specified playback ID: {playbackId}\",o).format({playbackId:T}),m=new f(M,c,n!=null?n:!0,D);return m.errorCategory=t,m.muxCode=R.NETWORK_TOKEN_MISSING,m.data=e,m}if(u===412){let M=g(\"This playback-id may belong to a live stream that is not currently active or an asset that is not ready.\",o),D=g(\"Specified playback ID: {playbackId}\",o).format({playbackId:T}),m=new f(M,c,n!=null?n:!0,D);return m.errorCategory=t,m.muxCode=R.NETWORK_NOT_READY,m.data=e,m}if(u===404){let M=g(\"This URL or playback-id does not exist. You may have used an Asset ID or an ID from a different resource.\",o),D=g(\"Specified playback ID: {playbackId}\",o).format({playbackId:T}),m=new f(M,c,n!=null?n:!0,D);return m.errorCategory=t,m.muxCode=R.NETWORK_NOT_FOUND,m.data=e,m}if(u===400){let M=g(\"The URL or playback-id was invalid. You may have used an invalid value as a playback-id.\"),D=g(\"Specified playback ID: {playbackId}\",o).format({playbackId:T}),m=new f(M,c,n!=null?n:!0,D);return m.errorCategory=t,m.muxCode=R.NETWORK_INVALID_URL,m.data=e,m}let b=new f(\"\",c,n!=null?n:!0);return b.errorCategory=t,b.muxCode=R.NETWORK_UNKNOWN_ERROR,b.data=e,b};var Ie=E.DefaultConfig.capLevelController,J=class J extends Ie{constructor(t){super(t)}get levels(){var t;return(t=this.hls.levels)!=null?t:[]}getValidLevels(t){return this.levels.filter((r,n)=>this.isLevelAllowed(r)&&n<=t)}getMaxLevel(t){let r=super.getMaxLevel(t),n=this.getValidLevels(t);if(!n[r])return r;let o=Math.min(n[r].width,n[r].height),a=J.minMaxResolution;return o>=a?r:Ie.getMaxLevelByMediaSize(n,a*(16/9),a)}};J.minMaxResolution=720;var ie=J,Ae=ie;var G={FAIRPLAY:\"fairplay\",PLAYREADY:\"playready\",WIDEVINE:\"widevine\"},lt=e=>{if(e.includes(\"fps\"))return G.FAIRPLAY;if(e.includes(\"playready\"))return G.PLAYREADY;if(e.includes(\"widevine\"))return G.WIDEVINE},pt=async e=>fetch(e).then(t=>t.status!==200?Promise.reject(t):t.text()).then(t=>{let r=t.split(`\n`).find((n,o,a)=>o&&a[o-1].startsWith(\"#EXT-X-STREAM-INF\"));return fetch(r).then(n=>n.status!==200?Promise.reject(n):n.text()).then(n=>n.split(`\n`))}),ft=e=>{var s,u,l;let r=(u=((s=e.find(c=>c.startsWith(\"#EXT-X-PLAYLIST-TYPE\")))!=null?s:\"\").split(\":\")[1])==null?void 0:u.trim(),n=Q(r),o=Z(r),a;if(n===_.LIVE){let c=e.find(d=>d.startsWith(\"#EXT-X-PART-INF\"));if(!!c)a=+c.split(\":\")[1].split(\"=\")[1]*2;else{let d=e.find(y=>y.startsWith(\"#EXT-X-TARGETDURATION\")),p=(l=d==null?void 0:d.split(\":\"))==null?void 0:l[1];a=+(p!=null?p:6)*3}}return{streamType:n,targetLiveWindow:o,liveEdgeStartOffset:a}},Tt=async(e,t)=>{if(t===L.MP4)return{streamType:_.ON_DEMAND,targetLiveWindow:Number.NaN,liveEdgeStartOffset:void 0};if(t===L.M3U8){let r=await pt(e);return ft(r)}return console.error(`Media type ${t} is an unrecognized or unsupported type for src ${e}.`),{streamType:void 0,targetLiveWindow:void 0,liveEdgeStartOffset:void 0}},yt=async(e,t,r=U({src:e}))=>{var s,u,l;let{streamType:n,targetLiveWindow:o,liveEdgeStartOffset:a}=await Tt(e,r);((s=P.get(t))!=null?s:{}).liveEdgeStartOffset=a,((u=P.get(t))!=null?u:{}).targetLiveWindow=o,t.dispatchEvent(new CustomEvent(\"targetlivewindowchange\",{composed:!0,bubbles:!0})),((l=P.get(t))!=null?l:{}).streamType=n,t.dispatchEvent(new CustomEvent(\"streamtypechange\",{composed:!0,bubbles:!0}))},mt=e=>{var s;let t=e.type,r=Q(t),n=Z(t),o,a=!!((s=e.partList)!=null&&s.length);return r===_.LIVE&&(o=a?e.partTarget*2:e.targetduration*3),{streamType:r,targetLiveWindow:n,liveEdgeStartOffset:o,lowLatency:a}},Et=(e,t,r)=>{var u,l,c,i,d,p,T,y;let{streamType:n,targetLiveWindow:o,liveEdgeStartOffset:a,lowLatency:s}=mt(e);if(n===_.LIVE){s?(r.config.backBufferLength=(u=r.userConfig.backBufferLength)!=null?u:4,r.config.maxFragLookUpTolerance=(l=r.userConfig.maxFragLookUpTolerance)!=null?l:.001,r.config.abrBandWidthUpFactor=(c=r.userConfig.abrBandWidthUpFactor)!=null?c:r.config.abrBandWidthFactor):r.config.backBufferLength=(i=r.userConfig.backBufferLength)!=null?i:8;let b=Object.freeze({get length(){return t.seekable.length},start(v){return t.seekable.start(v)},end(v){var A;return v>this.length||v<0||Number.isFinite(t.duration)?t.seekable.end(v):(A=r.liveSyncPosition)!=null?A:t.seekable.end(v)}});((d=P.get(t))!=null?d:{}).seekable=b}((p=P.get(t))!=null?p:{}).liveEdgeStartOffset=a,((T=P.get(t))!=null?T:{}).targetLiveWindow=o,t.dispatchEvent(new CustomEvent(\"targetlivewindowchange\",{composed:!0,bubbles:!0})),((y=P.get(t))!=null?y:{}).streamType=n,t.dispatchEvent(new CustomEvent(\"streamtypechange\",{composed:!0,bubbles:!0}))},we,Oe,gt=(Oe=(we=globalThis==null?void 0:globalThis.navigator)==null?void 0:we.userAgent)!=null?Oe:\"\",Ue,He,Ve,Mt=(Ve=(He=(Ue=globalThis==null?void 0:globalThis.navigator)==null?void 0:Ue.userAgentData)==null?void 0:He.platform)!=null?Ve:\"\",Rt=gt.toLowerCase().includes(\"android\")||[\"x11\",\"android\"].some(e=>Mt.toLowerCase().includes(e)),P=new WeakMap,I=\"mux.com\",Fe,Ke,Ye=(Ke=(Fe=E).isSupported)==null?void 0:Ke.call(Fe),xt=Rt,Ur=()=>mux_embed__WEBPACK_IMPORTED_MODULE_0__[\"default\"].utils.now(),bt=mux_embed__WEBPACK_IMPORTED_MODULE_0__[\"default\"].utils.generateUUID,Hr=({playbackId:e,customDomain:t=I,maxResolution:r,minResolution:n,renditionOrder:o,programStartTime:a,programEndTime:s,assetStartTime:u,assetEndTime:l,playbackToken:c,tokens:{playback:i=c}={},extraSourceParams:d={}}={})=>{if(!e)return;let[p,T=\"\"]=W(e),y=new URL(`https://stream.${t}/${p}.m3u8${T}`);return i||y.searchParams.has(\"token\")?(y.searchParams.forEach((b,v)=>{v!=\"token\"&&y.searchParams.delete(v)}),i&&y.searchParams.set(\"token\",i)):(r&&y.searchParams.set(\"max_resolution\",r),n&&(y.searchParams.set(\"min_resolution\",n),r&&+r.slice(0,-1)<+n.slice(0,-1)&&console.error(\"minResolution must be <= maxResolution\",\"minResolution\",n,\"maxResolution\",r)),o&&y.searchParams.set(\"rendition_order\",o),a&&y.searchParams.set(\"program_start_time\",`${a}`),s&&y.searchParams.set(\"program_end_time\",`${s}`),u&&y.searchParams.set(\"asset_start_time\",`${u}`),l&&y.searchParams.set(\"asset_end_time\",`${l}`),Object.entries(d).forEach(([b,v])=>{v!=null&&y.searchParams.set(b,v)})),y.toString()},q=e=>{if(!e)return;let[t]=e.split(\"?\");return t||void 0},Ct=e=>{if(!e||!e.startsWith(\"https://stream.\"))return;let[t]=new URL(e).pathname.slice(1).split(\".m3u8\");return t||void 0},Dt=e=>{var t,r,n;return(t=e==null?void 0:e.metadata)!=null&&t.video_id?e.metadata.video_id:je(e)&&(n=(r=q(e.playbackId))!=null?r:Ct(e.src))!=null?n:e.src},Pt=e=>{var t;return(t=P.get(e))==null?void 0:t.error},Se=e=>{var t,r;return(r=(t=P.get(e))==null?void 0:t.streamType)!=null?r:_.UNKNOWN},Vr=e=>{var t,r;return(r=(t=P.get(e))==null?void 0:t.targetLiveWindow)!=null?r:Number.NaN},We=e=>{var t,r;return(r=(t=P.get(e))==null?void 0:t.seekable)!=null?r:e.seekable},Fr=e=>{var n;let t=(n=P.get(e))==null?void 0:n.liveEdgeStartOffset;if(typeof t!=\"number\")return Number.NaN;let r=We(e);return r.length?r.end(r.length-1)-t:Number.NaN},de=.034,vt=(e,t,r=de)=>Math.abs(e-t)<=r,$e=(e,t,r=de)=>e>t||vt(e,t,r),_t=(e,t=de)=>e.paused&&$e(e.currentTime,e.duration,t),Be=(e,t)=>{var c,i,d;if(!t||!e.buffered.length)return;if(e.readyState>2)return!1;let r=t.currentLevel>=0?(i=(c=t.levels)==null?void 0:c[t.currentLevel])==null?void 0:i.details:(d=t.levels.find(p=>!!p.details))==null?void 0:d.details;if(!r||r.live)return;let{fragments:n}=r;if(!(n!=null&&n.length))return;if(e.currentTime<e.duration-(r.targetduration+.5))return!1;let o=n[n.length-1];if(e.currentTime<=o.start)return!1;let a=o.start+o.duration/2,s=e.buffered.start(e.buffered.length-1),u=e.buffered.end(e.buffered.length-1);return a>s&&a<u},kt=(e,t)=>e.ended||e.loop?e.ended:t&&Be(e,t)?!0:_t(e),Kr=(e,t,r)=>{ht(t,r);let{metadata:n={}}=e,{view_session_id:o=bt()}=n,a=Dt(e);n.view_session_id=o,n.video_id=a,e.metadata=n;let s=i=>{var d;(d=t.mux)==null||d.emit(\"hb\",{view_drm_type:i})};e.drmTypeCb=s,P.set(t,{});let u=Lt(e,t),l=Re(e,t,u);Ot(e,t,u),Ut(e,t,u),_e(t),Ne(t);let c=Me(e,t,u);return{engine:u,setAutoplay:c,setPreload:l}},ht=(e,t)=>{let r=t==null?void 0:t.engine;r&&(r.detachMedia(),r.destroy()),e!=null&&e.mux&&!e.mux.deleted&&(e.mux.destroy(),delete e.mux),e&&(e.removeAttribute(\"src\"),e.load(),e.removeEventListener(\"error\",ze),e.removeEventListener(\"error\",ce),e.removeEventListener(\"durationchange\",qe),P.delete(e),e.dispatchEvent(new Event(\"teardown\")))};function Je(e,t){var c;let r=U(e);if(!(r===L.M3U8))return!0;let o=!r||((c=t.canPlayType(r))!=null?c:!0),{preferPlayback:a}=e,s=a===z.MSE,u=a===z.NATIVE;return o&&(u||!(Ye&&(s||xt)))}var Lt=(e,t)=>{let{debug:r,streamType:n,startTime:o=-1,metadata:a,preferCmcd:s,_hlsConfig:u={}}=e,c=U(e)===L.M3U8,i=Je(e,t);if(c&&!i&&Ye){let d={backBufferLength:30,renderTextTracksNatively:!1,liveDurationInfinity:!0,capLevelToPlayerSize:!0,capLevelOnFPSDrop:!0},p=Nt(n),T=It(e),y=s!==O.NONE?{useHeaders:s===O.HEADER,sessionId:a==null?void 0:a.view_session_id,contentId:a==null?void 0:a.video_id}:void 0;return new E({debug:r,startPosition:o,cmcd:y,xhrSetup:(v,A)=>{var m,h;if(s&&s!==O.QUERY)return;let M=new URL(A);if(!M.searchParams.has(\"CMCD\"))return;let D=((h=(m=M.searchParams.get(\"CMCD\"))==null?void 0:m.split(\",\"))!=null?h:[]).filter(le=>le.startsWith(\"sid\")||le.startsWith(\"cid\")).join(\",\");M.searchParams.set(\"CMCD\",D),v.open(\"GET\",M)},capLevelController:Ae,...d,...p,...T,...u})}},Nt=e=>e===_.LIVE?{backBufferLength:8}:{},It=e=>{let{tokens:{drm:t}={},playbackId:r,drmTypeCb:n}=e,o=q(r);return!t||!o?{}:{emeEnabled:!0,drmSystems:{\"com.apple.fps\":{licenseUrl:j(e,\"fairplay\"),serverCertificateUrl:Ge(e,\"fairplay\")},\"com.widevine.alpha\":{licenseUrl:j(e,\"widevine\")},\"com.microsoft.playready\":{licenseUrl:j(e,\"playready\")}},requestMediaKeySystemAccessFunc:(a,s)=>(a===\"com.widevine.alpha\"&&(s=[...s.map(u=>{var c;let l=(c=u.videoCapabilities)==null?void 0:c.map(i=>({...i,robustness:\"HW_SECURE_ALL\"}));return{...u,videoCapabilities:l}}),...s]),navigator.requestMediaKeySystemAccess(a,s).then(u=>{let l=lt(a);return n==null||n(l),u}))}},At=async e=>{let t=await fetch(e);return t.status!==200?Promise.reject(t):await t.arrayBuffer()},St=async(e,t)=>{let r=await fetch(t,{method:\"POST\",headers:{\"Content-type\":\"application/octet-stream\"},body:e});if(r.status!==200)return Promise.reject(r);let n=await r.arrayBuffer();return new Uint8Array(n)},wt=(e,t)=>{C(t,\"encrypted\",async n=>{try{let o=n.initDataType;if(o!==\"skd\"){console.error(`Received unexpected initialization data type \"${o}\"`);return}if(!t.mediaKeys){let c=await navigator.requestMediaKeySystemAccess(\"com.apple.fps\",[{initDataTypes:[o],videoCapabilities:[{contentType:\"application/vnd.apple.mpegurl\",robustness:\"\"}],distinctiveIdentifier:\"not-allowed\",persistentState:\"not-allowed\",sessionTypes:[\"temporary\"]}]).then(d=>{var p;return(p=e.drmTypeCb)==null||p.call(e,G.FAIRPLAY),d}).catch(()=>{let d=g(\"Cannot play DRM-protected content with current security configuration on this browser. Try playing in another browser.\"),p=new f(d,f.MEDIA_ERR_ENCRYPTED,!0);p.errorCategory=x.DRM,p.muxCode=R.ENCRYPTED_UNSUPPORTED_KEY_SYSTEM,N(t,p)});if(!c)return;let i=await c.createMediaKeys();try{let d=await At(Ge(e,\"fairplay\")).catch(p=>{if(p instanceof Response){let T=H(p,x.DRM,e);return console.error(\"mediaError\",T==null?void 0:T.message,T==null?void 0:T.context),T?Promise.reject(T):Promise.reject(new Error(\"Unexpected error in app cert request\"))}return Promise.reject(p)});await i.setServerCertificate(d).catch(()=>{let p=g(\"Your server certificate failed when attempting to set it. This may be an issue with a no longer valid certificate.\"),T=new f(p,f.MEDIA_ERR_ENCRYPTED,!0);return T.errorCategory=x.DRM,T.muxCode=R.ENCRYPTED_UPDATE_SERVER_CERT_FAILED,Promise.reject(T)})}catch(d){N(t,d);return}await t.setMediaKeys(i)}let a=n.initData;if(a==null){console.error(`Could not start encrypted playback due to missing initData in ${n.type} event`);return}let s=t.mediaKeys.createSession();s.addEventListener(\"keystatuseschange\",()=>{s.keyStatuses.forEach(c=>{let i;if(c===\"internal-error\"){let d=g(\"The DRM Content Decryption Module system had an internal failure. Try reloading the page, upading your browser, or playing in another browser.\");i=new f(d,f.MEDIA_ERR_ENCRYPTED,!0),i.errorCategory=x.DRM,i.muxCode=R.ENCRYPTED_CDM_ERROR}else if(c===\"output-restricted\"||c===\"output-downscaled\"){let d=g(\"DRM playback is being attempted in an environment that is not sufficiently secure. User may see black screen.\");i=new f(d,f.MEDIA_ERR_ENCRYPTED,!1),i.errorCategory=x.DRM,i.muxCode=R.ENCRYPTED_OUTPUT_RESTRICTED}i&&N(t,i)})});let u=await Promise.all([s.generateRequest(o,a).catch(()=>{let c=g(\"Failed to generate a DRM license request. This may be an issue with the player or your protected content.\"),i=new f(c,f.MEDIA_ERR_ENCRYPTED,!0);i.errorCategory=x.DRM,i.muxCode=R.ENCRYPTED_GENERATE_REQUEST_FAILED,N(t,i)}),new Promise(c=>{s.addEventListener(\"message\",i=>{c(i.message)},{once:!0})})]).then(([,c])=>c),l=await St(u,j(e,\"fairplay\")).catch(c=>{if(c instanceof Response){let i=H(c,x.DRM,e);return console.error(\"mediaError\",i==null?void 0:i.message,i==null?void 0:i.context),i?Promise.reject(i):Promise.reject(new Error(\"Unexpected error in license key request\"))}return Promise.reject(c)});await s.update(l).catch(()=>{let c=g(\"Failed to update DRM license. This may be an issue with the player or your protected content.\"),i=new f(c,f.MEDIA_ERR_ENCRYPTED,!0);return i.errorCategory=x.DRM,i.muxCode=R.ENCRYPTED_UPDATE_LICENSE_FAILED,Promise.reject(i)})}catch(o){N(t,o);return}})},j=({playbackId:e,tokens:{drm:t}={},customDomain:r=I},n)=>{let o=q(e);return`https://license.${r.toLocaleLowerCase().endsWith(I)?r:I}/license/${n}/${o}?token=${t}`},Ge=({playbackId:e,tokens:{drm:t}={},customDomain:r=I},n)=>{let o=q(e);return`https://license.${r.toLocaleLowerCase().endsWith(I)?r:I}/appcert/${n}/${o}?token=${t}`},je=({playbackId:e,src:t,customDomain:r})=>{if(e)return!0;if(typeof t!=\"string\")return!1;let n=window==null?void 0:window.location.href,o=new URL(t,n).hostname.toLocaleLowerCase();return o.includes(I)||!!r&&o.includes(r.toLocaleLowerCase())},Ot=(e,t,r)=>{var s;let{envKey:n,disableTracking:o}=e,a=je(e);if(!o&&(n||a)){let{playerInitTime:u,playerSoftwareName:l,playerSoftwareVersion:c,beaconCollectionDomain:i,debug:d,disableCookies:p}=e,T={...e.metadata,video_title:((s=e==null?void 0:e.metadata)==null?void 0:s.video_title)||void 0},y=b=>typeof b.player_error_code==\"string\"?!1:typeof e.errorTranslator==\"function\"?e.errorTranslator(b):b;mux_embed__WEBPACK_IMPORTED_MODULE_0__[\"default\"].monitor(t,{debug:d,beaconCollectionDomain:i,hlsjs:r,Hls:r?E:void 0,automaticErrorTracking:!1,errorTranslator:y,disableCookies:p,data:{...n?{env_key:n}:{},player_software_name:l,player_software:l,player_software_version:c,player_init_time:u,...T}})}},Ut=(e,t,r)=>{var c,i;let n=Je(e,t),{src:o}=e,a=()=>{t.ended||!kt(t,r)||(Be(t,r)?t.currentTime=t.buffered.end(t.buffered.length-1):t.dispatchEvent(new Event(\"ended\")))},s,u,l=()=>{let d=We(t),p,T;d.length>0&&(p=d.start(0),T=d.end(0)),(u!==T||s!==p)&&t.dispatchEvent(new CustomEvent(\"seekablechange\",{composed:!0})),s=p,u=T};if(C(t,\"durationchange\",l),t&&n){let d=U(e);if(typeof o==\"string\"){let p=()=>{if(Se(t)!==_.LIVE||Number.isFinite(t.duration))return;let y=setInterval(l,1e3);t.addEventListener(\"teardown\",()=>{clearInterval(y)},{once:!0}),C(t,\"durationchange\",()=>{Number.isFinite(t.duration)&&clearInterval(y)})},T=async()=>yt(o,t,d).then(p).catch(y=>{if(y instanceof Response){let b=H(y,x.VIDEO,e);if(b){N(t,b);return}}else y instanceof Error});if(t.preload===\"none\"){let y=()=>{T(),t.removeEventListener(\"loadedmetadata\",b)},b=()=>{T(),t.removeEventListener(\"play\",y)};C(t,\"play\",y,{once:!0}),C(t,\"loadedmetadata\",b,{once:!0})}else T();(c=e.tokens)!=null&&c.drm?wt(e,t):C(t,\"encrypted\",()=>{let y=g(\"Attempting to play DRM-protected content without providing a DRM token.\"),b=new f(y,f.MEDIA_ERR_ENCRYPTED,!0);b.errorCategory=x.DRM,b.muxCode=R.ENCRYPTED_MISSING_TOKEN,N(t,b)},{once:!0}),t.setAttribute(\"src\",o),e.startTime&&(((i=P.get(t))!=null?i:{}).startTime=e.startTime,t.addEventListener(\"durationchange\",qe,{once:!0}))}else t.removeAttribute(\"src\");t.addEventListener(\"error\",ze),t.addEventListener(\"error\",ce),t.addEventListener(\"emptied\",()=>{t.querySelectorAll(\"track[data-removeondestroy]\").forEach(T=>{T.remove()})},{once:!0}),C(t,\"pause\",a),C(t,\"seeked\",a),C(t,\"play\",()=>{t.ended||$e(t.currentTime,t.duration)&&(t.currentTime=t.seekable.length?t.seekable.start(0):0)})}else r&&o?(r.once(E.Events.LEVEL_LOADED,(d,p)=>{Et(p.details,t,r),l(),Se(t)===_.LIVE&&!Number.isFinite(t.duration)&&(r.on(E.Events.LEVEL_UPDATED,l),C(t,\"durationchange\",()=>{Number.isFinite(t.duration)&&r.off(E.Events.LEVELS_UPDATED,l)}))}),r.on(E.Events.ERROR,(d,p)=>{N(t,Ht(p,e))}),t.addEventListener(\"error\",ce),C(t,\"waiting\",a),xe(e,r),be(t,r),r.attachMedia(t)):console.error(\"It looks like the video you're trying to play will not work on this system! If possible, try upgrading to the newest versions of your browser or software.\")};function qe(e){var n;let t=e.target,r=(n=P.get(t))==null?void 0:n.startTime;if(r&&pe(t.seekable,t.duration,r)){let o=t.preload===\"auto\";o&&(t.preload=\"none\"),t.currentTime=r,o&&(t.preload=\"auto\")}}async function ze(e){if(!e.isTrusted)return;e.stopImmediatePropagation();let t=e.target;if(!(t!=null&&t.error))return;let{message:r,code:n}=t.error,o=new f(r,n);if(t.src&&n===f.MEDIA_ERR_SRC_NOT_SUPPORTED&&t.readyState===HTMLMediaElement.HAVE_NOTHING){setTimeout(()=>{var s;let a=(s=Pt(t))!=null?s:t.error;(a==null?void 0:a.code)===f.MEDIA_ERR_SRC_NOT_SUPPORTED&&N(t,o)},500);return}if(t.src&&(n!==f.MEDIA_ERR_DECODE||n!==void 0))try{let{status:a}=await fetch(t.src);o.data={response:{code:a}}}catch{}N(t,o)}function N(e,t){var r;t.fatal&&(((r=P.get(e))!=null?r:{}).error=t,e.dispatchEvent(new CustomEvent(\"error\",{detail:t})))}function ce(e){var n,o;if(!(e instanceof CustomEvent)||!(e.detail instanceof f))return;let t=e.target,r=e.detail;!r||!r.fatal||(((n=P.get(t))!=null?n:{}).error=r,(o=t.mux)==null||o.emit(\"error\",{player_error_code:r.code,player_error_message:r.message,player_error_context:r.context}))}var Ht=(e,t)=>{var u,l,c;console.error(\"getErrorFromHlsErrorData()\",e);let r={[E.ErrorTypes.NETWORK_ERROR]:f.MEDIA_ERR_NETWORK,[E.ErrorTypes.MEDIA_ERROR]:f.MEDIA_ERR_DECODE,[E.ErrorTypes.KEY_SYSTEM_ERROR]:f.MEDIA_ERR_ENCRYPTED},n=i=>[E.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED,E.ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED].includes(i.details)?f.MEDIA_ERR_NETWORK:r[i.type],o=i=>{if(i.type===E.ErrorTypes.KEY_SYSTEM_ERROR)return x.DRM;if(i.type===E.ErrorTypes.NETWORK_ERROR)return x.VIDEO},a,s=n(e);if(s===f.MEDIA_ERR_NETWORK&&e.response){let i=(u=o(e))!=null?u:x.VIDEO;a=(l=H(e.response,i,t,e.fatal))!=null?l:new f(\"\",s,e.fatal)}else if(s===f.MEDIA_ERR_ENCRYPTED)if(e.details===E.ErrorDetails.KEY_SYSTEM_NO_CONFIGURED_LICENSE){let i=g(\"Attempting to play DRM-protected content without providing a DRM token.\");a=new f(i,f.MEDIA_ERR_ENCRYPTED,e.fatal),a.errorCategory=x.DRM,a.muxCode=R.ENCRYPTED_MISSING_TOKEN}else if(e.details===E.ErrorDetails.KEY_SYSTEM_NO_ACCESS){let i=g(\"Cannot play DRM-protected content with current security configuration on this browser. Try playing in another browser.\");a=new f(i,f.MEDIA_ERR_ENCRYPTED,e.fatal),a.errorCategory=x.DRM,a.muxCode=R.ENCRYPTED_UNSUPPORTED_KEY_SYSTEM}else if(e.details===E.ErrorDetails.KEY_SYSTEM_NO_SESSION){let i=g(\"Failed to generate a DRM license request. This may be an issue with the player or your protected content.\");a=new f(i,f.MEDIA_ERR_ENCRYPTED,!0),a.errorCategory=x.DRM,a.muxCode=R.ENCRYPTED_GENERATE_REQUEST_FAILED}else if(e.details===E.ErrorDetails.KEY_SYSTEM_SESSION_UPDATE_FAILED){let i=g(\"Failed to update DRM license. This may be an issue with the player or your protected content.\");a=new f(i,f.MEDIA_ERR_ENCRYPTED,e.fatal),a.errorCategory=x.DRM,a.muxCode=R.ENCRYPTED_UPDATE_LICENSE_FAILED}else if(e.details===E.ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED){let i=g(\"Your server certificate failed when attempting to set it. This may be an issue with a no longer valid certificate.\");a=new f(i,f.MEDIA_ERR_ENCRYPTED,e.fatal),a.errorCategory=x.DRM,a.muxCode=R.ENCRYPTED_UPDATE_SERVER_CERT_FAILED}else if(e.details===E.ErrorDetails.KEY_SYSTEM_STATUS_INTERNAL_ERROR){let i=g(\"The DRM Content Decryption Module system had an internal failure. Try reloading the page, upading your browser, or playing in another browser.\");a=new f(i,f.MEDIA_ERR_ENCRYPTED,e.fatal),a.errorCategory=x.DRM,a.muxCode=R.ENCRYPTED_CDM_ERROR}else if(e.details===E.ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED){let i=g(\"DRM playback is being attempted in an environment that is not sufficiently secure. User may see black screen.\");a=new f(i,f.MEDIA_ERR_ENCRYPTED,!1),a.errorCategory=x.DRM,a.muxCode=R.ENCRYPTED_OUTPUT_RESTRICTED}else a=new f(e.error.message,f.MEDIA_ERR_ENCRYPTED,e.fatal),a.errorCategory=x.DRM,a.muxCode=R.ENCRYPTED_ERROR;else a=new f(\"\",s,e.fatal);return a.context||(a.context=`${e.url?`url: ${e.url}\n`:\"\"}${e.response&&(e.response.code||e.response.text)?`response: ${e.response.code}, ${e.response.text}\n`:\"\"}${e.reason?`failure reason: ${e.reason}\n`:\"\"}${e.level?`level: ${e.level}\n`:\"\"}${e.parent?`parent stream controller: ${e.parent}\n`:\"\"}${e.buffer?`buffer length: ${e.buffer}\n`:\"\"}${e.error?`error: ${e.error}\n`:\"\"}${e.event?`event: ${e.event}\n`:\"\"}${e.err?`error message: ${(c=e.err)==null?void 0:c.message}\n`:\"\"}`),a.data=e,a};\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mux/playback-core/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/_shims/MultipartBody.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@mux/mux-node/_shims/MultipartBody.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MultipartBody: () => (/* binding */ MultipartBody)\n/* harmony export */ });\n/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nclass MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9fc2hpbXMvTXVsdGlwYXJ0Qm9keS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXF9zaGltc1xcTXVsdGlwYXJ0Qm9keS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEaXNjbGFpbWVyOiBtb2R1bGVzIGluIF9zaGltcyBhcmVuJ3QgaW50ZW5kZWQgdG8gYmUgaW1wb3J0ZWQgYnkgU0RLIHVzZXJzLlxuICovXG5leHBvcnQgY2xhc3MgTXVsdGlwYXJ0Qm9keSB7XG4gICAgY29uc3RydWN0b3IoYm9keSkge1xuICAgICAgICB0aGlzLmJvZHkgPSBib2R5O1xuICAgIH1cbiAgICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgICAgIHJldHVybiAnTXVsdGlwYXJ0Qm9keSc7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXVsdGlwYXJ0Qm9keS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/_shims/MultipartBody.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/_shims/auto/jwt-node.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@mux/mux-node/_shims/auto/jwt-node.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPrivateKey: () => (/* binding */ getPrivateKey),\n/* harmony export */   getSigningKey: () => (/* binding */ getSigningKey),\n/* harmony export */   sign: () => (/* binding */ sign)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/sign.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var _util_jwt_util_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/jwt-util.mjs */ \"(rsc)/./node_modules/@mux/mux-node/util/jwt-util.mjs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n\n\n\nfunction sign(payload, secretOrPrivateKey, options) {\n    const sign = new jose__WEBPACK_IMPORTED_MODULE_2__.SignJWT({\n        ...payload,\n        ...(options.keyid ? { kid: options.keyid } : null),\n    }).setProtectedHeader({ alg: options.algorithm || 'RS256' });\n    if (options.issuer)\n        sign.setIssuer(options.issuer);\n    if (options.subject)\n        sign.setSubject(options.subject);\n    if (options.audience)\n        sign.setAudience(options.audience);\n    if (options.notBefore)\n        sign.setNotBefore(options.notBefore);\n    if (options.expiresIn)\n        sign.setExpirationTime(options.expiresIn);\n    return sign.sign(secretOrPrivateKey);\n}\nfunction getSigningKey(mux, opts) {\n    const keyId = opts.keyId || mux.jwtSigningKey;\n    if (!keyId) {\n        throw new Error('Signing key required; pass a keyId option to mux.jwt.sign*(), a jwtSigningKey option to new Mux(), or set the MUX_SIGNING_KEY environment variable');\n    }\n    return keyId;\n}\nasync function getPrivateKey(mux, opts) {\n    const key = await getPrivateKeyHelper(mux, opts);\n    if ((0,_util_jwt_util_mjs__WEBPACK_IMPORTED_MODULE_3__.isKeyLike)(key))\n        return key;\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_1__.createPrivateKey)(key);\n}\nasync function getPrivateKeyHelper(mux, opts) {\n    let key;\n    if (opts.keySecret) {\n        key = opts.keySecret;\n    }\n    else if (opts.keyFilePath) {\n        key = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(opts.keyFilePath, 'utf8');\n    }\n    else if (mux.jwtPrivateKey) {\n        key = mux.jwtPrivateKey;\n    }\n    if (Buffer.isBuffer(key) || (0,_util_jwt_util_mjs__WEBPACK_IMPORTED_MODULE_3__.isKeyLike)(key))\n        return key;\n    if (typeof key === 'string') {\n        key = key.trim();\n        if (key.startsWith('-----BEGIN')) {\n            return key;\n        }\n        try {\n            key = Buffer.from(key, 'base64').toString();\n            if (key.startsWith('-----BEGIN')) {\n                return key;\n            }\n        }\n        catch (err) {\n            // fallthrough\n        }\n        throw new TypeError(_util_jwt_util_mjs__WEBPACK_IMPORTED_MODULE_3__.keyFormatErrorMessage);\n    }\n    throw new TypeError('Private key required; pass a keySecret or keyFilePath option to mux.jwt.sign*(), a jwtPrivateKey option to new Mux(), or set the MUX_PRIVATE_KEY environment variable');\n}\n//# sourceMappingURL=jwt-node.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9fc2hpbXMvYXV0by9qd3Qtbm9kZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErQjtBQUNYO0FBQ3VEO0FBQ2pDO0FBQ25DO0FBQ1AscUJBQXFCLHlDQUFPO0FBQzVCO0FBQ0EsOEJBQThCLHFCQUFxQjtBQUNuRCxLQUFLLHVCQUF1QixtQ0FBbUM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxRQUFRLDZEQUFTO0FBQ2pCO0FBQ0EsV0FBVyx3REFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isd0NBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNkRBQVM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHFFQUFxQjtBQUNqRDtBQUNBLCtDQUErQztBQUMvQztBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxcX3NoaW1zXFxhdXRvXFxqd3Qtbm9kZS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2lnbkpXVCB9IGZyb20gJ2pvc2UnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCB7IGlzS2V5TGlrZSwga2V5Rm9ybWF0RXJyb3JNZXNzYWdlIH0gZnJvbSBcIi4uLy4uL3V0aWwvand0LXV0aWwubWpzXCI7XG5pbXBvcnQgeyBjcmVhdGVQcml2YXRlS2V5IH0gZnJvbSAnY3J5cHRvJztcbmV4cG9ydCBmdW5jdGlvbiBzaWduKHBheWxvYWQsIHNlY3JldE9yUHJpdmF0ZUtleSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHNpZ24gPSBuZXcgU2lnbkpXVCh7XG4gICAgICAgIC4uLnBheWxvYWQsXG4gICAgICAgIC4uLihvcHRpb25zLmtleWlkID8geyBraWQ6IG9wdGlvbnMua2V5aWQgfSA6IG51bGwpLFxuICAgIH0pLnNldFByb3RlY3RlZEhlYWRlcih7IGFsZzogb3B0aW9ucy5hbGdvcml0aG0gfHwgJ1JTMjU2JyB9KTtcbiAgICBpZiAob3B0aW9ucy5pc3N1ZXIpXG4gICAgICAgIHNpZ24uc2V0SXNzdWVyKG9wdGlvbnMuaXNzdWVyKTtcbiAgICBpZiAob3B0aW9ucy5zdWJqZWN0KVxuICAgICAgICBzaWduLnNldFN1YmplY3Qob3B0aW9ucy5zdWJqZWN0KTtcbiAgICBpZiAob3B0aW9ucy5hdWRpZW5jZSlcbiAgICAgICAgc2lnbi5zZXRBdWRpZW5jZShvcHRpb25zLmF1ZGllbmNlKTtcbiAgICBpZiAob3B0aW9ucy5ub3RCZWZvcmUpXG4gICAgICAgIHNpZ24uc2V0Tm90QmVmb3JlKG9wdGlvbnMubm90QmVmb3JlKTtcbiAgICBpZiAob3B0aW9ucy5leHBpcmVzSW4pXG4gICAgICAgIHNpZ24uc2V0RXhwaXJhdGlvblRpbWUob3B0aW9ucy5leHBpcmVzSW4pO1xuICAgIHJldHVybiBzaWduLnNpZ24oc2VjcmV0T3JQcml2YXRlS2V5KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRTaWduaW5nS2V5KG11eCwgb3B0cykge1xuICAgIGNvbnN0IGtleUlkID0gb3B0cy5rZXlJZCB8fCBtdXguand0U2lnbmluZ0tleTtcbiAgICBpZiAoIWtleUlkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignU2lnbmluZyBrZXkgcmVxdWlyZWQ7IHBhc3MgYSBrZXlJZCBvcHRpb24gdG8gbXV4Lmp3dC5zaWduKigpLCBhIGp3dFNpZ25pbmdLZXkgb3B0aW9uIHRvIG5ldyBNdXgoKSwgb3Igc2V0IHRoZSBNVVhfU0lHTklOR19LRVkgZW52aXJvbm1lbnQgdmFyaWFibGUnKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleUlkO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByaXZhdGVLZXkobXV4LCBvcHRzKSB7XG4gICAgY29uc3Qga2V5ID0gYXdhaXQgZ2V0UHJpdmF0ZUtleUhlbHBlcihtdXgsIG9wdHMpO1xuICAgIGlmIChpc0tleUxpa2Uoa2V5KSlcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICByZXR1cm4gY3JlYXRlUHJpdmF0ZUtleShrZXkpO1xufVxuYXN5bmMgZnVuY3Rpb24gZ2V0UHJpdmF0ZUtleUhlbHBlcihtdXgsIG9wdHMpIHtcbiAgICBsZXQga2V5O1xuICAgIGlmIChvcHRzLmtleVNlY3JldCkge1xuICAgICAgICBrZXkgPSBvcHRzLmtleVNlY3JldDtcbiAgICB9XG4gICAgZWxzZSBpZiAob3B0cy5rZXlGaWxlUGF0aCkge1xuICAgICAgICBrZXkgPSBhd2FpdCBmcy5wcm9taXNlcy5yZWFkRmlsZShvcHRzLmtleUZpbGVQYXRoLCAndXRmOCcpO1xuICAgIH1cbiAgICBlbHNlIGlmIChtdXguand0UHJpdmF0ZUtleSkge1xuICAgICAgICBrZXkgPSBtdXguand0UHJpdmF0ZUtleTtcbiAgICB9XG4gICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihrZXkpIHx8IGlzS2V5TGlrZShrZXkpKVxuICAgICAgICByZXR1cm4ga2V5O1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykge1xuICAgICAgICBrZXkgPSBrZXkudHJpbSgpO1xuICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoJy0tLS0tQkVHSU4nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAga2V5ID0gQnVmZmVyLmZyb20oa2V5LCAnYmFzZTY0JykudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIGlmIChrZXkuc3RhcnRzV2l0aCgnLS0tLS1CRUdJTicpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAvLyBmYWxsdGhyb3VnaFxuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3Ioa2V5Rm9ybWF0RXJyb3JNZXNzYWdlKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUHJpdmF0ZSBrZXkgcmVxdWlyZWQ7IHBhc3MgYSBrZXlTZWNyZXQgb3Iga2V5RmlsZVBhdGggb3B0aW9uIHRvIG11eC5qd3Quc2lnbiooKSwgYSBqd3RQcml2YXRlS2V5IG9wdGlvbiB0byBuZXcgTXV4KCksIG9yIHNldCB0aGUgTVVYX1BSSVZBVEVfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlJyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qd3Qtbm9kZS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/_shims/auto/jwt-node.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/_shims/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@mux/mux-node/_shims/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.Blob),\n/* harmony export */   File: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.File),\n/* harmony export */   FormData: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.FormData),\n/* harmony export */   Headers: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.Headers),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   Request: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.Request),\n/* harmony export */   Response: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.Response),\n/* harmony export */   auto: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.auto),\n/* harmony export */   fetch: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.fetch),\n/* harmony export */   fileFromPath: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.fileFromPath),\n/* harmony export */   getDefaultAgent: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.getDefaultAgent),\n/* harmony export */   getMultipartRequestOptions: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.getMultipartRequestOptions),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   isFsReadStream: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.isFsReadStream),\n/* harmony export */   kind: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.kind),\n/* harmony export */   setShims: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.setShims)\n/* harmony export */ });\n/* harmony import */ var _registry_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./registry.mjs */ \"(rsc)/./node_modules/@mux/mux-node/_shims/registry.mjs\");\n/* harmony import */ var _mux_mux_node_shims_auto_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mux/mux-node/_shims/auto/runtime */ \"(rsc)/./node_modules/@mux/mux-node/_shims/node-runtime.mjs\");\n/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\n\n\nconst init = () => {\n  if (!_registry_mjs__WEBPACK_IMPORTED_MODULE_0__.kind) _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.setShims(_mux_mux_node_shims_auto_runtime__WEBPACK_IMPORTED_MODULE_1__.getRuntime(), { auto: true });\n};\n\n\ninit();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9fc2hpbXMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUN3QztBQUNrQjtBQUNuRDtBQUNQLE9BQU8sK0NBQVUsRUFBRSxtREFBYyxDQUFDLHdFQUFlLE1BQU0sWUFBWTtBQUNuRTtBQUMrQjs7QUFFL0IiLCJzb3VyY2VzIjpbIkQ6XFx0ZW1wXFxZb3VUdWJlXFxub2RlX21vZHVsZXNcXEBtdXhcXG11eC1ub2RlXFxfc2hpbXNcXGluZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERpc2NsYWltZXI6IG1vZHVsZXMgaW4gX3NoaW1zIGFyZW4ndCBpbnRlbmRlZCB0byBiZSBpbXBvcnRlZCBieSBTREsgdXNlcnMuXG4gKi9cbmltcG9ydCAqIGFzIHNoaW1zIGZyb20gJy4vcmVnaXN0cnkubWpzJztcbmltcG9ydCAqIGFzIGF1dG8gZnJvbSAnQG11eC9tdXgtbm9kZS9fc2hpbXMvYXV0by9ydW50aW1lJztcbmV4cG9ydCBjb25zdCBpbml0ID0gKCkgPT4ge1xuICBpZiAoIXNoaW1zLmtpbmQpIHNoaW1zLnNldFNoaW1zKGF1dG8uZ2V0UnVudGltZSgpLCB7IGF1dG86IHRydWUgfSk7XG59O1xuZXhwb3J0ICogZnJvbSAnLi9yZWdpc3RyeS5tanMnO1xuXG5pbml0KCk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/_shims/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/_shims/node-runtime.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@mux/mux-node/_shims/node-runtime.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRuntime: () => (/* binding */ getRuntime)\n/* harmony export */ });\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch */ \"(rsc)/./node_modules/node-fetch/lib/index.mjs\");\n/* harmony import */ var formdata_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! formdata-node */ \"(rsc)/./node_modules/formdata-node/lib/esm/index.js\");\n/* harmony import */ var agentkeepalive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! agentkeepalive */ \"(rsc)/./node_modules/agentkeepalive/index.js\");\n/* harmony import */ var abort_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! abort-controller */ \"(rsc)/./node_modules/abort-controller/dist/abort-controller.js\");\n/* harmony import */ var node_fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node:fs */ \"node:fs\");\n/* harmony import */ var form_data_encoder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! form-data-encoder */ \"(rsc)/./node_modules/form-data-encoder/lib/esm/index.js\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var _MultipartBody_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MultipartBody.mjs */ \"(rsc)/./node_modules/@mux/mux-node/_shims/MultipartBody.mjs\");\n/* harmony import */ var node_stream_web__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! node:stream/web */ \"node:stream/web\");\n\n\n\n\n\n\n\n\n\nlet fileFromPathWarned = false;\nasync function fileFromPath(path, ...args) {\n    // this import fails in environments that don't handle export maps correctly, like old versions of Jest\n    const { fileFromPath: _fileFromPath } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/formdata-node\"), __webpack_require__.e(\"vendor-chunks/node-domexception\")]).then(__webpack_require__.bind(__webpack_require__, /*! formdata-node/file-from-path */ \"(rsc)/./node_modules/formdata-node/lib/esm/fileFromPath.js\"));\n    if (!fileFromPathWarned) {\n        console.warn(`fileFromPath is deprecated; use fs.createReadStream(${JSON.stringify(path)}) instead`);\n        fileFromPathWarned = true;\n    }\n    // @ts-ignore\n    return await _fileFromPath(path, ...args);\n}\nconst defaultHttpAgent = new agentkeepalive__WEBPACK_IMPORTED_MODULE_2__({ keepAlive: true, timeout: 5 * 60 * 1000 });\nconst defaultHttpsAgent = new agentkeepalive__WEBPACK_IMPORTED_MODULE_2__.HttpsAgent({ keepAlive: true, timeout: 5 * 60 * 1000 });\nasync function getMultipartRequestOptions(form, opts) {\n    const encoder = new form_data_encoder__WEBPACK_IMPORTED_MODULE_5__.FormDataEncoder(form);\n    const readable = node_stream__WEBPACK_IMPORTED_MODULE_6__.Readable.from(encoder);\n    const body = new _MultipartBody_mjs__WEBPACK_IMPORTED_MODULE_8__.MultipartBody(readable);\n    const headers = {\n        ...opts.headers,\n        ...encoder.headers,\n        'Content-Length': encoder.contentLength,\n    };\n    return { ...opts, body: body, headers };\n}\nfunction getRuntime() {\n    // Polyfill global object if needed.\n    if (typeof AbortController === 'undefined') {\n        // @ts-expect-error (the types are subtly different, but compatible in practice)\n        globalThis.AbortController = abort_controller__WEBPACK_IMPORTED_MODULE_3__.AbortController;\n    }\n    return {\n        kind: 'node',\n        fetch: node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        Request: node_fetch__WEBPACK_IMPORTED_MODULE_0__.Request,\n        Response: node_fetch__WEBPACK_IMPORTED_MODULE_0__.Response,\n        Headers: node_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers,\n        FormData: formdata_node__WEBPACK_IMPORTED_MODULE_1__.FormData,\n        Blob: formdata_node__WEBPACK_IMPORTED_MODULE_1__.Blob,\n        File: formdata_node__WEBPACK_IMPORTED_MODULE_1__.File,\n        ReadableStream: node_stream_web__WEBPACK_IMPORTED_MODULE_7__.ReadableStream,\n        getMultipartRequestOptions,\n        getDefaultAgent: (url) => (url.startsWith('https') ? defaultHttpsAgent : defaultHttpAgent),\n        fileFromPath,\n        isFsReadStream: (value) => value instanceof node_fs__WEBPACK_IMPORTED_MODULE_4__.ReadStream,\n    };\n}\n//# sourceMappingURL=node-runtime.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9fc2hpbXMvbm9kZS1ydW50aW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlDO0FBQ0c7QUFDUTtBQUNrQztBQUN6QjtBQUNEO0FBQ2I7QUFDYTtBQUNIO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLFlBQVksOEJBQThCLFFBQVEsa1NBQXNDO0FBQ3hGO0FBQ0Esa0RBQWtELDBCQUEwQixxQkFBcUI7QUFDakc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwyQ0FBYyxHQUFHLHlDQUF5QztBQUN2Riw4QkFBOEIsc0RBQXlCLEdBQUcseUNBQXlDO0FBQ25HO0FBQ0Esd0JBQXdCLDhEQUFlO0FBQ3ZDLHFCQUFxQixpREFBUTtBQUM3QixxQkFBcUIsNkRBQWE7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDZEQUF1QjtBQUM1RDtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFVO0FBQ3pCLGlCQUFpQiwrQ0FBVTtBQUMzQixrQkFBa0IsZ0RBQVc7QUFDN0IsaUJBQWlCLCtDQUFVO0FBQzNCLGtCQUFrQixtREFBVztBQUM3QixjQUFjLCtDQUFPO0FBQ3JCLGNBQWMsK0NBQU87QUFDckIsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCwrQ0FBWTtBQUNoRTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFx0ZW1wXFxZb3VUdWJlXFxub2RlX21vZHVsZXNcXEBtdXhcXG11eC1ub2RlXFxfc2hpbXNcXG5vZGUtcnVudGltZS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgbmYgZnJvbSAnbm9kZS1mZXRjaCc7XG5pbXBvcnQgKiBhcyBmZCBmcm9tICdmb3JtZGF0YS1ub2RlJztcbmltcG9ydCBLZWVwQWxpdmVBZ2VudCBmcm9tICdhZ2VudGtlZXBhbGl2ZSc7XG5pbXBvcnQgeyBBYm9ydENvbnRyb2xsZXIgYXMgQWJvcnRDb250cm9sbGVyUG9seWZpbGwgfSBmcm9tICdhYm9ydC1jb250cm9sbGVyJztcbmltcG9ydCB7IFJlYWRTdHJlYW0gYXMgRnNSZWFkU3RyZWFtIH0gZnJvbSAnbm9kZTpmcyc7XG5pbXBvcnQgeyBGb3JtRGF0YUVuY29kZXIgfSBmcm9tICdmb3JtLWRhdGEtZW5jb2Rlcic7XG5pbXBvcnQgeyBSZWFkYWJsZSB9IGZyb20gJ25vZGU6c3RyZWFtJztcbmltcG9ydCB7IE11bHRpcGFydEJvZHkgfSBmcm9tIFwiLi9NdWx0aXBhcnRCb2R5Lm1qc1wiO1xuaW1wb3J0IHsgUmVhZGFibGVTdHJlYW0gfSBmcm9tICdub2RlOnN0cmVhbS93ZWInO1xubGV0IGZpbGVGcm9tUGF0aFdhcm5lZCA9IGZhbHNlO1xuYXN5bmMgZnVuY3Rpb24gZmlsZUZyb21QYXRoKHBhdGgsIC4uLmFyZ3MpIHtcbiAgICAvLyB0aGlzIGltcG9ydCBmYWlscyBpbiBlbnZpcm9ubWVudHMgdGhhdCBkb24ndCBoYW5kbGUgZXhwb3J0IG1hcHMgY29ycmVjdGx5LCBsaWtlIG9sZCB2ZXJzaW9ucyBvZiBKZXN0XG4gICAgY29uc3QgeyBmaWxlRnJvbVBhdGg6IF9maWxlRnJvbVBhdGggfSA9IGF3YWl0IGltcG9ydCgnZm9ybWRhdGEtbm9kZS9maWxlLWZyb20tcGF0aCcpO1xuICAgIGlmICghZmlsZUZyb21QYXRoV2FybmVkKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgZmlsZUZyb21QYXRoIGlzIGRlcHJlY2F0ZWQ7IHVzZSBmcy5jcmVhdGVSZWFkU3RyZWFtKCR7SlNPTi5zdHJpbmdpZnkocGF0aCl9KSBpbnN0ZWFkYCk7XG4gICAgICAgIGZpbGVGcm9tUGF0aFdhcm5lZCA9IHRydWU7XG4gICAgfVxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZXR1cm4gYXdhaXQgX2ZpbGVGcm9tUGF0aChwYXRoLCAuLi5hcmdzKTtcbn1cbmNvbnN0IGRlZmF1bHRIdHRwQWdlbnQgPSBuZXcgS2VlcEFsaXZlQWdlbnQoeyBrZWVwQWxpdmU6IHRydWUsIHRpbWVvdXQ6IDUgKiA2MCAqIDEwMDAgfSk7XG5jb25zdCBkZWZhdWx0SHR0cHNBZ2VudCA9IG5ldyBLZWVwQWxpdmVBZ2VudC5IdHRwc0FnZW50KHsga2VlcEFsaXZlOiB0cnVlLCB0aW1lb3V0OiA1ICogNjAgKiAxMDAwIH0pO1xuYXN5bmMgZnVuY3Rpb24gZ2V0TXVsdGlwYXJ0UmVxdWVzdE9wdGlvbnMoZm9ybSwgb3B0cykge1xuICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgRm9ybURhdGFFbmNvZGVyKGZvcm0pO1xuICAgIGNvbnN0IHJlYWRhYmxlID0gUmVhZGFibGUuZnJvbShlbmNvZGVyKTtcbiAgICBjb25zdCBib2R5ID0gbmV3IE11bHRpcGFydEJvZHkocmVhZGFibGUpO1xuICAgIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgICAgIC4uLm9wdHMuaGVhZGVycyxcbiAgICAgICAgLi4uZW5jb2Rlci5oZWFkZXJzLFxuICAgICAgICAnQ29udGVudC1MZW5ndGgnOiBlbmNvZGVyLmNvbnRlbnRMZW5ndGgsXG4gICAgfTtcbiAgICByZXR1cm4geyAuLi5vcHRzLCBib2R5OiBib2R5LCBoZWFkZXJzIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UnVudGltZSgpIHtcbiAgICAvLyBQb2x5ZmlsbCBnbG9iYWwgb2JqZWN0IGlmIG5lZWRlZC5cbiAgICBpZiAodHlwZW9mIEFib3J0Q29udHJvbGxlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAodGhlIHR5cGVzIGFyZSBzdWJ0bHkgZGlmZmVyZW50LCBidXQgY29tcGF0aWJsZSBpbiBwcmFjdGljZSlcbiAgICAgICAgZ2xvYmFsVGhpcy5BYm9ydENvbnRyb2xsZXIgPSBBYm9ydENvbnRyb2xsZXJQb2x5ZmlsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2luZDogJ25vZGUnLFxuICAgICAgICBmZXRjaDogbmYuZGVmYXVsdCxcbiAgICAgICAgUmVxdWVzdDogbmYuUmVxdWVzdCxcbiAgICAgICAgUmVzcG9uc2U6IG5mLlJlc3BvbnNlLFxuICAgICAgICBIZWFkZXJzOiBuZi5IZWFkZXJzLFxuICAgICAgICBGb3JtRGF0YTogZmQuRm9ybURhdGEsXG4gICAgICAgIEJsb2I6IGZkLkJsb2IsXG4gICAgICAgIEZpbGU6IGZkLkZpbGUsXG4gICAgICAgIFJlYWRhYmxlU3RyZWFtLFxuICAgICAgICBnZXRNdWx0aXBhcnRSZXF1ZXN0T3B0aW9ucyxcbiAgICAgICAgZ2V0RGVmYXVsdEFnZW50OiAodXJsKSA9PiAodXJsLnN0YXJ0c1dpdGgoJ2h0dHBzJykgPyBkZWZhdWx0SHR0cHNBZ2VudCA6IGRlZmF1bHRIdHRwQWdlbnQpLFxuICAgICAgICBmaWxlRnJvbVBhdGgsXG4gICAgICAgIGlzRnNSZWFkU3RyZWFtOiAodmFsdWUpID0+IHZhbHVlIGluc3RhbmNlb2YgRnNSZWFkU3RyZWFtLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLXJ1bnRpbWUubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/_shims/node-runtime.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/_shims/registry.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@mux/mux-node/_shims/registry.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob),\n/* harmony export */   File: () => (/* binding */ File),\n/* harmony export */   FormData: () => (/* binding */ FormData),\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   ReadableStream: () => (/* binding */ ReadableStream),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   Response: () => (/* binding */ Response),\n/* harmony export */   auto: () => (/* binding */ auto),\n/* harmony export */   fetch: () => (/* binding */ fetch),\n/* harmony export */   fileFromPath: () => (/* binding */ fileFromPath),\n/* harmony export */   getDefaultAgent: () => (/* binding */ getDefaultAgent),\n/* harmony export */   getMultipartRequestOptions: () => (/* binding */ getMultipartRequestOptions),\n/* harmony export */   isFsReadStream: () => (/* binding */ isFsReadStream),\n/* harmony export */   kind: () => (/* binding */ kind),\n/* harmony export */   setShims: () => (/* binding */ setShims)\n/* harmony export */ });\nlet auto = false;\nlet kind = undefined;\nlet fetch = undefined;\nlet Request = undefined;\nlet Response = undefined;\nlet Headers = undefined;\nlet FormData = undefined;\nlet Blob = undefined;\nlet File = undefined;\nlet ReadableStream = undefined;\nlet getMultipartRequestOptions = undefined;\nlet getDefaultAgent = undefined;\nlet fileFromPath = undefined;\nlet isFsReadStream = undefined;\nfunction setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import '@mux/mux-node/shims/${shims.kind}'\\` before importing anything else from @mux/mux-node`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import '@mux/mux-node/shims/${shims.kind}'\\` after \\`import '@mux/mux-node/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9fc2hpbXMvcmVnaXN0cnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsYUFBYTtBQUN6RDtBQUNBLGtFQUFrRSxXQUFXO0FBQzdFO0FBQ0E7QUFDQSwrREFBK0QsV0FBVywwQ0FBMEMsS0FBSztBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxcX3NoaW1zXFxyZWdpc3RyeS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGxldCBhdXRvID0gZmFsc2U7XG5leHBvcnQgbGV0IGtpbmQgPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IGZldGNoID0gdW5kZWZpbmVkO1xuZXhwb3J0IGxldCBSZXF1ZXN0ID0gdW5kZWZpbmVkO1xuZXhwb3J0IGxldCBSZXNwb25zZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCBsZXQgSGVhZGVycyA9IHVuZGVmaW5lZDtcbmV4cG9ydCBsZXQgRm9ybURhdGEgPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IEJsb2IgPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IEZpbGUgPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IFJlYWRhYmxlU3RyZWFtID0gdW5kZWZpbmVkO1xuZXhwb3J0IGxldCBnZXRNdWx0aXBhcnRSZXF1ZXN0T3B0aW9ucyA9IHVuZGVmaW5lZDtcbmV4cG9ydCBsZXQgZ2V0RGVmYXVsdEFnZW50ID0gdW5kZWZpbmVkO1xuZXhwb3J0IGxldCBmaWxlRnJvbVBhdGggPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IGlzRnNSZWFkU3RyZWFtID0gdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIHNldFNoaW1zKHNoaW1zLCBvcHRpb25zID0geyBhdXRvOiBmYWxzZSB9KSB7XG4gICAgaWYgKGF1dG8pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGB5b3UgbXVzdCBcXGBpbXBvcnQgJ0BtdXgvbXV4LW5vZGUvc2hpbXMvJHtzaGltcy5raW5kfSdcXGAgYmVmb3JlIGltcG9ydGluZyBhbnl0aGluZyBlbHNlIGZyb20gQG11eC9tdXgtbm9kZWApO1xuICAgIH1cbiAgICBpZiAoa2luZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNhbid0IFxcYGltcG9ydCAnQG11eC9tdXgtbm9kZS9zaGltcy8ke3NoaW1zLmtpbmR9J1xcYCBhZnRlciBcXGBpbXBvcnQgJ0BtdXgvbXV4LW5vZGUvc2hpbXMvJHtraW5kfSdcXGBgKTtcbiAgICB9XG4gICAgYXV0byA9IG9wdGlvbnMuYXV0bztcbiAgICBraW5kID0gc2hpbXMua2luZDtcbiAgICBmZXRjaCA9IHNoaW1zLmZldGNoO1xuICAgIFJlcXVlc3QgPSBzaGltcy5SZXF1ZXN0O1xuICAgIFJlc3BvbnNlID0gc2hpbXMuUmVzcG9uc2U7XG4gICAgSGVhZGVycyA9IHNoaW1zLkhlYWRlcnM7XG4gICAgRm9ybURhdGEgPSBzaGltcy5Gb3JtRGF0YTtcbiAgICBCbG9iID0gc2hpbXMuQmxvYjtcbiAgICBGaWxlID0gc2hpbXMuRmlsZTtcbiAgICBSZWFkYWJsZVN0cmVhbSA9IHNoaW1zLlJlYWRhYmxlU3RyZWFtO1xuICAgIGdldE11bHRpcGFydFJlcXVlc3RPcHRpb25zID0gc2hpbXMuZ2V0TXVsdGlwYXJ0UmVxdWVzdE9wdGlvbnM7XG4gICAgZ2V0RGVmYXVsdEFnZW50ID0gc2hpbXMuZ2V0RGVmYXVsdEFnZW50O1xuICAgIGZpbGVGcm9tUGF0aCA9IHNoaW1zLmZpbGVGcm9tUGF0aDtcbiAgICBpc0ZzUmVhZFN0cmVhbSA9IHNoaW1zLmlzRnNSZWFkU3RyZWFtO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVnaXN0cnkubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/_shims/registry.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/core.mjs":
/*!*********************************************!*\
  !*** ./node_modules/@mux/mux-node/core.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIClient: () => (/* binding */ APIClient),\n/* harmony export */   APIPromise: () => (/* binding */ APIPromise),\n/* harmony export */   AbstractPage: () => (/* binding */ AbstractPage),\n/* harmony export */   PagePromise: () => (/* binding */ PagePromise),\n/* harmony export */   castToError: () => (/* binding */ castToError),\n/* harmony export */   coerceBoolean: () => (/* binding */ coerceBoolean),\n/* harmony export */   coerceFloat: () => (/* binding */ coerceFloat),\n/* harmony export */   coerceInteger: () => (/* binding */ coerceInteger),\n/* harmony export */   createForm: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.createForm),\n/* harmony export */   createResponseHeaders: () => (/* binding */ createResponseHeaders),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   ensurePresent: () => (/* binding */ ensurePresent),\n/* harmony export */   getHeader: () => (/* binding */ getHeader),\n/* harmony export */   getRequiredHeader: () => (/* binding */ getRequiredHeader),\n/* harmony export */   hasOwn: () => (/* binding */ hasOwn),\n/* harmony export */   isEmptyObj: () => (/* binding */ isEmptyObj),\n/* harmony export */   isHeadersProtocol: () => (/* binding */ isHeadersProtocol),\n/* harmony export */   isObj: () => (/* binding */ isObj),\n/* harmony export */   isRequestOptions: () => (/* binding */ isRequestOptions),\n/* harmony export */   isRunningInBrowser: () => (/* binding */ isRunningInBrowser),\n/* harmony export */   maybeCoerceBoolean: () => (/* binding */ maybeCoerceBoolean),\n/* harmony export */   maybeCoerceFloat: () => (/* binding */ maybeCoerceFloat),\n/* harmony export */   maybeCoerceInteger: () => (/* binding */ maybeCoerceInteger),\n/* harmony export */   maybeMultipartFormRequestOptions: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.maybeMultipartFormRequestOptions),\n/* harmony export */   multipartFormRequestOptions: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions),\n/* harmony export */   readEnv: () => (/* binding */ readEnv),\n/* harmony export */   safeJSON: () => (/* binding */ safeJSON),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   toBase64: () => (/* binding */ toBase64)\n/* harmony export */ });\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./version.mjs */ \"(rsc)/./node_modules/@mux/mux-node/version.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/./node_modules/@mux/mux-node/error.mjs\");\n/* harmony import */ var _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_shims/index.mjs */ \"(rsc)/./node_modules/@mux/mux-node/_shims/index.mjs\");\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/./node_modules/@mux/mux-node/uploads.mjs\");\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\n\n\n\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\n(0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.init)();\n\n\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nclass APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props), props));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from '@mux/mux-node'`:\n     * - `import '@mux/mux-node/shims/node'` (if you're running on Node)\n     * - `import '@mux/mux-node/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from '@mux/mux-node'`:\n     * - `import '@mux/mux-node/shims/node'` (if you're running on Node)\n     * - `import '@mux/mux-node/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nclass APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 60000, // 1 minute\n    httpAgent, fetch: overriddenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        return null;\n    }\n    buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, headers: headers = {} } = options;\n        const body = (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.isMultipartBody)(options.body) ? options.body.body\n            : options.body ? JSON.stringify(options.body, null, 2)\n                : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? (0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getDefaultAgent)(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!inputOptions.idempotencyKey)\n                inputOptions.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = inputOptions.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if ((0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.isMultipartBody)(options.body) && _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.kind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(Math.trunc(options.timeout / 1000));\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIConnectionTimeoutError();\n            }\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.MuxError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${_version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION}`;\n    }\n}\nclass AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.MuxError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nclass PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nconst createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryResponse: true,\n};\nconst isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nconst safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.MuxError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.MuxError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nconst castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nconst ensurePresent = (value) => {\n    if (value == null)\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.MuxError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nconst readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nconst coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.MuxError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.MuxError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nconst maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nconst maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nconst maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nfunction isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nfunction hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nfunction debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        console.log(`Mux:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nconst isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nconst isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nconst getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nconst getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nconst toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.MuxError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nfunction isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9jb3JlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4QkFBOEIsU0FBSSxJQUFJLFNBQUk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixTQUFJLElBQUksU0FBSTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3dDO0FBQzRFO0FBQzlCO0FBQ3RGO0FBQ0Esc0RBQUk7QUFDNEM7QUFDMkQ7QUFDM0c7QUFDQSxZQUFZLFdBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscUJBQXFCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQjtBQUNsQix3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsbURBQUs7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxRQUFRO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0UsdUJBQXVCO0FBQzNGO0FBQ0E7QUFDQSwyQ0FBMkMsOEJBQThCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsaUJBQWlCLElBQUk7QUFDdEQsMEJBQTBCO0FBQzFCLGdCQUFnQiw2Q0FBNkM7QUFDN0QscUJBQXFCLDZEQUFlO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLGlFQUFlO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsNkNBQTZDO0FBQzVGO0FBQ0E7QUFDQSwwQkFBMEIsWUFBWTtBQUN0QztBQUNBLCtCQUErQixrQkFBa0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxtQkFBbUIsOENBQThDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZEQUFlLGtCQUFrQixrREFBUztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsY0FBYztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQSxlQUFlLGdEQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0JBQW9CLCtCQUErQiwyQ0FBMkM7QUFDOUcseUNBQXlDLGNBQWM7QUFDdkQ7QUFDQTtBQUNBLHNCQUFzQix5REFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix5REFBaUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpRUFBeUI7QUFDbkQ7QUFDQSxzQkFBc0IsMERBQWtCLEdBQUcsaUJBQWlCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGtCQUFrQjtBQUNwRSx3Q0FBd0MsRUFBRSxhQUFhO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsa0NBQWtDO0FBQy9GLG9DQUFvQyxFQUFFLGFBQWE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix3QkFBd0IsR0FBRywwQkFBMEI7QUFDL0U7QUFDQTtBQUNBLDBCQUEwQix3QkFBd0I7QUFDbEQ7QUFDQSxzQkFBc0IsZ0RBQVEsMEJBQTBCLGVBQWUsNkhBQTZILFNBQVMsNENBQTRDO0FBQ3pQLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUJBQXFCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCLE1BQU0saURBQU8sQ0FBQztBQUN0RDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnREFBUSx5QkFBeUI7QUFDdkQ7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxpREFBTztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsaURBQU87QUFDbEQ7QUFDQSx5Q0FBeUMsWUFBWTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGlEQUFPO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGlEQUFPO0FBQ2xEO0FBQ0E7QUFDQSw4Q0FBOEMsb0JBQW9CO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxpREFBTztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsOERBQThEO0FBQ3hFLFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsa0VBQWtFO0FBQzVFLFVBQVUsa0VBQWtFO0FBQzVFLFVBQVUsb0VBQW9FO0FBQzlFLFVBQVUsNkZBQTZGO0FBQ3ZHO0FBQ0E7QUFDQSxpQkFBaUIsZUFBZTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBCQUEwQixNQUFNLEdBQUcsTUFBTSxHQUFHLE1BQU07QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLEtBQUs7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQixnREFBUSxJQUFJLE1BQU07QUFDcEM7QUFDQTtBQUNBLGtCQUFrQixnREFBUSxJQUFJLE1BQU07QUFDcEM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQkFBa0IsZ0RBQVEsOENBQThDLE9BQU87QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0RBQVEscUJBQXFCLE9BQU8sU0FBUyxhQUFhO0FBQ3hFO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0RBQVEscUJBQXFCLE9BQU8sU0FBUyxhQUFhO0FBQ3hFO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxpQ0FBaUMsT0FBTztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDBDQUEwQyxRQUFRO0FBQ2xEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxjQUFjLGtCQUFrQixRQUFRO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnREFBUSw4QkFBOEI7QUFDcEQ7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXGNvcmUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCB2YWx1ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcIm1cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBzZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3Qgd3JpdGUgcHJpdmF0ZSBtZW1iZXIgdG8gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4gKGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyLCB2YWx1ZSkgOiBmID8gZi52YWx1ZSA9IHZhbHVlIDogc3RhdGUuc2V0KHJlY2VpdmVyLCB2YWx1ZSkpLCB2YWx1ZTtcbn07XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfQWJzdHJhY3RQYWdlX2NsaWVudDtcbmltcG9ydCB7IFZFUlNJT04gfSBmcm9tIFwiLi92ZXJzaW9uLm1qc1wiO1xuaW1wb3J0IHsgTXV4RXJyb3IsIEFQSUVycm9yLCBBUElDb25uZWN0aW9uRXJyb3IsIEFQSUNvbm5lY3Rpb25UaW1lb3V0RXJyb3IsIEFQSVVzZXJBYm9ydEVycm9yLCB9IGZyb20gXCIuL2Vycm9yLm1qc1wiO1xuaW1wb3J0IHsga2luZCBhcyBzaGltc0tpbmQsIGdldERlZmF1bHRBZ2VudCwgZmV0Y2gsIGluaXQsIH0gZnJvbSBcIi4vX3NoaW1zL2luZGV4Lm1qc1wiO1xuLy8gdHJ5IHJ1bm5pbmcgc2lkZSBlZmZlY3RzIG91dHNpZGUgb2YgX3NoaW1zL2luZGV4IHRvIHdvcmthcm91bmQgaHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzL2lzc3Vlcy83Njg4MVxuaW5pdCgpO1xuaW1wb3J0IHsgaXNNdWx0aXBhcnRCb2R5IH0gZnJvbSBcIi4vdXBsb2Fkcy5tanNcIjtcbmV4cG9ydCB7IG1heWJlTXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zLCBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMsIGNyZWF0ZUZvcm0sIH0gZnJvbSBcIi4vdXBsb2Fkcy5tanNcIjtcbmFzeW5jIGZ1bmN0aW9uIGRlZmF1bHRQYXJzZVJlc3BvbnNlKHByb3BzKSB7XG4gICAgY29uc3QgeyByZXNwb25zZSB9ID0gcHJvcHM7XG4gICAgLy8gZmV0Y2ggcmVmdXNlcyB0byByZWFkIHRoZSBib2R5IHdoZW4gdGhlIHN0YXR1cyBjb2RlIGlzIDIwNC5cbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGlmIChwcm9wcy5vcHRpb25zLl9fYmluYXJ5UmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgICBjb25zdCBjb250ZW50VHlwZSA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKTtcbiAgICBjb25zdCBtZWRpYVR5cGUgPSBjb250ZW50VHlwZT8uc3BsaXQoJzsnKVswXT8udHJpbSgpO1xuICAgIGNvbnN0IGlzSlNPTiA9IG1lZGlhVHlwZT8uaW5jbHVkZXMoJ2FwcGxpY2F0aW9uL2pzb24nKSB8fCBtZWRpYVR5cGU/LmVuZHNXaXRoKCcranNvbicpO1xuICAgIGlmIChpc0pTT04pIHtcbiAgICAgICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgZGVidWcoJ3Jlc3BvbnNlJywgcmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS51cmwsIHJlc3BvbnNlLmhlYWRlcnMsIGpzb24pO1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICBkZWJ1ZygncmVzcG9uc2UnLCByZXNwb25zZS5zdGF0dXMsIHJlc3BvbnNlLnVybCwgcmVzcG9uc2UuaGVhZGVycywgdGV4dCk7XG4gICAgLy8gVE9ETyBoYW5kbGUgYmxvYiwgYXJyYXlidWZmZXIsIG90aGVyIGNvbnRlbnQgdHlwZXMsIGV0Yy5cbiAgICByZXR1cm4gdGV4dDtcbn1cbi8qKlxuICogQSBzdWJjbGFzcyBvZiBgUHJvbWlzZWAgcHJvdmlkaW5nIGFkZGl0aW9uYWwgaGVscGVyIG1ldGhvZHNcbiAqIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBTREsuXG4gKi9cbmV4cG9ydCBjbGFzcyBBUElQcm9taXNlIGV4dGVuZHMgUHJvbWlzZSB7XG4gICAgY29uc3RydWN0b3IocmVzcG9uc2VQcm9taXNlLCBwYXJzZVJlc3BvbnNlID0gZGVmYXVsdFBhcnNlUmVzcG9uc2UpIHtcbiAgICAgICAgc3VwZXIoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgIC8vIHRoaXMgaXMgbWF5YmUgYSBiaXQgd2VpcmQgYnV0IHRoaXMgaGFzIHRvIGJlIGEgbm8tb3AgdG8gbm90IGltcGxpY2l0bHlcbiAgICAgICAgICAgIC8vIHBhcnNlIHRoZSByZXNwb25zZSBib2R5OyBpbnN0ZWFkIC50aGVuLCAuY2F0Y2gsIC5maW5hbGx5IGFyZSBvdmVycmlkZGVuXG4gICAgICAgICAgICAvLyB0byBwYXJzZSB0aGUgcmVzcG9uc2VcbiAgICAgICAgICAgIHJlc29sdmUobnVsbCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnJlc3BvbnNlUHJvbWlzZSA9IHJlc3BvbnNlUHJvbWlzZTtcbiAgICAgICAgdGhpcy5wYXJzZVJlc3BvbnNlID0gcGFyc2VSZXNwb25zZTtcbiAgICB9XG4gICAgX3RoZW5VbndyYXAodHJhbnNmb3JtKSB7XG4gICAgICAgIHJldHVybiBuZXcgQVBJUHJvbWlzZSh0aGlzLnJlc3BvbnNlUHJvbWlzZSwgYXN5bmMgKHByb3BzKSA9PiB0cmFuc2Zvcm0oYXdhaXQgdGhpcy5wYXJzZVJlc3BvbnNlKHByb3BzKSwgcHJvcHMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgcmF3IGBSZXNwb25zZWAgaW5zdGFuY2UgaW5zdGVhZCBvZiBwYXJzaW5nIHRoZSByZXNwb25zZVxuICAgICAqIGRhdGEuXG4gICAgICpcbiAgICAgKiBJZiB5b3Ugd2FudCB0byBwYXJzZSB0aGUgcmVzcG9uc2UgYm9keSBidXQgc3RpbGwgZ2V0IHRoZSBgUmVzcG9uc2VgXG4gICAgICogaW5zdGFuY2UsIHlvdSBjYW4gdXNlIHtAbGluayB3aXRoUmVzcG9uc2UoKX0uXG4gICAgICpcbiAgICAgKiDwn5GLIEdldHRpbmcgdGhlIHdyb25nIFR5cGVTY3JpcHQgdHlwZSBmb3IgYFJlc3BvbnNlYD9cbiAgICAgKiBUcnkgc2V0dGluZyBgXCJtb2R1bGVSZXNvbHV0aW9uXCI6IFwiTm9kZU5leHRcImAgaWYgeW91IGNhbixcbiAgICAgKiBvciBhZGQgb25lIG9mIHRoZXNlIGltcG9ydHMgYmVmb3JlIHlvdXIgZmlyc3QgYGltcG9ydCDigKYgZnJvbSAnQG11eC9tdXgtbm9kZSdgOlxuICAgICAqIC0gYGltcG9ydCAnQG11eC9tdXgtbm9kZS9zaGltcy9ub2RlJ2AgKGlmIHlvdSdyZSBydW5uaW5nIG9uIE5vZGUpXG4gICAgICogLSBgaW1wb3J0ICdAbXV4L211eC1ub2RlL3NoaW1zL3dlYidgIChvdGhlcndpc2UpXG4gICAgICovXG4gICAgYXNSZXNwb25zZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzcG9uc2VQcm9taXNlLnRoZW4oKHApID0+IHAucmVzcG9uc2UpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBwYXJzZWQgcmVzcG9uc2UgZGF0YSBhbmQgdGhlIHJhdyBgUmVzcG9uc2VgIGluc3RhbmNlLlxuICAgICAqXG4gICAgICogSWYgeW91IGp1c3Qgd2FudCB0byBnZXQgdGhlIHJhdyBgUmVzcG9uc2VgIGluc3RhbmNlIHdpdGhvdXQgcGFyc2luZyBpdCxcbiAgICAgKiB5b3UgY2FuIHVzZSB7QGxpbmsgYXNSZXNwb25zZSgpfS5cbiAgICAgKlxuICAgICAqXG4gICAgICog8J+RiyBHZXR0aW5nIHRoZSB3cm9uZyBUeXBlU2NyaXB0IHR5cGUgZm9yIGBSZXNwb25zZWA/XG4gICAgICogVHJ5IHNldHRpbmcgYFwibW9kdWxlUmVzb2x1dGlvblwiOiBcIk5vZGVOZXh0XCJgIGlmIHlvdSBjYW4sXG4gICAgICogb3IgYWRkIG9uZSBvZiB0aGVzZSBpbXBvcnRzIGJlZm9yZSB5b3VyIGZpcnN0IGBpbXBvcnQg4oCmIGZyb20gJ0BtdXgvbXV4LW5vZGUnYDpcbiAgICAgKiAtIGBpbXBvcnQgJ0BtdXgvbXV4LW5vZGUvc2hpbXMvbm9kZSdgIChpZiB5b3UncmUgcnVubmluZyBvbiBOb2RlKVxuICAgICAqIC0gYGltcG9ydCAnQG11eC9tdXgtbm9kZS9zaGltcy93ZWInYCAob3RoZXJ3aXNlKVxuICAgICAqL1xuICAgIGFzeW5jIHdpdGhSZXNwb25zZSgpIHtcbiAgICAgICAgY29uc3QgW2RhdGEsIHJlc3BvbnNlXSA9IGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLnBhcnNlKCksIHRoaXMuYXNSZXNwb25zZSgpXSk7XG4gICAgICAgIHJldHVybiB7IGRhdGEsIHJlc3BvbnNlIH07XG4gICAgfVxuICAgIHBhcnNlKCkge1xuICAgICAgICBpZiAoIXRoaXMucGFyc2VkUHJvbWlzZSkge1xuICAgICAgICAgICAgdGhpcy5wYXJzZWRQcm9taXNlID0gdGhpcy5yZXNwb25zZVByb21pc2UudGhlbih0aGlzLnBhcnNlUmVzcG9uc2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnBhcnNlZFByb21pc2U7XG4gICAgfVxuICAgIHRoZW4ob25mdWxmaWxsZWQsIG9ucmVqZWN0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2UoKS50aGVuKG9uZnVsZmlsbGVkLCBvbnJlamVjdGVkKTtcbiAgICB9XG4gICAgY2F0Y2gob25yZWplY3RlZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZSgpLmNhdGNoKG9ucmVqZWN0ZWQpO1xuICAgIH1cbiAgICBmaW5hbGx5KG9uZmluYWxseSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZSgpLmZpbmFsbHkob25maW5hbGx5KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQVBJQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3Rvcih7IGJhc2VVUkwsIG1heFJldHJpZXMgPSAyLCB0aW1lb3V0ID0gNjAwMDAsIC8vIDEgbWludXRlXG4gICAgaHR0cEFnZW50LCBmZXRjaDogb3ZlcnJpZGRlbkZldGNoLCB9KSB7XG4gICAgICAgIHRoaXMuYmFzZVVSTCA9IGJhc2VVUkw7XG4gICAgICAgIHRoaXMubWF4UmV0cmllcyA9IHZhbGlkYXRlUG9zaXRpdmVJbnRlZ2VyKCdtYXhSZXRyaWVzJywgbWF4UmV0cmllcyk7XG4gICAgICAgIHRoaXMudGltZW91dCA9IHZhbGlkYXRlUG9zaXRpdmVJbnRlZ2VyKCd0aW1lb3V0JywgdGltZW91dCk7XG4gICAgICAgIHRoaXMuaHR0cEFnZW50ID0gaHR0cEFnZW50O1xuICAgICAgICB0aGlzLmZldGNoID0gb3ZlcnJpZGRlbkZldGNoID8/IGZldGNoO1xuICAgIH1cbiAgICBhdXRoSGVhZGVycyhvcHRzKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGUgdGhpcyB0byBhZGQgeW91ciBvd24gZGVmYXVsdCBoZWFkZXJzLCBmb3IgZXhhbXBsZTpcbiAgICAgKlxuICAgICAqICB7XG4gICAgICogICAgLi4uc3VwZXIuZGVmYXVsdEhlYWRlcnMoKSxcbiAgICAgKiAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyIDEyMycsXG4gICAgICogIH1cbiAgICAgKi9cbiAgICBkZWZhdWx0SGVhZGVycyhvcHRzKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAnVXNlci1BZ2VudCc6IHRoaXMuZ2V0VXNlckFnZW50KCksXG4gICAgICAgICAgICAuLi5nZXRQbGF0Zm9ybUhlYWRlcnMoKSxcbiAgICAgICAgICAgIC4uLnRoaXMuYXV0aEhlYWRlcnMob3B0cyksXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE92ZXJyaWRlIHRoaXMgdG8gYWRkIHlvdXIgb3duIGhlYWRlcnMgdmFsaWRhdGlvbjpcbiAgICAgKi9cbiAgICB2YWxpZGF0ZUhlYWRlcnMoaGVhZGVycywgY3VzdG9tSGVhZGVycykgeyB9XG4gICAgZGVmYXVsdElkZW1wb3RlbmN5S2V5KCkge1xuICAgICAgICByZXR1cm4gYHN0YWlubGVzcy1ub2RlLXJldHJ5LSR7dXVpZDQoKX1gO1xuICAgIH1cbiAgICBnZXQocGF0aCwgb3B0cykge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXRob2RSZXF1ZXN0KCdnZXQnLCBwYXRoLCBvcHRzKTtcbiAgICB9XG4gICAgcG9zdChwYXRoLCBvcHRzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1ldGhvZFJlcXVlc3QoJ3Bvc3QnLCBwYXRoLCBvcHRzKTtcbiAgICB9XG4gICAgcGF0Y2gocGF0aCwgb3B0cykge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXRob2RSZXF1ZXN0KCdwYXRjaCcsIHBhdGgsIG9wdHMpO1xuICAgIH1cbiAgICBwdXQocGF0aCwgb3B0cykge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXRob2RSZXF1ZXN0KCdwdXQnLCBwYXRoLCBvcHRzKTtcbiAgICB9XG4gICAgZGVsZXRlKHBhdGgsIG9wdHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWV0aG9kUmVxdWVzdCgnZGVsZXRlJywgcGF0aCwgb3B0cyk7XG4gICAgfVxuICAgIG1ldGhvZFJlcXVlc3QobWV0aG9kLCBwYXRoLCBvcHRzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcXVlc3QoUHJvbWlzZS5yZXNvbHZlKG9wdHMpLnRoZW4oKG9wdHMpID0+ICh7IG1ldGhvZCwgcGF0aCwgLi4ub3B0cyB9KSkpO1xuICAgIH1cbiAgICBnZXRBUElMaXN0KHBhdGgsIFBhZ2UsIG9wdHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdEFQSUxpc3QoUGFnZSwgeyBtZXRob2Q6ICdnZXQnLCBwYXRoLCAuLi5vcHRzIH0pO1xuICAgIH1cbiAgICBjYWxjdWxhdGVDb250ZW50TGVuZ3RoKGJvZHkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBCdWZmZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEJ1ZmZlci5ieXRlTGVuZ3RoKGJvZHksICd1dGY4JykudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgVGV4dEVuY29kZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuY29kZWQgPSBlbmNvZGVyLmVuY29kZShib2R5KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZW5jb2RlZC5sZW5ndGgudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgYnVpbGRSZXF1ZXN0KGlucHV0T3B0aW9ucywgeyByZXRyeUNvdW50ID0gMCB9ID0ge30pIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHsgLi4uaW5wdXRPcHRpb25zIH07XG4gICAgICAgIGNvbnN0IHsgbWV0aG9kLCBwYXRoLCBxdWVyeSwgaGVhZGVyczogaGVhZGVycyA9IHt9IH0gPSBvcHRpb25zO1xuICAgICAgICBjb25zdCBib2R5ID0gaXNNdWx0aXBhcnRCb2R5KG9wdGlvbnMuYm9keSkgPyBvcHRpb25zLmJvZHkuYm9keVxuICAgICAgICAgICAgOiBvcHRpb25zLmJvZHkgPyBKU09OLnN0cmluZ2lmeShvcHRpb25zLmJvZHksIG51bGwsIDIpXG4gICAgICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICBjb25zdCBjb250ZW50TGVuZ3RoID0gdGhpcy5jYWxjdWxhdGVDb250ZW50TGVuZ3RoKGJvZHkpO1xuICAgICAgICBjb25zdCB1cmwgPSB0aGlzLmJ1aWxkVVJMKHBhdGgsIHF1ZXJ5KTtcbiAgICAgICAgaWYgKCd0aW1lb3V0JyBpbiBvcHRpb25zKVxuICAgICAgICAgICAgdmFsaWRhdGVQb3NpdGl2ZUludGVnZXIoJ3RpbWVvdXQnLCBvcHRpb25zLnRpbWVvdXQpO1xuICAgICAgICBvcHRpb25zLnRpbWVvdXQgPSBvcHRpb25zLnRpbWVvdXQgPz8gdGhpcy50aW1lb3V0O1xuICAgICAgICBjb25zdCBodHRwQWdlbnQgPSBvcHRpb25zLmh0dHBBZ2VudCA/PyB0aGlzLmh0dHBBZ2VudCA/PyBnZXREZWZhdWx0QWdlbnQodXJsKTtcbiAgICAgICAgY29uc3QgbWluQWdlbnRUaW1lb3V0ID0gb3B0aW9ucy50aW1lb3V0ICsgMTAwMDtcbiAgICAgICAgaWYgKHR5cGVvZiBodHRwQWdlbnQ/Lm9wdGlvbnM/LnRpbWVvdXQgPT09ICdudW1iZXInICYmXG4gICAgICAgICAgICBtaW5BZ2VudFRpbWVvdXQgPiAoaHR0cEFnZW50Lm9wdGlvbnMudGltZW91dCA/PyAwKSkge1xuICAgICAgICAgICAgLy8gQWxsb3cgYW55IGdpdmVuIHJlcXVlc3QgdG8gYnVtcCBvdXIgYWdlbnQgYWN0aXZlIHNvY2tldCB0aW1lb3V0LlxuICAgICAgICAgICAgLy8gVGhpcyBtYXkgc2VlbSBzdHJhbmdlLCBidXQgbGVha2luZyBhY3RpdmUgc29ja2V0cyBzaG91bGQgYmUgcmFyZSBhbmQgbm90IHBhcnRpY3VsYXJseSBwcm9ibGVtYXRpYyxcbiAgICAgICAgICAgIC8vIGFuZCB3aXRob3V0IG11dGF0aW5nIGFnZW50IHdlIHdvdWxkIG5lZWQgdG8gY3JlYXRlIG1vcmUgb2YgdGhlbS5cbiAgICAgICAgICAgIC8vIFRoaXMgdHJhZGVvZmYgb3B0aW1pemVzIGZvciBwZXJmb3JtYW5jZS5cbiAgICAgICAgICAgIGh0dHBBZ2VudC5vcHRpb25zLnRpbWVvdXQgPSBtaW5BZ2VudFRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaWRlbXBvdGVuY3lIZWFkZXIgJiYgbWV0aG9kICE9PSAnZ2V0Jykge1xuICAgICAgICAgICAgaWYgKCFpbnB1dE9wdGlvbnMuaWRlbXBvdGVuY3lLZXkpXG4gICAgICAgICAgICAgICAgaW5wdXRPcHRpb25zLmlkZW1wb3RlbmN5S2V5ID0gdGhpcy5kZWZhdWx0SWRlbXBvdGVuY3lLZXkoKTtcbiAgICAgICAgICAgIGhlYWRlcnNbdGhpcy5pZGVtcG90ZW5jeUhlYWRlcl0gPSBpbnB1dE9wdGlvbnMuaWRlbXBvdGVuY3lLZXk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVxSGVhZGVycyA9IHRoaXMuYnVpbGRIZWFkZXJzKHsgb3B0aW9ucywgaGVhZGVycywgY29udGVudExlbmd0aCwgcmV0cnlDb3VudCB9KTtcbiAgICAgICAgY29uc3QgcmVxID0ge1xuICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgLi4uKGJvZHkgJiYgeyBib2R5OiBib2R5IH0pLFxuICAgICAgICAgICAgaGVhZGVyczogcmVxSGVhZGVycyxcbiAgICAgICAgICAgIC4uLihodHRwQWdlbnQgJiYgeyBhZ2VudDogaHR0cEFnZW50IH0pLFxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSBub2RlLWZldGNoIHVzZXMgYSBjdXN0b20gQWJvcnRTaWduYWwgdHlwZSB0aGF0IGlzXG4gICAgICAgICAgICAvLyBub3QgY29tcGF0aWJsZSB3aXRoIHN0YW5kYXJkIHdlYiB0eXBlc1xuICAgICAgICAgICAgc2lnbmFsOiBvcHRpb25zLnNpZ25hbCA/PyBudWxsLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4geyByZXEsIHVybCwgdGltZW91dDogb3B0aW9ucy50aW1lb3V0IH07XG4gICAgfVxuICAgIGJ1aWxkSGVhZGVycyh7IG9wdGlvbnMsIGhlYWRlcnMsIGNvbnRlbnRMZW5ndGgsIHJldHJ5Q291bnQsIH0pIHtcbiAgICAgICAgY29uc3QgcmVxSGVhZGVycyA9IHt9O1xuICAgICAgICBpZiAoY29udGVudExlbmd0aCkge1xuICAgICAgICAgICAgcmVxSGVhZGVyc1snY29udGVudC1sZW5ndGgnXSA9IGNvbnRlbnRMZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGVmYXVsdEhlYWRlcnMgPSB0aGlzLmRlZmF1bHRIZWFkZXJzKG9wdGlvbnMpO1xuICAgICAgICBhcHBseUhlYWRlcnNNdXQocmVxSGVhZGVycywgZGVmYXVsdEhlYWRlcnMpO1xuICAgICAgICBhcHBseUhlYWRlcnNNdXQocmVxSGVhZGVycywgaGVhZGVycyk7XG4gICAgICAgIC8vIGxldCBidWlsdGluIGZldGNoIHNldCB0aGUgQ29udGVudC1UeXBlIGZvciBtdWx0aXBhcnQgYm9kaWVzXG4gICAgICAgIGlmIChpc011bHRpcGFydEJvZHkob3B0aW9ucy5ib2R5KSAmJiBzaGltc0tpbmQgIT09ICdub2RlJykge1xuICAgICAgICAgICAgZGVsZXRlIHJlcUhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddO1xuICAgICAgICB9XG4gICAgICAgIC8vIERvbid0IHNldCB0aGVzZXMgaGVhZGVycyBpZiB0aGV5IHdlcmUgYWxyZWFkeSBzZXQgb3IgcmVtb3ZlZCB0aHJvdWdoIGRlZmF1bHQgaGVhZGVycyBvciBieSB0aGUgY2FsbGVyLlxuICAgICAgICAvLyBXZSBjaGVjayBgZGVmYXVsdEhlYWRlcnNgIGFuZCBgaGVhZGVyc2AsIHdoaWNoIGNhbiBjb250YWluIG51bGxzLCBpbnN0ZWFkIG9mIGByZXFIZWFkZXJzYCB0byBhY2NvdW50XG4gICAgICAgIC8vIGZvciB0aGUgcmVtb3ZhbCBjYXNlLlxuICAgICAgICBpZiAoZ2V0SGVhZGVyKGRlZmF1bHRIZWFkZXJzLCAneC1zdGFpbmxlc3MtcmV0cnktY291bnQnKSA9PT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBnZXRIZWFkZXIoaGVhZGVycywgJ3gtc3RhaW5sZXNzLXJldHJ5LWNvdW50JykgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmVxSGVhZGVyc1sneC1zdGFpbmxlc3MtcmV0cnktY291bnQnXSA9IFN0cmluZyhyZXRyeUNvdW50KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZ2V0SGVhZGVyKGRlZmF1bHRIZWFkZXJzLCAneC1zdGFpbmxlc3MtdGltZW91dCcpID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIGdldEhlYWRlcihoZWFkZXJzLCAneC1zdGFpbmxlc3MtdGltZW91dCcpID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIG9wdGlvbnMudGltZW91dCkge1xuICAgICAgICAgICAgcmVxSGVhZGVyc1sneC1zdGFpbmxlc3MtdGltZW91dCddID0gU3RyaW5nKE1hdGgudHJ1bmMob3B0aW9ucy50aW1lb3V0IC8gMTAwMCkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudmFsaWRhdGVIZWFkZXJzKHJlcUhlYWRlcnMsIGhlYWRlcnMpO1xuICAgICAgICByZXR1cm4gcmVxSGVhZGVycztcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlZCBhcyBhIGNhbGxiYWNrIGZvciBtdXRhdGluZyB0aGUgZ2l2ZW4gYEZpbmFsUmVxdWVzdE9wdGlvbnNgIG9iamVjdC5cbiAgICAgKi9cbiAgICBhc3luYyBwcmVwYXJlT3B0aW9ucyhvcHRpb25zKSB7IH1cbiAgICAvKipcbiAgICAgKiBVc2VkIGFzIGEgY2FsbGJhY2sgZm9yIG11dGF0aW5nIHRoZSBnaXZlbiBgUmVxdWVzdEluaXRgIG9iamVjdC5cbiAgICAgKlxuICAgICAqIFRoaXMgaXMgdXNlZnVsIGZvciBjYXNlcyB3aGVyZSB5b3Ugd2FudCB0byBhZGQgY2VydGFpbiBoZWFkZXJzIGJhc2VkIG9mZiBvZlxuICAgICAqIHRoZSByZXF1ZXN0IHByb3BlcnRpZXMsIGUuZy4gYG1ldGhvZGAgb3IgYHVybGAuXG4gICAgICovXG4gICAgYXN5bmMgcHJlcGFyZVJlcXVlc3QocmVxdWVzdCwgeyB1cmwsIG9wdGlvbnMgfSkgeyB9XG4gICAgcGFyc2VIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICAgICAgcmV0dXJuICghaGVhZGVycyA/IHt9XG4gICAgICAgICAgICA6IFN5bWJvbC5pdGVyYXRvciBpbiBoZWFkZXJzID9cbiAgICAgICAgICAgICAgICBPYmplY3QuZnJvbUVudHJpZXMoQXJyYXkuZnJvbShoZWFkZXJzKS5tYXAoKGhlYWRlcikgPT4gWy4uLmhlYWRlcl0pKVxuICAgICAgICAgICAgICAgIDogeyAuLi5oZWFkZXJzIH0pO1xuICAgIH1cbiAgICBtYWtlU3RhdHVzRXJyb3Ioc3RhdHVzLCBlcnJvciwgbWVzc2FnZSwgaGVhZGVycykge1xuICAgICAgICByZXR1cm4gQVBJRXJyb3IuZ2VuZXJhdGUoc3RhdHVzLCBlcnJvciwgbWVzc2FnZSwgaGVhZGVycyk7XG4gICAgfVxuICAgIHJlcXVlc3Qob3B0aW9ucywgcmVtYWluaW5nUmV0cmllcyA9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBUElQcm9taXNlKHRoaXMubWFrZVJlcXVlc3Qob3B0aW9ucywgcmVtYWluaW5nUmV0cmllcykpO1xuICAgIH1cbiAgICBhc3luYyBtYWtlUmVxdWVzdChvcHRpb25zSW5wdXQsIHJldHJpZXNSZW1haW5pbmcpIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGF3YWl0IG9wdGlvbnNJbnB1dDtcbiAgICAgICAgY29uc3QgbWF4UmV0cmllcyA9IG9wdGlvbnMubWF4UmV0cmllcyA/PyB0aGlzLm1heFJldHJpZXM7XG4gICAgICAgIGlmIChyZXRyaWVzUmVtYWluaW5nID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHJpZXNSZW1haW5pbmcgPSBtYXhSZXRyaWVzO1xuICAgICAgICB9XG4gICAgICAgIGF3YWl0IHRoaXMucHJlcGFyZU9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgIGNvbnN0IHsgcmVxLCB1cmwsIHRpbWVvdXQgfSA9IHRoaXMuYnVpbGRSZXF1ZXN0KG9wdGlvbnMsIHsgcmV0cnlDb3VudDogbWF4UmV0cmllcyAtIHJldHJpZXNSZW1haW5pbmcgfSk7XG4gICAgICAgIGF3YWl0IHRoaXMucHJlcGFyZVJlcXVlc3QocmVxLCB7IHVybCwgb3B0aW9ucyB9KTtcbiAgICAgICAgZGVidWcoJ3JlcXVlc3QnLCB1cmwsIG9wdGlvbnMsIHJlcS5oZWFkZXJzKTtcbiAgICAgICAgaWYgKG9wdGlvbnMuc2lnbmFsPy5hYm9ydGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQVBJVXNlckFib3J0RXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuZmV0Y2hXaXRoVGltZW91dCh1cmwsIHJlcSwgdGltZW91dCwgY29udHJvbGxlcikuY2F0Y2goY2FzdFRvRXJyb3IpO1xuICAgICAgICBpZiAocmVzcG9uc2UgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMuc2lnbmFsPy5hYm9ydGVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEFQSVVzZXJBYm9ydEVycm9yKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmV0cmllc1JlbWFpbmluZykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJldHJ5UmVxdWVzdChvcHRpb25zLCByZXRyaWVzUmVtYWluaW5nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5uYW1lID09PSAnQWJvcnRFcnJvcicpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQVBJQ29ubmVjdGlvblRpbWVvdXRFcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IEFQSUNvbm5lY3Rpb25FcnJvcih7IGNhdXNlOiByZXNwb25zZSB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXNwb25zZUhlYWRlcnMgPSBjcmVhdGVSZXNwb25zZUhlYWRlcnMocmVzcG9uc2UuaGVhZGVycyk7XG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIGlmIChyZXRyaWVzUmVtYWluaW5nICYmIHRoaXMuc2hvdWxkUmV0cnkocmVzcG9uc2UpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmV0cnlNZXNzYWdlID0gYHJldHJ5aW5nLCAke3JldHJpZXNSZW1haW5pbmd9IGF0dGVtcHRzIHJlbWFpbmluZ2A7XG4gICAgICAgICAgICAgICAgZGVidWcoYHJlc3BvbnNlIChlcnJvcjsgJHtyZXRyeU1lc3NhZ2V9KWAsIHJlc3BvbnNlLnN0YXR1cywgdXJsLCByZXNwb25zZUhlYWRlcnMpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJldHJ5UmVxdWVzdChvcHRpb25zLCByZXRyaWVzUmVtYWluaW5nLCByZXNwb25zZUhlYWRlcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXJyVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKS5jYXRjaCgoZSkgPT4gY2FzdFRvRXJyb3IoZSkubWVzc2FnZSk7XG4gICAgICAgICAgICBjb25zdCBlcnJKU09OID0gc2FmZUpTT04oZXJyVGV4dCk7XG4gICAgICAgICAgICBjb25zdCBlcnJNZXNzYWdlID0gZXJySlNPTiA/IHVuZGVmaW5lZCA6IGVyclRleHQ7XG4gICAgICAgICAgICBjb25zdCByZXRyeU1lc3NhZ2UgPSByZXRyaWVzUmVtYWluaW5nID8gYChlcnJvcjsgbm8gbW9yZSByZXRyaWVzIGxlZnQpYCA6IGAoZXJyb3I7IG5vdCByZXRyeWFibGUpYDtcbiAgICAgICAgICAgIGRlYnVnKGByZXNwb25zZSAoZXJyb3I7ICR7cmV0cnlNZXNzYWdlfSlgLCByZXNwb25zZS5zdGF0dXMsIHVybCwgcmVzcG9uc2VIZWFkZXJzLCBlcnJNZXNzYWdlKTtcbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHRoaXMubWFrZVN0YXR1c0Vycm9yKHJlc3BvbnNlLnN0YXR1cywgZXJySlNPTiwgZXJyTWVzc2FnZSwgcmVzcG9uc2VIZWFkZXJzKTtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyByZXNwb25zZSwgb3B0aW9ucywgY29udHJvbGxlciB9O1xuICAgIH1cbiAgICByZXF1ZXN0QVBJTGlzdChQYWdlLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlcXVlc3QgPSB0aGlzLm1ha2VSZXF1ZXN0KG9wdGlvbnMsIG51bGwpO1xuICAgICAgICByZXR1cm4gbmV3IFBhZ2VQcm9taXNlKHRoaXMsIHJlcXVlc3QsIFBhZ2UpO1xuICAgIH1cbiAgICBidWlsZFVSTChwYXRoLCBxdWVyeSkge1xuICAgICAgICBjb25zdCB1cmwgPSBpc0Fic29sdXRlVVJMKHBhdGgpID9cbiAgICAgICAgICAgIG5ldyBVUkwocGF0aClcbiAgICAgICAgICAgIDogbmV3IFVSTCh0aGlzLmJhc2VVUkwgKyAodGhpcy5iYXNlVVJMLmVuZHNXaXRoKCcvJykgJiYgcGF0aC5zdGFydHNXaXRoKCcvJykgPyBwYXRoLnNsaWNlKDEpIDogcGF0aCkpO1xuICAgICAgICBjb25zdCBkZWZhdWx0UXVlcnkgPSB0aGlzLmRlZmF1bHRRdWVyeSgpO1xuICAgICAgICBpZiAoIWlzRW1wdHlPYmooZGVmYXVsdFF1ZXJ5KSkge1xuICAgICAgICAgICAgcXVlcnkgPSB7IC4uLmRlZmF1bHRRdWVyeSwgLi4ucXVlcnkgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHF1ZXJ5ID09PSAnb2JqZWN0JyAmJiBxdWVyeSAmJiAhQXJyYXkuaXNBcnJheShxdWVyeSkpIHtcbiAgICAgICAgICAgIHVybC5zZWFyY2ggPSB0aGlzLnN0cmluZ2lmeVF1ZXJ5KHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHN0cmluZ2lmeVF1ZXJ5KHF1ZXJ5KSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZW50cmllcyhxdWVyeSlcbiAgICAgICAgICAgIC5maWx0ZXIoKFtfLCB2YWx1ZV0pID0+IHR5cGVvZiB2YWx1ZSAhPT0gJ3VuZGVmaW5lZCcpXG4gICAgICAgICAgICAubWFwKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgfHwgdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7ZW5jb2RlVVJJQ29tcG9uZW50KGtleSl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKX1gO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke2VuY29kZVVSSUNvbXBvbmVudChrZXkpfT1gO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IE11eEVycm9yKGBDYW5ub3Qgc3RyaW5naWZ5IHR5cGUgJHt0eXBlb2YgdmFsdWV9OyBFeHBlY3RlZCBzdHJpbmcsIG51bWJlciwgYm9vbGVhbiwgb3IgbnVsbC4gSWYgeW91IG5lZWQgdG8gcGFzcyBuZXN0ZWQgcXVlcnkgcGFyYW1ldGVycywgeW91IGNhbiBtYW51YWxseSBlbmNvZGUgdGhlbSwgZS5nLiB7IHF1ZXJ5OiB7ICdmb29ba2V5MV0nOiB2YWx1ZTEsICdmb29ba2V5Ml0nOiB2YWx1ZTIgfSB9LCBhbmQgcGxlYXNlIG9wZW4gYSBHaXRIdWIgaXNzdWUgcmVxdWVzdGluZyBiZXR0ZXIgc3VwcG9ydCBmb3IgeW91ciB1c2UgY2FzZS5gKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKCcmJyk7XG4gICAgfVxuICAgIGFzeW5jIGZldGNoV2l0aFRpbWVvdXQodXJsLCBpbml0LCBtcywgY29udHJvbGxlcikge1xuICAgICAgICBjb25zdCB7IHNpZ25hbCwgLi4ub3B0aW9ucyB9ID0gaW5pdCB8fCB7fTtcbiAgICAgICAgaWYgKHNpZ25hbClcbiAgICAgICAgICAgIHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsICgpID0+IGNvbnRyb2xsZXIuYWJvcnQoKSk7XG4gICAgICAgIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IGNvbnRyb2xsZXIuYWJvcnQoKSwgbXMpO1xuICAgICAgICBjb25zdCBmZXRjaE9wdGlvbnMgPSB7XG4gICAgICAgICAgICBzaWduYWw6IGNvbnRyb2xsZXIuc2lnbmFsLFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGZldGNoT3B0aW9ucy5tZXRob2QpIHtcbiAgICAgICAgICAgIC8vIEN1c3RvbSBtZXRob2RzIGxpa2UgJ3BhdGNoJyBuZWVkIHRvIGJlIHVwcGVyY2FzZWRcbiAgICAgICAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL3VuZGljaS9pc3N1ZXMvMjI5NFxuICAgICAgICAgICAgZmV0Y2hPcHRpb25zLm1ldGhvZCA9IGZldGNoT3B0aW9ucy5tZXRob2QudG9VcHBlckNhc2UoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAvLyB1c2UgdW5kZWZpbmVkIHRoaXMgYmluZGluZzsgZmV0Y2ggZXJyb3JzIGlmIGJvdW5kIHRvIHNvbWV0aGluZyBlbHNlIGluIGJyb3dzZXIvY2xvdWRmbGFyZVxuICAgICAgICB0aGlzLmZldGNoLmNhbGwodW5kZWZpbmVkLCB1cmwsIGZldGNoT3B0aW9ucykuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgc2hvdWxkUmV0cnkocmVzcG9uc2UpIHtcbiAgICAgICAgLy8gTm90ZSB0aGlzIGlzIG5vdCBhIHN0YW5kYXJkIGhlYWRlci5cbiAgICAgICAgY29uc3Qgc2hvdWxkUmV0cnlIZWFkZXIgPSByZXNwb25zZS5oZWFkZXJzLmdldCgneC1zaG91bGQtcmV0cnknKTtcbiAgICAgICAgLy8gSWYgdGhlIHNlcnZlciBleHBsaWNpdGx5IHNheXMgd2hldGhlciBvciBub3QgdG8gcmV0cnksIG9iZXkuXG4gICAgICAgIGlmIChzaG91bGRSZXRyeUhlYWRlciA9PT0gJ3RydWUnKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGlmIChzaG91bGRSZXRyeUhlYWRlciA9PT0gJ2ZhbHNlJylcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgLy8gUmV0cnkgb24gcmVxdWVzdCB0aW1lb3V0cy5cbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA4KVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIC8vIFJldHJ5IG9uIGxvY2sgdGltZW91dHMuXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwOSlcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAvLyBSZXRyeSBvbiByYXRlIGxpbWl0cy5cbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDI5KVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIC8vIFJldHJ5IGludGVybmFsIGVycm9ycy5cbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA+PSA1MDApXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBhc3luYyByZXRyeVJlcXVlc3Qob3B0aW9ucywgcmV0cmllc1JlbWFpbmluZywgcmVzcG9uc2VIZWFkZXJzKSB7XG4gICAgICAgIGxldCB0aW1lb3V0TWlsbGlzO1xuICAgICAgICAvLyBOb3RlIHRoZSBgcmV0cnktYWZ0ZXItbXNgIGhlYWRlciBtYXkgbm90IGJlIHN0YW5kYXJkLCBidXQgaXMgYSBnb29kIGlkZWEgYW5kIHdlJ2QgbGlrZSBwcm9hY3RpdmUgc3VwcG9ydCBmb3IgaXQuXG4gICAgICAgIGNvbnN0IHJldHJ5QWZ0ZXJNaWxsaXNIZWFkZXIgPSByZXNwb25zZUhlYWRlcnM/LlsncmV0cnktYWZ0ZXItbXMnXTtcbiAgICAgICAgaWYgKHJldHJ5QWZ0ZXJNaWxsaXNIZWFkZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHRpbWVvdXRNcyA9IHBhcnNlRmxvYXQocmV0cnlBZnRlck1pbGxpc0hlYWRlcik7XG4gICAgICAgICAgICBpZiAoIU51bWJlci5pc05hTih0aW1lb3V0TXMpKSB7XG4gICAgICAgICAgICAgICAgdGltZW91dE1pbGxpcyA9IHRpbWVvdXRNcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBBYm91dCB0aGUgUmV0cnktQWZ0ZXIgaGVhZGVyOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvUmV0cnktQWZ0ZXJcbiAgICAgICAgY29uc3QgcmV0cnlBZnRlckhlYWRlciA9IHJlc3BvbnNlSGVhZGVycz8uWydyZXRyeS1hZnRlciddO1xuICAgICAgICBpZiAocmV0cnlBZnRlckhlYWRlciAmJiAhdGltZW91dE1pbGxpcykge1xuICAgICAgICAgICAgY29uc3QgdGltZW91dFNlY29uZHMgPSBwYXJzZUZsb2F0KHJldHJ5QWZ0ZXJIZWFkZXIpO1xuICAgICAgICAgICAgaWYgKCFOdW1iZXIuaXNOYU4odGltZW91dFNlY29uZHMpKSB7XG4gICAgICAgICAgICAgICAgdGltZW91dE1pbGxpcyA9IHRpbWVvdXRTZWNvbmRzICogMTAwMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRpbWVvdXRNaWxsaXMgPSBEYXRlLnBhcnNlKHJldHJ5QWZ0ZXJIZWFkZXIpIC0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGUgQVBJIGFza3MgdXMgdG8gd2FpdCBhIGNlcnRhaW4gYW1vdW50IG9mIHRpbWUgKGFuZCBpdCdzIGEgcmVhc29uYWJsZSBhbW91bnQpLFxuICAgICAgICAvLyBqdXN0IGRvIHdoYXQgaXQgc2F5cywgYnV0IG90aGVyd2lzZSBjYWxjdWxhdGUgYSBkZWZhdWx0XG4gICAgICAgIGlmICghKHRpbWVvdXRNaWxsaXMgJiYgMCA8PSB0aW1lb3V0TWlsbGlzICYmIHRpbWVvdXRNaWxsaXMgPCA2MCAqIDEwMDApKSB7XG4gICAgICAgICAgICBjb25zdCBtYXhSZXRyaWVzID0gb3B0aW9ucy5tYXhSZXRyaWVzID8/IHRoaXMubWF4UmV0cmllcztcbiAgICAgICAgICAgIHRpbWVvdXRNaWxsaXMgPSB0aGlzLmNhbGN1bGF0ZURlZmF1bHRSZXRyeVRpbWVvdXRNaWxsaXMocmV0cmllc1JlbWFpbmluZywgbWF4UmV0cmllcyk7XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgc2xlZXAodGltZW91dE1pbGxpcyk7XG4gICAgICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0KG9wdGlvbnMsIHJldHJpZXNSZW1haW5pbmcgLSAxKTtcbiAgICB9XG4gICAgY2FsY3VsYXRlRGVmYXVsdFJldHJ5VGltZW91dE1pbGxpcyhyZXRyaWVzUmVtYWluaW5nLCBtYXhSZXRyaWVzKSB7XG4gICAgICAgIGNvbnN0IGluaXRpYWxSZXRyeURlbGF5ID0gMC41O1xuICAgICAgICBjb25zdCBtYXhSZXRyeURlbGF5ID0gOC4wO1xuICAgICAgICBjb25zdCBudW1SZXRyaWVzID0gbWF4UmV0cmllcyAtIHJldHJpZXNSZW1haW5pbmc7XG4gICAgICAgIC8vIEFwcGx5IGV4cG9uZW50aWFsIGJhY2tvZmYsIGJ1dCBub3QgbW9yZSB0aGFuIHRoZSBtYXguXG4gICAgICAgIGNvbnN0IHNsZWVwU2Vjb25kcyA9IE1hdGgubWluKGluaXRpYWxSZXRyeURlbGF5ICogTWF0aC5wb3coMiwgbnVtUmV0cmllcyksIG1heFJldHJ5RGVsYXkpO1xuICAgICAgICAvLyBBcHBseSBzb21lIGppdHRlciwgdGFrZSB1cCB0byBhdCBtb3N0IDI1IHBlcmNlbnQgb2YgdGhlIHJldHJ5IHRpbWUuXG4gICAgICAgIGNvbnN0IGppdHRlciA9IDEgLSBNYXRoLnJhbmRvbSgpICogMC4yNTtcbiAgICAgICAgcmV0dXJuIHNsZWVwU2Vjb25kcyAqIGppdHRlciAqIDEwMDA7XG4gICAgfVxuICAgIGdldFVzZXJBZ2VudCgpIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0vSlMgJHtWRVJTSU9OfWA7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEFic3RyYWN0UGFnZSB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50LCByZXNwb25zZSwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICBfQWJzdHJhY3RQYWdlX2NsaWVudC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfQWJzdHJhY3RQYWdlX2NsaWVudCwgY2xpZW50LCBcImZcIik7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgICAgICAgdGhpcy5ib2R5ID0gYm9keTtcbiAgICB9XG4gICAgaGFzTmV4dFBhZ2UoKSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5nZXRQYWdpbmF0ZWRJdGVtcygpO1xuICAgICAgICBpZiAoIWl0ZW1zLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRoaXMubmV4dFBhZ2VJbmZvKCkgIT0gbnVsbDtcbiAgICB9XG4gICAgYXN5bmMgZ2V0TmV4dFBhZ2UoKSB7XG4gICAgICAgIGNvbnN0IG5leHRJbmZvID0gdGhpcy5uZXh0UGFnZUluZm8oKTtcbiAgICAgICAgaWYgKCFuZXh0SW5mbykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IE11eEVycm9yKCdObyBuZXh0IHBhZ2UgZXhwZWN0ZWQ7IHBsZWFzZSBjaGVjayBgLmhhc05leHRQYWdlKClgIGJlZm9yZSBjYWxsaW5nIGAuZ2V0TmV4dFBhZ2UoKWAuJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbmV4dE9wdGlvbnMgPSB7IC4uLnRoaXMub3B0aW9ucyB9O1xuICAgICAgICBpZiAoJ3BhcmFtcycgaW4gbmV4dEluZm8gJiYgdHlwZW9mIG5leHRPcHRpb25zLnF1ZXJ5ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgbmV4dE9wdGlvbnMucXVlcnkgPSB7IC4uLm5leHRPcHRpb25zLnF1ZXJ5LCAuLi5uZXh0SW5mby5wYXJhbXMgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgndXJsJyBpbiBuZXh0SW5mbykge1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gWy4uLk9iamVjdC5lbnRyaWVzKG5leHRPcHRpb25zLnF1ZXJ5IHx8IHt9KSwgLi4ubmV4dEluZm8udXJsLnNlYXJjaFBhcmFtcy5lbnRyaWVzKCldO1xuICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgcGFyYW1zKSB7XG4gICAgICAgICAgICAgICAgbmV4dEluZm8udXJsLnNlYXJjaFBhcmFtcy5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBuZXh0T3B0aW9ucy5xdWVyeSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIG5leHRPcHRpb25zLnBhdGggPSBuZXh0SW5mby51cmwudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXdhaXQgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQWJzdHJhY3RQYWdlX2NsaWVudCwgXCJmXCIpLnJlcXVlc3RBUElMaXN0KHRoaXMuY29uc3RydWN0b3IsIG5leHRPcHRpb25zKTtcbiAgICB9XG4gICAgYXN5bmMgKml0ZXJQYWdlcygpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby10aGlzLWFsaWFzXG4gICAgICAgIGxldCBwYWdlID0gdGhpcztcbiAgICAgICAgeWllbGQgcGFnZTtcbiAgICAgICAgd2hpbGUgKHBhZ2UuaGFzTmV4dFBhZ2UoKSkge1xuICAgICAgICAgICAgcGFnZSA9IGF3YWl0IHBhZ2UuZ2V0TmV4dFBhZ2UoKTtcbiAgICAgICAgICAgIHlpZWxkIHBhZ2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgKlsoX0Fic3RyYWN0UGFnZV9jbGllbnQgPSBuZXcgV2Vha01hcCgpLCBTeW1ib2wuYXN5bmNJdGVyYXRvcildKCkge1xuICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IHBhZ2Ugb2YgdGhpcy5pdGVyUGFnZXMoKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHBhZ2UuZ2V0UGFnaW5hdGVkSXRlbXMoKSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIGl0ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIFRoaXMgc3ViY2xhc3Mgb2YgUHJvbWlzZSB3aWxsIHJlc29sdmUgdG8gYW4gaW5zdGFudGlhdGVkIFBhZ2Ugb25jZSB0aGUgcmVxdWVzdCBjb21wbGV0ZXMuXG4gKlxuICogSXQgYWxzbyBpbXBsZW1lbnRzIEFzeW5jSXRlcmFibGUgdG8gYWxsb3cgYXV0by1wYWdpbmF0aW5nIGl0ZXJhdGlvbiBvbiBhbiB1bmF3YWl0ZWQgbGlzdCBjYWxsLCBlZzpcbiAqXG4gKiAgICBmb3IgYXdhaXQgKGNvbnN0IGl0ZW0gb2YgY2xpZW50Lml0ZW1zLmxpc3QoKSkge1xuICogICAgICBjb25zb2xlLmxvZyhpdGVtKVxuICogICAgfVxuICovXG5leHBvcnQgY2xhc3MgUGFnZVByb21pc2UgZXh0ZW5kcyBBUElQcm9taXNlIHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQsIHJlcXVlc3QsIFBhZ2UpIHtcbiAgICAgICAgc3VwZXIocmVxdWVzdCwgYXN5bmMgKHByb3BzKSA9PiBuZXcgUGFnZShjbGllbnQsIHByb3BzLnJlc3BvbnNlLCBhd2FpdCBkZWZhdWx0UGFyc2VSZXNwb25zZShwcm9wcyksIHByb3BzLm9wdGlvbnMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWxsb3cgYXV0by1wYWdpbmF0aW5nIGl0ZXJhdGlvbiBvbiBhbiB1bmF3YWl0ZWQgbGlzdCBjYWxsLCBlZzpcbiAgICAgKlxuICAgICAqICAgIGZvciBhd2FpdCAoY29uc3QgaXRlbSBvZiBjbGllbnQuaXRlbXMubGlzdCgpKSB7XG4gICAgICogICAgICBjb25zb2xlLmxvZyhpdGVtKVxuICAgICAqICAgIH1cbiAgICAgKi9cbiAgICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgY29uc3QgcGFnZSA9IGF3YWl0IHRoaXM7XG4gICAgICAgIGZvciBhd2FpdCAoY29uc3QgaXRlbSBvZiBwYWdlKSB7XG4gICAgICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IGNyZWF0ZVJlc3BvbnNlSGVhZGVycyA9IChoZWFkZXJzKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm94eShPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGhlYWRlcnMuZW50cmllcygpKSwge1xuICAgICAgICBnZXQodGFyZ2V0LCBuYW1lKSB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBuYW1lLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0W2tleS50b0xvd2VyQ2FzZSgpXSB8fCB0YXJnZXRba2V5XTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn07XG4vLyBUaGlzIGlzIHJlcXVpcmVkIHNvIHRoYXQgd2UgY2FuIGRldGVybWluZSBpZiBhIGdpdmVuIG9iamVjdCBtYXRjaGVzIHRoZSBSZXF1ZXN0T3B0aW9uc1xuLy8gdHlwZSBhdCBydW50aW1lLiBXaGlsZSB0aGlzIHJlcXVpcmVzIGR1cGxpY2F0aW9uLCBpdCBpcyBlbmZvcmNlZCBieSB0aGUgVHlwZVNjcmlwdFxuLy8gY29tcGlsZXIgc3VjaCB0aGF0IGFueSBtaXNzaW5nIC8gZXh0cmFuZW91cyBrZXlzIHdpbGwgY2F1c2UgYW4gZXJyb3IuXG5jb25zdCByZXF1ZXN0T3B0aW9uc0tleXMgPSB7XG4gICAgbWV0aG9kOiB0cnVlLFxuICAgIHBhdGg6IHRydWUsXG4gICAgcXVlcnk6IHRydWUsXG4gICAgYm9keTogdHJ1ZSxcbiAgICBoZWFkZXJzOiB0cnVlLFxuICAgIG1heFJldHJpZXM6IHRydWUsXG4gICAgc3RyZWFtOiB0cnVlLFxuICAgIHRpbWVvdXQ6IHRydWUsXG4gICAgaHR0cEFnZW50OiB0cnVlLFxuICAgIHNpZ25hbDogdHJ1ZSxcbiAgICBpZGVtcG90ZW5jeUtleTogdHJ1ZSxcbiAgICBfX2JpbmFyeVJlc3BvbnNlOiB0cnVlLFxufTtcbmV4cG9ydCBjb25zdCBpc1JlcXVlc3RPcHRpb25zID0gKG9iaikgPT4ge1xuICAgIHJldHVybiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgb2JqICE9PSBudWxsICYmXG4gICAgICAgICFpc0VtcHR5T2JqKG9iaikgJiZcbiAgICAgICAgT2JqZWN0LmtleXMob2JqKS5ldmVyeSgoaykgPT4gaGFzT3duKHJlcXVlc3RPcHRpb25zS2V5cywgaykpKTtcbn07XG5jb25zdCBnZXRQbGF0Zm9ybVByb3BlcnRpZXMgPSAoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBEZW5vICE9PSAndW5kZWZpbmVkJyAmJiBEZW5vLmJ1aWxkICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1MYW5nJzogJ2pzJyxcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1QYWNrYWdlLVZlcnNpb24nOiBWRVJTSU9OLFxuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLU9TJzogbm9ybWFsaXplUGxhdGZvcm0oRGVuby5idWlsZC5vcyksXG4gICAgICAgICAgICAnWC1TdGFpbmxlc3MtQXJjaCc6IG5vcm1hbGl6ZUFyY2goRGVuby5idWlsZC5hcmNoKSxcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1SdW50aW1lJzogJ2Rlbm8nLFxuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLVJ1bnRpbWUtVmVyc2lvbic6IHR5cGVvZiBEZW5vLnZlcnNpb24gPT09ICdzdHJpbmcnID8gRGVuby52ZXJzaW9uIDogRGVuby52ZXJzaW9uPy5kZW5vID8/ICd1bmtub3duJyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBFZGdlUnVudGltZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1MYW5nJzogJ2pzJyxcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1QYWNrYWdlLVZlcnNpb24nOiBWRVJTSU9OLFxuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLU9TJzogJ1Vua25vd24nLFxuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLUFyY2gnOiBgb3RoZXI6JHtFZGdlUnVudGltZX1gLFxuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLVJ1bnRpbWUnOiAnZWRnZScsXG4gICAgICAgICAgICAnWC1TdGFpbmxlc3MtUnVudGltZS1WZXJzaW9uJzogcHJvY2Vzcy52ZXJzaW9uLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBDaGVjayBpZiBOb2RlLmpzXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgPyBwcm9jZXNzIDogMCkgPT09ICdbb2JqZWN0IHByb2Nlc3NdJykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLUxhbmcnOiAnanMnLFxuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLVBhY2thZ2UtVmVyc2lvbic6IFZFUlNJT04sXG4gICAgICAgICAgICAnWC1TdGFpbmxlc3MtT1MnOiBub3JtYWxpemVQbGF0Zm9ybShwcm9jZXNzLnBsYXRmb3JtKSxcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1BcmNoJzogbm9ybWFsaXplQXJjaChwcm9jZXNzLmFyY2gpLFxuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLVJ1bnRpbWUnOiAnbm9kZScsXG4gICAgICAgICAgICAnWC1TdGFpbmxlc3MtUnVudGltZS1WZXJzaW9uJzogcHJvY2Vzcy52ZXJzaW9uLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCBicm93c2VySW5mbyA9IGdldEJyb3dzZXJJbmZvKCk7XG4gICAgaWYgKGJyb3dzZXJJbmZvKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAnWC1TdGFpbmxlc3MtTGFuZyc6ICdqcycsXG4gICAgICAgICAgICAnWC1TdGFpbmxlc3MtUGFja2FnZS1WZXJzaW9uJzogVkVSU0lPTixcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1PUyc6ICdVbmtub3duJyxcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1BcmNoJzogJ3Vua25vd24nLFxuICAgICAgICAgICAgJ1gtU3RhaW5sZXNzLVJ1bnRpbWUnOiBgYnJvd3Nlcjoke2Jyb3dzZXJJbmZvLmJyb3dzZXJ9YCxcbiAgICAgICAgICAgICdYLVN0YWlubGVzcy1SdW50aW1lLVZlcnNpb24nOiBicm93c2VySW5mby52ZXJzaW9uLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBUT0RPIGFkZCBzdXBwb3J0IGZvciBDbG91ZGZsYXJlIHdvcmtlcnMsIGV0Yy5cbiAgICByZXR1cm4ge1xuICAgICAgICAnWC1TdGFpbmxlc3MtTGFuZyc6ICdqcycsXG4gICAgICAgICdYLVN0YWlubGVzcy1QYWNrYWdlLVZlcnNpb24nOiBWRVJTSU9OLFxuICAgICAgICAnWC1TdGFpbmxlc3MtT1MnOiAnVW5rbm93bicsXG4gICAgICAgICdYLVN0YWlubGVzcy1BcmNoJzogJ3Vua25vd24nLFxuICAgICAgICAnWC1TdGFpbmxlc3MtUnVudGltZSc6ICd1bmtub3duJyxcbiAgICAgICAgJ1gtU3RhaW5sZXNzLVJ1bnRpbWUtVmVyc2lvbic6ICd1bmtub3duJyxcbiAgICB9O1xufTtcbi8vIE5vdGU6IG1vZGlmaWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL0pTLURldlRvb2xzL2hvc3QtZW52aXJvbm1lbnQvYmxvYi9iMWFiNzllY2RlMzdkYjVkNmUxNjNjMDUwZTU0ZmU3ZDI4N2Q3YzkyL3NyYy9pc29tb3JwaGljLmJyb3dzZXIudHNcbmZ1bmN0aW9uIGdldEJyb3dzZXJJbmZvKCkge1xuICAgIGlmICh0eXBlb2YgbmF2aWdhdG9yID09PSAndW5kZWZpbmVkJyB8fCAhbmF2aWdhdG9yKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvLyBOT1RFOiBUaGUgb3JkZXIgbWF0dGVycyBoZXJlIVxuICAgIGNvbnN0IGJyb3dzZXJQYXR0ZXJucyA9IFtcbiAgICAgICAgeyBrZXk6ICdlZGdlJywgcGF0dGVybjogL0VkZ2UoPzpcXFcrKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8pPy8gfSxcbiAgICAgICAgeyBrZXk6ICdpZScsIHBhdHRlcm46IC9NU0lFKD86XFxXKyhcXGQrKVxcLihcXGQrKSg/OlxcLihcXGQrKSk/KT8vIH0sXG4gICAgICAgIHsga2V5OiAnaWUnLCBwYXR0ZXJuOiAvVHJpZGVudCg/Oi4qcnZcXDooXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/LyB9LFxuICAgICAgICB7IGtleTogJ2Nocm9tZScsIHBhdHRlcm46IC9DaHJvbWUoPzpcXFcrKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8pPy8gfSxcbiAgICAgICAgeyBrZXk6ICdmaXJlZm94JywgcGF0dGVybjogL0ZpcmVmb3goPzpcXFcrKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8pPy8gfSxcbiAgICAgICAgeyBrZXk6ICdzYWZhcmknLCBwYXR0ZXJuOiAvKD86VmVyc2lvblxcVysoXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/KD86XFxXK01vYmlsZVxcUyopP1xcVytTYWZhcmkvIH0sXG4gICAgXTtcbiAgICAvLyBGaW5kIHRoZSBGSVJTVCBtYXRjaGluZyBicm93c2VyXG4gICAgZm9yIChjb25zdCB7IGtleSwgcGF0dGVybiB9IG9mIGJyb3dzZXJQYXR0ZXJucykge1xuICAgICAgICBjb25zdCBtYXRjaCA9IHBhdHRlcm4uZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICBjb25zdCBtYWpvciA9IG1hdGNoWzFdIHx8IDA7XG4gICAgICAgICAgICBjb25zdCBtaW5vciA9IG1hdGNoWzJdIHx8IDA7XG4gICAgICAgICAgICBjb25zdCBwYXRjaCA9IG1hdGNoWzNdIHx8IDA7XG4gICAgICAgICAgICByZXR1cm4geyBicm93c2VyOiBrZXksIHZlcnNpb246IGAke21ham9yfS4ke21pbm9yfS4ke3BhdGNofWAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cbmNvbnN0IG5vcm1hbGl6ZUFyY2ggPSAoYXJjaCkgPT4ge1xuICAgIC8vIE5vZGUgZG9jczpcbiAgICAvLyAtIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvcHJvY2Vzcy5odG1sI3Byb2Nlc3NhcmNoXG4gICAgLy8gRGVubyBkb2NzOlxuICAgIC8vIC0gaHR0cHM6Ly9kb2MuZGVuby5sYW5kL2Rlbm8vc3RhYmxlL34vRGVuby5idWlsZFxuICAgIGlmIChhcmNoID09PSAneDMyJylcbiAgICAgICAgcmV0dXJuICd4MzInO1xuICAgIGlmIChhcmNoID09PSAneDg2XzY0JyB8fCBhcmNoID09PSAneDY0JylcbiAgICAgICAgcmV0dXJuICd4NjQnO1xuICAgIGlmIChhcmNoID09PSAnYXJtJylcbiAgICAgICAgcmV0dXJuICdhcm0nO1xuICAgIGlmIChhcmNoID09PSAnYWFyY2g2NCcgfHwgYXJjaCA9PT0gJ2FybTY0JylcbiAgICAgICAgcmV0dXJuICdhcm02NCc7XG4gICAgaWYgKGFyY2gpXG4gICAgICAgIHJldHVybiBgb3RoZXI6JHthcmNofWA7XG4gICAgcmV0dXJuICd1bmtub3duJztcbn07XG5jb25zdCBub3JtYWxpemVQbGF0Zm9ybSA9IChwbGF0Zm9ybSkgPT4ge1xuICAgIC8vIE5vZGUgcGxhdGZvcm1zOlxuICAgIC8vIC0gaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9wcm9jZXNzLmh0bWwjcHJvY2Vzc3BsYXRmb3JtXG4gICAgLy8gRGVubyBwbGF0Zm9ybXM6XG4gICAgLy8gLSBodHRwczovL2RvYy5kZW5vLmxhbmQvZGVuby9zdGFibGUvfi9EZW5vLmJ1aWxkXG4gICAgLy8gLSBodHRwczovL2dpdGh1Yi5jb20vZGVub2xhbmQvZGVuby9pc3N1ZXMvMTQ3OTlcbiAgICBwbGF0Zm9ybSA9IHBsYXRmb3JtLnRvTG93ZXJDYXNlKCk7XG4gICAgLy8gTk9URTogdGhpcyBpT1MgY2hlY2sgaXMgdW50ZXN0ZWQgYW5kIG1heSBub3Qgd29ya1xuICAgIC8vIE5vZGUgZG9lcyBub3Qgd29yayBuYXRpdmVseSBvbiBJT1MsIHRoZXJlIGlzIGEgZm9yayBhdFxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMtbW9iaWxlL25vZGVqcy1tb2JpbGVcbiAgICAvLyBob3dldmVyIGl0IGlzIHVua25vd24gYXQgdGhlIHRpbWUgb2Ygd3JpdGluZyBob3cgdG8gZGV0ZWN0IGlmIGl0IGlzIHJ1bm5pbmdcbiAgICBpZiAocGxhdGZvcm0uaW5jbHVkZXMoJ2lvcycpKVxuICAgICAgICByZXR1cm4gJ2lPUyc7XG4gICAgaWYgKHBsYXRmb3JtID09PSAnYW5kcm9pZCcpXG4gICAgICAgIHJldHVybiAnQW5kcm9pZCc7XG4gICAgaWYgKHBsYXRmb3JtID09PSAnZGFyd2luJylcbiAgICAgICAgcmV0dXJuICdNYWNPUyc7XG4gICAgaWYgKHBsYXRmb3JtID09PSAnd2luMzInKVxuICAgICAgICByZXR1cm4gJ1dpbmRvd3MnO1xuICAgIGlmIChwbGF0Zm9ybSA9PT0gJ2ZyZWVic2QnKVxuICAgICAgICByZXR1cm4gJ0ZyZWVCU0QnO1xuICAgIGlmIChwbGF0Zm9ybSA9PT0gJ29wZW5ic2QnKVxuICAgICAgICByZXR1cm4gJ09wZW5CU0QnO1xuICAgIGlmIChwbGF0Zm9ybSA9PT0gJ2xpbnV4JylcbiAgICAgICAgcmV0dXJuICdMaW51eCc7XG4gICAgaWYgKHBsYXRmb3JtKVxuICAgICAgICByZXR1cm4gYE90aGVyOiR7cGxhdGZvcm19YDtcbiAgICByZXR1cm4gJ1Vua25vd24nO1xufTtcbmxldCBfcGxhdGZvcm1IZWFkZXJzO1xuY29uc3QgZ2V0UGxhdGZvcm1IZWFkZXJzID0gKCkgPT4ge1xuICAgIHJldHVybiAoX3BsYXRmb3JtSGVhZGVycyA/PyAoX3BsYXRmb3JtSGVhZGVycyA9IGdldFBsYXRmb3JtUHJvcGVydGllcygpKSk7XG59O1xuZXhwb3J0IGNvbnN0IHNhZmVKU09OID0gKHRleHQpID0+IHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh0ZXh0KTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycikge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn07XG4vLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybC1zY2hlbWUtc3RyaW5nXG5jb25zdCBzdGFydHNXaXRoU2NoZW1lUmVnZXhwID0gL15bYS16XVthLXowLTkrLi1dKjovaTtcbmNvbnN0IGlzQWJzb2x1dGVVUkwgPSAodXJsKSA9PiB7XG4gICAgcmV0dXJuIHN0YXJ0c1dpdGhTY2hlbWVSZWdleHAudGVzdCh1cmwpO1xufTtcbmV4cG9ydCBjb25zdCBzbGVlcCA9IChtcykgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbmNvbnN0IHZhbGlkYXRlUG9zaXRpdmVJbnRlZ2VyID0gKG5hbWUsIG4pID0+IHtcbiAgICBpZiAodHlwZW9mIG4gIT09ICdudW1iZXInIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKG4pKSB7XG4gICAgICAgIHRocm93IG5ldyBNdXhFcnJvcihgJHtuYW1lfSBtdXN0IGJlIGFuIGludGVnZXJgKTtcbiAgICB9XG4gICAgaWYgKG4gPCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBNdXhFcnJvcihgJHtuYW1lfSBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlcmApO1xuICAgIH1cbiAgICByZXR1cm4gbjtcbn07XG5leHBvcnQgY29uc3QgY2FzdFRvRXJyb3IgPSAoZXJyKSA9PiB7XG4gICAgaWYgKGVyciBpbnN0YW5jZW9mIEVycm9yKVxuICAgICAgICByZXR1cm4gZXJyO1xuICAgIGlmICh0eXBlb2YgZXJyID09PSAnb2JqZWN0JyAmJiBlcnIgIT09IG51bGwpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoSlNPTi5zdHJpbmdpZnkoZXJyKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggeyB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgRXJyb3IoZXJyKTtcbn07XG5leHBvcnQgY29uc3QgZW5zdXJlUHJlc2VudCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKVxuICAgICAgICB0aHJvdyBuZXcgTXV4RXJyb3IoYEV4cGVjdGVkIGEgdmFsdWUgdG8gYmUgZ2l2ZW4gYnV0IHJlY2VpdmVkICR7dmFsdWV9IGluc3RlYWQuYCk7XG4gICAgcmV0dXJuIHZhbHVlO1xufTtcbi8qKlxuICogUmVhZCBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZS5cbiAqXG4gKiBUcmltcyBiZWdpbm5pbmcgYW5kIHRyYWlsaW5nIHdoaXRlc3BhY2UuXG4gKlxuICogV2lsbCByZXR1cm4gdW5kZWZpbmVkIGlmIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBkb2Vzbid0IGV4aXN0IG9yIGNhbm5vdCBiZSBhY2Nlc3NlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IHJlYWRFbnYgPSAoZW52KSA9PiB7XG4gICAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gcHJvY2Vzcy5lbnY/LltlbnZdPy50cmltKCkgPz8gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIERlbm8gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBEZW5vLmVudj8uZ2V0Py4oZW52KT8udHJpbSgpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbmV4cG9ydCBjb25zdCBjb2VyY2VJbnRlZ2VyID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpXG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlKTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gICAgdGhyb3cgbmV3IE11eEVycm9yKGBDb3VsZCBub3QgY29lcmNlICR7dmFsdWV9ICh0eXBlOiAke3R5cGVvZiB2YWx1ZX0pIGludG8gYSBudW1iZXJgKTtcbn07XG5leHBvcnQgY29uc3QgY29lcmNlRmxvYXQgPSAodmFsdWUpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJylcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gICAgdGhyb3cgbmV3IE11eEVycm9yKGBDb3VsZCBub3QgY29lcmNlICR7dmFsdWV9ICh0eXBlOiAke3R5cGVvZiB2YWx1ZX0pIGludG8gYSBudW1iZXJgKTtcbn07XG5leHBvcnQgY29uc3QgY29lcmNlQm9vbGVhbiA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJylcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gdmFsdWUgPT09ICd0cnVlJztcbiAgICByZXR1cm4gQm9vbGVhbih2YWx1ZSk7XG59O1xuZXhwb3J0IGNvbnN0IG1heWJlQ29lcmNlSW50ZWdlciA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBjb2VyY2VJbnRlZ2VyKHZhbHVlKTtcbn07XG5leHBvcnQgY29uc3QgbWF5YmVDb2VyY2VGbG9hdCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBjb2VyY2VGbG9hdCh2YWx1ZSk7XG59O1xuZXhwb3J0IGNvbnN0IG1heWJlQ29lcmNlQm9vbGVhbiA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBjb2VyY2VCb29sZWFuKHZhbHVlKTtcbn07XG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzQ0OTEyODdcbmV4cG9ydCBmdW5jdGlvbiBpc0VtcHR5T2JqKG9iaikge1xuICAgIGlmICghb2JqKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBmb3IgKGNvbnN0IF9rIGluIG9iailcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuLy8gaHR0cHM6Ly9lc2xpbnQub3JnL2RvY3MvbGF0ZXN0L3J1bGVzL25vLXByb3RvdHlwZS1idWlsdGluc1xuZXhwb3J0IGZ1bmN0aW9uIGhhc093bihvYmosIGtleSkge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpO1xufVxuLyoqXG4gKiBDb3BpZXMgaGVhZGVycyBmcm9tIFwibmV3SGVhZGVyc1wiIG9udG8gXCJ0YXJnZXRIZWFkZXJzXCIsXG4gKiB1c2luZyBsb3dlci1jYXNlIGZvciBhbGwgcHJvcGVydGllcyxcbiAqIGlnbm9yaW5nIGFueSBrZXlzIHdpdGggdW5kZWZpbmVkIHZhbHVlcyxcbiAqIGFuZCBkZWxldGluZyBhbnkga2V5cyB3aXRoIG51bGwgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBhcHBseUhlYWRlcnNNdXQodGFyZ2V0SGVhZGVycywgbmV3SGVhZGVycykge1xuICAgIGZvciAoY29uc3QgayBpbiBuZXdIZWFkZXJzKSB7XG4gICAgICAgIGlmICghaGFzT3duKG5ld0hlYWRlcnMsIGspKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGNvbnN0IGxvd2VyS2V5ID0gay50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoIWxvd2VyS2V5KVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGNvbnN0IHZhbCA9IG5ld0hlYWRlcnNba107XG4gICAgICAgIGlmICh2YWwgPT09IG51bGwpIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0YXJnZXRIZWFkZXJzW2xvd2VyS2V5XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2YWwgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGFyZ2V0SGVhZGVyc1tsb3dlcktleV0gPSB2YWw7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZGVidWcoYWN0aW9uLCAuLi5hcmdzKSB7XG4gICAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzPy5lbnY/LlsnREVCVUcnXSA9PT0gJ3RydWUnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBNdXg6REVCVUc6JHthY3Rpb259YCwgLi4uYXJncyk7XG4gICAgfVxufVxuLyoqXG4gKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjExNzUyM1xuICovXG5jb25zdCB1dWlkNCA9ICgpID0+IHtcbiAgICByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCAoYykgPT4ge1xuICAgICAgICBjb25zdCByID0gKE1hdGgucmFuZG9tKCkgKiAxNikgfCAwO1xuICAgICAgICBjb25zdCB2ID0gYyA9PT0gJ3gnID8gciA6IChyICYgMHgzKSB8IDB4ODtcbiAgICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpO1xuICAgIH0pO1xufTtcbmV4cG9ydCBjb25zdCBpc1J1bm5pbmdJbkJyb3dzZXIgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICB0eXBlb2Ygd2luZG93LmRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnKTtcbn07XG5leHBvcnQgY29uc3QgaXNIZWFkZXJzUHJvdG9jb2wgPSAoaGVhZGVycykgPT4ge1xuICAgIHJldHVybiB0eXBlb2YgaGVhZGVycz8uZ2V0ID09PSAnZnVuY3Rpb24nO1xufTtcbmV4cG9ydCBjb25zdCBnZXRSZXF1aXJlZEhlYWRlciA9IChoZWFkZXJzLCBoZWFkZXIpID0+IHtcbiAgICBjb25zdCBmb3VuZEhlYWRlciA9IGdldEhlYWRlcihoZWFkZXJzLCBoZWFkZXIpO1xuICAgIGlmIChmb3VuZEhlYWRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IGZpbmQgJHtoZWFkZXJ9IGhlYWRlcmApO1xuICAgIH1cbiAgICByZXR1cm4gZm91bmRIZWFkZXI7XG59O1xuZXhwb3J0IGNvbnN0IGdldEhlYWRlciA9IChoZWFkZXJzLCBoZWFkZXIpID0+IHtcbiAgICBjb25zdCBsb3dlckNhc2VkSGVhZGVyID0gaGVhZGVyLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGlzSGVhZGVyc1Byb3RvY29sKGhlYWRlcnMpKSB7XG4gICAgICAgIC8vIHRvIGRlYWwgd2l0aCB0aGUgY2FzZSB3aGVyZSB0aGUgaGVhZGVyIGxvb2tzIGxpa2UgU3RhaW5sZXNzLUV2ZW50LUlkXG4gICAgICAgIGNvbnN0IGludGVyY2Fwc0hlYWRlciA9IGhlYWRlclswXT8udG9VcHBlckNhc2UoKSArXG4gICAgICAgICAgICBoZWFkZXIuc3Vic3RyaW5nKDEpLnJlcGxhY2UoLyhbXlxcd10pKFxcdykvZywgKF9tLCBnMSwgZzIpID0+IGcxICsgZzIudG9VcHBlckNhc2UoKSk7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIFtoZWFkZXIsIGxvd2VyQ2FzZWRIZWFkZXIsIGhlYWRlci50b1VwcGVyQ2FzZSgpLCBpbnRlcmNhcHNIZWFkZXJdKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGhlYWRlcnMuZ2V0KGtleSk7XG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoaGVhZGVycykpIHtcbiAgICAgICAgaWYgKGtleS50b0xvd2VyQ2FzZSgpID09PSBsb3dlckNhc2VkSGVhZGVyKSB7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoIDw9IDEpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZVswXTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYFJlY2VpdmVkICR7dmFsdWUubGVuZ3RofSBlbnRyaWVzIGZvciB0aGUgJHtoZWFkZXJ9IGhlYWRlciwgdXNpbmcgdGhlIGZpcnN0IGVudHJ5LmApO1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZVswXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbi8qKlxuICogRW5jb2RlcyBhIHN0cmluZyB0byBCYXNlNjQgZm9ybWF0LlxuICovXG5leHBvcnQgY29uc3QgdG9CYXNlNjQgPSAoc3RyKSA9PiB7XG4gICAgaWYgKCFzdHIpXG4gICAgICAgIHJldHVybiAnJztcbiAgICBpZiAodHlwZW9mIEJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHN0cikudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGJ0b2EgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBidG9hKHN0cik7XG4gICAgfVxuICAgIHRocm93IG5ldyBNdXhFcnJvcignQ2Fubm90IGdlbmVyYXRlIGI2NCBzdHJpbmc7IEV4cGVjdGVkIGBCdWZmZXJgIG9yIGBidG9hYCB0byBiZSBkZWZpbmVkJyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqKG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShvYmopO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29yZS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/core.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/error.mjs":
/*!**********************************************!*\
  !*** ./node_modules/@mux/mux-node/error.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* binding */ APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* binding */ APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* binding */ APIError),\n/* harmony export */   APIUserAbortError: () => (/* binding */ APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* binding */ BadRequestError),\n/* harmony export */   ConflictError: () => (/* binding */ ConflictError),\n/* harmony export */   InternalServerError: () => (/* binding */ InternalServerError),\n/* harmony export */   MuxError: () => (/* binding */ MuxError),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   PermissionDeniedError: () => (/* binding */ PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* binding */ RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* binding */ UnprocessableEntityError)\n/* harmony export */ });\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass MuxError extends Error {\n}\nclass APIError extends MuxError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.error = error;\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: (0,_core_mjs__WEBPACK_IMPORTED_MODULE_0__.castToError)(errorResponse) });\n        }\n        const error = errorResponse;\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nclass APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nclass APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nclass APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nclass BadRequestError extends APIError {\n}\nclass AuthenticationError extends APIError {\n}\nclass PermissionDeniedError extends APIError {\n}\nclass NotFoundError extends APIError {\n}\nclass ConflictError extends APIError {\n}\nclass UnprocessableEntityError extends APIError {\n}\nclass RateLimitError extends APIError {\n}\nclass InternalServerError extends APIError {\n}\n//# sourceMappingURL=error.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9lcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUN5QztBQUNsQztBQUNQO0FBQ087QUFDUDtBQUNBLGlCQUFpQiw2Q0FBNkM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFFBQVEsRUFBRSxJQUFJO0FBQ3BDO0FBQ0E7QUFDQSxzQkFBc0IsUUFBUTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGdCQUFnQixzREFBVyxpQkFBaUI7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0JBQWtCLFVBQVUsSUFBSTtBQUNoQztBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQixVQUFVLElBQUk7QUFDaEMsZ0JBQWdCLDBDQUEwQztBQUMxRDtBQUNBO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXGVycm9yLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgY2FzdFRvRXJyb3IgfSBmcm9tIFwiLi9jb3JlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIE11eEVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZXhwb3J0IGNsYXNzIEFQSUVycm9yIGV4dGVuZHMgTXV4RXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHN0YXR1cywgZXJyb3IsIG1lc3NhZ2UsIGhlYWRlcnMpIHtcbiAgICAgICAgc3VwZXIoYCR7QVBJRXJyb3IubWFrZU1lc3NhZ2Uoc3RhdHVzLCBlcnJvciwgbWVzc2FnZSl9YCk7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xuICAgICAgICB0aGlzLmVycm9yID0gZXJyb3I7XG4gICAgfVxuICAgIHN0YXRpYyBtYWtlTWVzc2FnZShzdGF0dXMsIGVycm9yLCBtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IG1zZyA9IGVycm9yPy5tZXNzYWdlID9cbiAgICAgICAgICAgIHR5cGVvZiBlcnJvci5tZXNzYWdlID09PSAnc3RyaW5nJyA/XG4gICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZVxuICAgICAgICAgICAgICAgIDogSlNPTi5zdHJpbmdpZnkoZXJyb3IubWVzc2FnZSlcbiAgICAgICAgICAgIDogZXJyb3IgPyBKU09OLnN0cmluZ2lmeShlcnJvcilcbiAgICAgICAgICAgICAgICA6IG1lc3NhZ2U7XG4gICAgICAgIGlmIChzdGF0dXMgJiYgbXNnKSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7c3RhdHVzfSAke21zZ31gO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGF0dXMpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtzdGF0dXN9IHN0YXR1cyBjb2RlIChubyBib2R5KWA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1zZykge1xuICAgICAgICAgICAgcmV0dXJuIG1zZztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJyhubyBzdGF0dXMgY29kZSBvciBib2R5KSc7XG4gICAgfVxuICAgIHN0YXRpYyBnZW5lcmF0ZShzdGF0dXMsIGVycm9yUmVzcG9uc2UsIG1lc3NhZ2UsIGhlYWRlcnMpIHtcbiAgICAgICAgaWYgKCFzdGF0dXMgfHwgIWhlYWRlcnMpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQVBJQ29ubmVjdGlvbkVycm9yKHsgbWVzc2FnZSwgY2F1c2U6IGNhc3RUb0Vycm9yKGVycm9yUmVzcG9uc2UpIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVycm9yID0gZXJyb3JSZXNwb25zZTtcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gNDAwKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEJhZFJlcXVlc3RFcnJvcihzdGF0dXMsIGVycm9yLCBtZXNzYWdlLCBoZWFkZXJzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXV0aGVudGljYXRpb25FcnJvcihzdGF0dXMsIGVycm9yLCBtZXNzYWdlLCBoZWFkZXJzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RhdHVzID09PSA0MDMpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUGVybWlzc2lvbkRlbmllZEVycm9yKHN0YXR1cywgZXJyb3IsIG1lc3NhZ2UsIGhlYWRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGF0dXMgPT09IDQwNCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBOb3RGb3VuZEVycm9yKHN0YXR1cywgZXJyb3IsIG1lc3NhZ2UsIGhlYWRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGF0dXMgPT09IDQwOSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBDb25mbGljdEVycm9yKHN0YXR1cywgZXJyb3IsIG1lc3NhZ2UsIGhlYWRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGF0dXMgPT09IDQyMikge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBVbnByb2Nlc3NhYmxlRW50aXR5RXJyb3Ioc3RhdHVzLCBlcnJvciwgbWVzc2FnZSwgaGVhZGVycyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gNDI5KSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFJhdGVMaW1pdEVycm9yKHN0YXR1cywgZXJyb3IsIG1lc3NhZ2UsIGhlYWRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGF0dXMgPj0gNTAwKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEludGVybmFsU2VydmVyRXJyb3Ioc3RhdHVzLCBlcnJvciwgbWVzc2FnZSwgaGVhZGVycyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBBUElFcnJvcihzdGF0dXMsIGVycm9yLCBtZXNzYWdlLCBoZWFkZXJzKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQVBJVXNlckFib3J0RXJyb3IgZXh0ZW5kcyBBUElFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBtZXNzYWdlIH0gPSB7fSkge1xuICAgICAgICBzdXBlcih1bmRlZmluZWQsIHVuZGVmaW5lZCwgbWVzc2FnZSB8fCAnUmVxdWVzdCB3YXMgYWJvcnRlZC4nLCB1bmRlZmluZWQpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBBUElDb25uZWN0aW9uRXJyb3IgZXh0ZW5kcyBBUElFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBtZXNzYWdlLCBjYXVzZSB9KSB7XG4gICAgICAgIHN1cGVyKHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBtZXNzYWdlIHx8ICdDb25uZWN0aW9uIGVycm9yLicsIHVuZGVmaW5lZCk7XG4gICAgICAgIC8vIGluIHNvbWUgZW52aXJvbm1lbnRzIHRoZSAnY2F1c2UnIHByb3BlcnR5IGlzIGFscmVhZHkgZGVjbGFyZWRcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBpZiAoY2F1c2UpXG4gICAgICAgICAgICB0aGlzLmNhdXNlID0gY2F1c2U7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEFQSUNvbm5lY3Rpb25UaW1lb3V0RXJyb3IgZXh0ZW5kcyBBUElDb25uZWN0aW9uRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgbWVzc2FnZSB9ID0ge30pIHtcbiAgICAgICAgc3VwZXIoeyBtZXNzYWdlOiBtZXNzYWdlID8/ICdSZXF1ZXN0IHRpbWVkIG91dC4nIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBCYWRSZXF1ZXN0RXJyb3IgZXh0ZW5kcyBBUElFcnJvciB7XG59XG5leHBvcnQgY2xhc3MgQXV0aGVudGljYXRpb25FcnJvciBleHRlbmRzIEFQSUVycm9yIHtcbn1cbmV4cG9ydCBjbGFzcyBQZXJtaXNzaW9uRGVuaWVkRXJyb3IgZXh0ZW5kcyBBUElFcnJvciB7XG59XG5leHBvcnQgY2xhc3MgTm90Rm91bmRFcnJvciBleHRlbmRzIEFQSUVycm9yIHtcbn1cbmV4cG9ydCBjbGFzcyBDb25mbGljdEVycm9yIGV4dGVuZHMgQVBJRXJyb3Ige1xufVxuZXhwb3J0IGNsYXNzIFVucHJvY2Vzc2FibGVFbnRpdHlFcnJvciBleHRlbmRzIEFQSUVycm9yIHtcbn1cbmV4cG9ydCBjbGFzcyBSYXRlTGltaXRFcnJvciBleHRlbmRzIEFQSUVycm9yIHtcbn1cbmV4cG9ydCBjbGFzcyBJbnRlcm5hbFNlcnZlckVycm9yIGV4dGVuZHMgQVBJRXJyb3Ige1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/error.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/index.mjs":
/*!**********************************************!*\
  !*** ./node_modules/@mux/mux-node/index.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIError),\n/* harmony export */   APIUserAbortError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.BadRequestError),\n/* harmony export */   ConflictError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.ConflictError),\n/* harmony export */   InternalServerError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InternalServerError),\n/* harmony export */   Mux: () => (/* binding */ Mux),\n/* harmony export */   MuxError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.MuxError),\n/* harmony export */   NotFoundError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.NotFoundError),\n/* harmony export */   PermissionDeniedError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.UnprocessableEntityError),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fileFromPath: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_9__.fileFromPath),\n/* harmony export */   toFile: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_8__.toFile)\n/* harmony export */ });\n/* harmony import */ var _internal_qs_index_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/qs/index.mjs */ \"(rsc)/./node_modules/@mux/mux-node/internal/qs/stringify.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/./node_modules/@mux/mux-node/error.mjs\");\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/./node_modules/@mux/mux-node/uploads.mjs\");\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/./node_modules/@mux/mux-node/_shims/index.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resources/video/video.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/video.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resources/data/data.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/data.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resources/system/system.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/system/system.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resources/webhooks.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/webhooks.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./resources/index.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/jwt.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\n\n\n\n\n\n\n\n\n\n\n/**\n * API Client for interfacing with the Mux API.\n */\nclass Mux extends _core_mjs__WEBPACK_IMPORTED_MODULE_0__.APIClient {\n    /**\n     * API Client for interfacing with the Mux API.\n     *\n     * @param {string | undefined} [opts.tokenId=process.env['MUX_TOKEN_ID'] ?? undefined]\n     * @param {string | undefined} [opts.tokenSecret=process.env['MUX_TOKEN_SECRET'] ?? undefined]\n     * @param {string | null | undefined} [opts.webhookSecret=process.env['MUX_WEBHOOK_SECRET'] ?? null]\n     * @param {string | null | undefined} [opts.jwtSigningKey=process.env['MUX_SIGNING_KEY'] ?? null]\n     * @param {string | null | undefined} [opts.jwtPrivateKey=process.env['MUX_PRIVATE_KEY'] ?? null]\n     * @param {string} [opts.baseURL=process.env['MUX_BASE_URL'] ?? https://api.mux.com] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     */\n    constructor({ baseURL = _core_mjs__WEBPACK_IMPORTED_MODULE_0__.readEnv('MUX_BASE_URL'), tokenId = _core_mjs__WEBPACK_IMPORTED_MODULE_0__.readEnv('MUX_TOKEN_ID'), tokenSecret = _core_mjs__WEBPACK_IMPORTED_MODULE_0__.readEnv('MUX_TOKEN_SECRET'), webhookSecret = _core_mjs__WEBPACK_IMPORTED_MODULE_0__.readEnv('MUX_WEBHOOK_SECRET') ?? null, jwtSigningKey = _core_mjs__WEBPACK_IMPORTED_MODULE_0__.readEnv('MUX_SIGNING_KEY') ?? null, jwtPrivateKey = _core_mjs__WEBPACK_IMPORTED_MODULE_0__.readEnv('MUX_PRIVATE_KEY') ?? null, ...opts } = {}) {\n        if (tokenId === undefined) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.MuxError(\"The MUX_TOKEN_ID environment variable is missing or empty; either provide it, or instantiate the Mux client with an tokenId option, like new Mux({ tokenId: 'my token id' }).\");\n        }\n        if (tokenSecret === undefined) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.MuxError(\"The MUX_TOKEN_SECRET environment variable is missing or empty; either provide it, or instantiate the Mux client with an tokenSecret option, like new Mux({ tokenSecret: 'my secret' }).\");\n        }\n        const options = {\n            tokenId,\n            tokenSecret,\n            webhookSecret,\n            jwtSigningKey,\n            jwtPrivateKey,\n            ...opts,\n            baseURL: baseURL || `https://api.mux.com`,\n        };\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 60000 /* 1 minute */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.video = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_2__.Video(this);\n        this.data = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_3__.Data(this);\n        this.system = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_4__.System(this);\n        this.webhooks = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_5__.Webhooks(this);\n        this.jwt = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_6__.Jwt(this);\n        this._options = options;\n        this.tokenId = tokenId;\n        this.tokenSecret = tokenSecret;\n        this.webhookSecret = webhookSecret;\n        this.jwtSigningKey = jwtSigningKey;\n        this.jwtPrivateKey = jwtPrivateKey;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        if (!this.tokenId) {\n            return {};\n        }\n        if (!this.tokenSecret) {\n            return {};\n        }\n        const credentials = `${this.tokenId}:${this.tokenSecret}`;\n        const Authorization = `Basic ${_core_mjs__WEBPACK_IMPORTED_MODULE_0__.toBase64(credentials)}`;\n        return { Authorization };\n    }\n    stringifyQuery(query) {\n        return _internal_qs_index_mjs__WEBPACK_IMPORTED_MODULE_7__.stringify(query, { arrayFormat: 'brackets' });\n    }\n}\n_a = Mux;\nMux.Mux = _a;\nMux.DEFAULT_TIMEOUT = 60000; // 1 minute\nMux.MuxError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.MuxError;\nMux.APIError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIError;\nMux.APIConnectionError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIConnectionError;\nMux.APIConnectionTimeoutError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIConnectionTimeoutError;\nMux.APIUserAbortError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError;\nMux.NotFoundError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.NotFoundError;\nMux.ConflictError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.ConflictError;\nMux.RateLimitError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.RateLimitError;\nMux.BadRequestError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.BadRequestError;\nMux.AuthenticationError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationError;\nMux.InternalServerError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InternalServerError;\nMux.PermissionDeniedError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.PermissionDeniedError;\nMux.UnprocessableEntityError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.UnprocessableEntityError;\nMux.toFile = _uploads_mjs__WEBPACK_IMPORTED_MODULE_8__.toFile;\nMux.fileFromPath = _uploads_mjs__WEBPACK_IMPORTED_MODULE_9__.fileFromPath;\nMux.Video = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_2__.Video;\nMux.Data = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_3__.Data;\nMux.System = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_4__.System;\nMux.Webhooks = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_5__.Webhooks;\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Mux);\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/internal/qs/formats.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@mux/mux-node/internal/qs/formats.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RFC1738: () => (/* binding */ RFC1738),\n/* harmony export */   RFC3986: () => (/* binding */ RFC3986),\n/* harmony export */   default_format: () => (/* binding */ default_format),\n/* harmony export */   formatters: () => (/* binding */ formatters)\n/* harmony export */ });\nconst default_format = 'RFC3986';\nconst formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: (v) => String(v),\n};\nconst RFC1738 = 'RFC1738';\nconst RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9pbnRlcm5hbC9xcy9mb3JtYXRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDUCIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXGludGVybmFsXFxxc1xcZm9ybWF0cy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlZmF1bHRfZm9ybWF0ID0gJ1JGQzM5ODYnO1xuZXhwb3J0IGNvbnN0IGZvcm1hdHRlcnMgPSB7XG4gICAgUkZDMTczODogKHYpID0+IFN0cmluZyh2KS5yZXBsYWNlKC8lMjAvZywgJysnKSxcbiAgICBSRkMzOTg2OiAodikgPT4gU3RyaW5nKHYpLFxufTtcbmV4cG9ydCBjb25zdCBSRkMxNzM4ID0gJ1JGQzE3MzgnO1xuZXhwb3J0IGNvbnN0IFJGQzM5ODYgPSAnUkZDMzk4Nic7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXRzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/internal/qs/formats.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/internal/qs/stringify.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@mux/mux-node/internal/qs/stringify.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"(rsc)/./node_modules/@mux/mux-node/internal/qs/utils.mjs\");\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formats.mjs */ \"(rsc)/./node_modules/@mux/mux-node/internal/qs/formats.mjs\");\n\n\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr, value_or_array) {\n    push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: _utils_mjs__WEBPACK_IMPORTED_MODULE_0__.encode,\n    encodeValuesOnly: false,\n    format: _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format,\n    formatter: _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters[_formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format],\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return to_ISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        obj = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.maybe_map)(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.is_buffer)(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.maybe_map)(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (is_array(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = is_array(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(_formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nfunction stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (is_array(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/internal/qs/stringify.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/internal/qs/utils.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@mux/mux-node/internal/qs/utils.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assign_single_source: () => (/* binding */ assign_single_source),\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   compact: () => (/* binding */ compact),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   is_buffer: () => (/* binding */ is_buffer),\n/* harmony export */   is_regexp: () => (/* binding */ is_regexp),\n/* harmony export */   maybe_map: () => (/* binding */ maybe_map),\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formats.mjs */ \"(rsc)/./node_modules/@mux/mux-node/internal/qs/formats.mjs\");\n\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (is_array(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nfunction merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (is_array(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) ||\n                !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (is_array(target) && !is_array(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (is_array(target) && is_array(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nfunction assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nfunction decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nconst encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nfunction compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nfunction is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nfunction is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nfunction combine(a, b) {\n    return [].concat(a, b);\n}\nfunction maybe_map(val, fn) {\n    if (is_array(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/internal/qs/utils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/pagination.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@mux/mux-node/pagination.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePage: () => (/* binding */ BasePage),\n/* harmony export */   PageWithTotal: () => (/* binding */ PageWithTotal)\n/* harmony export */ });\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass PageWithTotal extends _core_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.total_row_count = body.total_row_count || 0;\n        this.timeframe = body.timeframe || [];\n        this.limit = body.limit || 0;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const query = this.options.query;\n        const currentPage = query?.page ?? 1;\n        return { params: { page: currentPage + 1 } };\n    }\n}\nclass BasePage extends _core_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const query = this.options.query;\n        const currentPage = query?.page ?? 1;\n        return { params: { page: currentPage + 1 } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9wYWdpbmF0aW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUMwQztBQUNuQyw0QkFBNEIsbURBQVk7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsVUFBVTtBQUMzQjtBQUNBO0FBQ08sdUJBQXVCLG1EQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFVBQVU7QUFDM0I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccGFnaW5hdGlvbi5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFic3RyYWN0UGFnZSB9IGZyb20gXCIuL2NvcmUubWpzXCI7XG5leHBvcnQgY2xhc3MgUGFnZVdpdGhUb3RhbCBleHRlbmRzIEFic3RyYWN0UGFnZSB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50LCByZXNwb25zZSwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihjbGllbnQsIHJlc3BvbnNlLCBib2R5LCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5kYXRhID0gYm9keS5kYXRhIHx8IFtdO1xuICAgICAgICB0aGlzLnRvdGFsX3Jvd19jb3VudCA9IGJvZHkudG90YWxfcm93X2NvdW50IHx8IDA7XG4gICAgICAgIHRoaXMudGltZWZyYW1lID0gYm9keS50aW1lZnJhbWUgfHwgW107XG4gICAgICAgIHRoaXMubGltaXQgPSBib2R5LmxpbWl0IHx8IDA7XG4gICAgfVxuICAgIGdldFBhZ2luYXRlZEl0ZW1zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhID8/IFtdO1xuICAgIH1cbiAgICAvLyBAZGVwcmVjYXRlZCBQbGVhc2UgdXNlIGBuZXh0UGFnZUluZm8oKWAgaW5zdGVhZFxuICAgIG5leHRQYWdlUGFyYW1zKCkge1xuICAgICAgICBjb25zdCBpbmZvID0gdGhpcy5uZXh0UGFnZUluZm8oKTtcbiAgICAgICAgaWYgKCFpbmZvKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIGlmICgncGFyYW1zJyBpbiBpbmZvKVxuICAgICAgICAgICAgcmV0dXJuIGluZm8ucGFyYW1zO1xuICAgICAgICBjb25zdCBwYXJhbXMgPSBPYmplY3QuZnJvbUVudHJpZXMoaW5mby51cmwuc2VhcmNoUGFyYW1zKTtcbiAgICAgICAgaWYgKCFPYmplY3Qua2V5cyhwYXJhbXMpLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICByZXR1cm4gcGFyYW1zO1xuICAgIH1cbiAgICBuZXh0UGFnZUluZm8oKSB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy5vcHRpb25zLnF1ZXJ5O1xuICAgICAgICBjb25zdCBjdXJyZW50UGFnZSA9IHF1ZXJ5Py5wYWdlID8/IDE7XG4gICAgICAgIHJldHVybiB7IHBhcmFtczogeyBwYWdlOiBjdXJyZW50UGFnZSArIDEgfSB9O1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBCYXNlUGFnZSBleHRlbmRzIEFic3RyYWN0UGFnZSB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50LCByZXNwb25zZSwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihjbGllbnQsIHJlc3BvbnNlLCBib2R5LCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5kYXRhID0gYm9keS5kYXRhIHx8IFtdO1xuICAgIH1cbiAgICBnZXRQYWdpbmF0ZWRJdGVtcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YSA/PyBbXTtcbiAgICB9XG4gICAgLy8gQGRlcHJlY2F0ZWQgUGxlYXNlIHVzZSBgbmV4dFBhZ2VJbmZvKClgIGluc3RlYWRcbiAgICBuZXh0UGFnZVBhcmFtcygpIHtcbiAgICAgICAgY29uc3QgaW5mbyA9IHRoaXMubmV4dFBhZ2VJbmZvKCk7XG4gICAgICAgIGlmICghaW5mbylcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICBpZiAoJ3BhcmFtcycgaW4gaW5mbylcbiAgICAgICAgICAgIHJldHVybiBpbmZvLnBhcmFtcztcbiAgICAgICAgY29uc3QgcGFyYW1zID0gT2JqZWN0LmZyb21FbnRyaWVzKGluZm8udXJsLnNlYXJjaFBhcmFtcyk7XG4gICAgICAgIGlmICghT2JqZWN0LmtleXMocGFyYW1zKS5sZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgcmV0dXJuIHBhcmFtcztcbiAgICB9XG4gICAgbmV4dFBhZ2VJbmZvKCkge1xuICAgICAgICBjb25zdCBxdWVyeSA9IHRoaXMub3B0aW9ucy5xdWVyeTtcbiAgICAgICAgY29uc3QgY3VycmVudFBhZ2UgPSBxdWVyeT8ucGFnZSA/PyAxO1xuICAgICAgICByZXR1cm4geyBwYXJhbXM6IHsgcGFnZTogY3VycmVudFBhZ2UgKyAxIH0gfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdpbmF0aW9uLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/pagination.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resource.mjs":
/*!*************************************************!*\
  !*** ./node_modules/@mux/mux-node/resource.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIResource: () => (/* binding */ APIResource)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nclass APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2UubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQgY2xhc3MgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzb3VyY2UubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resource.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/data.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/data.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Data: () => (/* binding */ Data)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _dimensions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dimensions.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/dimensions.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/errors.mjs\");\n/* harmony import */ var _exports_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./exports.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/exports.mjs\");\n/* harmony import */ var _filters_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./filters.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/filters.mjs\");\n/* harmony import */ var _incidents_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./incidents.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/incidents.mjs\");\n/* harmony import */ var _metrics_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./metrics.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/metrics.mjs\");\n/* harmony import */ var _real_time_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./real-time.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/real-time.mjs\");\n/* harmony import */ var _video_views_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./video-views.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/video-views.mjs\");\n/* harmony import */ var _monitoring_monitoring_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./monitoring/monitoring.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/monitoring/monitoring.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Data extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor() {\n        super(...arguments);\n        this.dimensions = new _dimensions_mjs__WEBPACK_IMPORTED_MODULE_1__.Dimensions(this._client);\n        this.monitoring = new _monitoring_monitoring_mjs__WEBPACK_IMPORTED_MODULE_2__.Monitoring(this._client);\n        this.errors = new _errors_mjs__WEBPACK_IMPORTED_MODULE_3__.Errors(this._client);\n        this.exports = new _exports_mjs__WEBPACK_IMPORTED_MODULE_4__.Exports(this._client);\n        this.filters = new _filters_mjs__WEBPACK_IMPORTED_MODULE_5__.Filters(this._client);\n        this.incidents = new _incidents_mjs__WEBPACK_IMPORTED_MODULE_6__.Incidents(this._client);\n        this.metrics = new _metrics_mjs__WEBPACK_IMPORTED_MODULE_7__.Metrics(this._client);\n        this.realTime = new _real_time_mjs__WEBPACK_IMPORTED_MODULE_8__.RealTime(this._client);\n        this.videoViews = new _video_views_mjs__WEBPACK_IMPORTED_MODULE_9__.VideoViews(this._client);\n    }\n}\nData.Dimensions = _dimensions_mjs__WEBPACK_IMPORTED_MODULE_1__.Dimensions;\nData.DimensionValuesBasePage = _dimensions_mjs__WEBPACK_IMPORTED_MODULE_1__.DimensionValuesBasePage;\nData.Monitoring = _monitoring_monitoring_mjs__WEBPACK_IMPORTED_MODULE_2__.Monitoring;\nData.Errors = _errors_mjs__WEBPACK_IMPORTED_MODULE_3__.Errors;\nData.Exports = _exports_mjs__WEBPACK_IMPORTED_MODULE_4__.Exports;\nData.Filters = _filters_mjs__WEBPACK_IMPORTED_MODULE_5__.Filters;\nData.FilterValuesBasePage = _filters_mjs__WEBPACK_IMPORTED_MODULE_5__.FilterValuesBasePage;\nData.Incidents = _incidents_mjs__WEBPACK_IMPORTED_MODULE_6__.Incidents;\nData.IncidentsBasePage = _incidents_mjs__WEBPACK_IMPORTED_MODULE_6__.IncidentsBasePage;\nData.Metrics = _metrics_mjs__WEBPACK_IMPORTED_MODULE_7__.Metrics;\nData.BreakdownValuesBasePage = _metrics_mjs__WEBPACK_IMPORTED_MODULE_7__.BreakdownValuesBasePage;\nData.RealTime = _real_time_mjs__WEBPACK_IMPORTED_MODULE_8__.RealTime;\nData.VideoViews = _video_views_mjs__WEBPACK_IMPORTED_MODULE_9__.VideoViews;\nData.AbridgedVideoViewsBasePage = _video_views_mjs__WEBPACK_IMPORTED_MODULE_9__.AbridgedVideoViewsBasePage;\n//# sourceMappingURL=data.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9kYXRhLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2lEO0FBQ0M7QUFDc0I7QUFDOUI7QUFDSjtBQUNNO0FBQ0o7QUFDSTtBQUNtQjtBQUNmO0FBQ2dCO0FBQ3BCO0FBQ3NCO0FBQ25CO0FBQ0g7QUFDTztBQUN5QjtBQUNmO0FBQ0o7QUFDbEQsbUJBQW1CLHNEQUFXO0FBQ3JDO0FBQ0E7QUFDQSw4QkFBOEIsdURBQXdCO0FBQ3RELDhCQUE4QixrRUFBd0I7QUFDdEQsMEJBQTBCLCtDQUFnQjtBQUMxQywyQkFBMkIsaURBQWtCO0FBQzdDLDJCQUEyQixpREFBa0I7QUFDN0MsNkJBQTZCLHFEQUFzQjtBQUNuRCwyQkFBMkIsaURBQWtCO0FBQzdDLDRCQUE0QixvREFBb0I7QUFDaEQsOEJBQThCLHdEQUF3QjtBQUN0RDtBQUNBO0FBQ0Esa0JBQWtCLHVEQUFVO0FBQzVCLCtCQUErQixvRUFBdUI7QUFDdEQsa0JBQWtCLGtFQUFVO0FBQzVCLGNBQWMsK0NBQU07QUFDcEIsZUFBZSxpREFBTztBQUN0QixlQUFlLGlEQUFPO0FBQ3RCLDRCQUE0Qiw4REFBb0I7QUFDaEQsaUJBQWlCLHFEQUFTO0FBQzFCLHlCQUF5Qiw2REFBaUI7QUFDMUMsZUFBZSxpREFBTztBQUN0QiwrQkFBK0IsaUVBQXVCO0FBQ3RELGdCQUFnQixvREFBUTtBQUN4QixrQkFBa0Isd0RBQVU7QUFDNUIsa0NBQWtDLHdFQUEwQjtBQUM1RCIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXHJlc291cmNlc1xcZGF0YVxcZGF0YS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgRGltZW5zaW9uc0FQSSBmcm9tIFwiLi9kaW1lbnNpb25zLm1qc1wiO1xuaW1wb3J0IHsgRGltZW5zaW9uVmFsdWVzQmFzZVBhZ2UsIERpbWVuc2lvbnMsIH0gZnJvbSBcIi4vZGltZW5zaW9ucy5tanNcIjtcbmltcG9ydCAqIGFzIEVycm9yc0FQSSBmcm9tIFwiLi9lcnJvcnMubWpzXCI7XG5pbXBvcnQgeyBFcnJvcnMgfSBmcm9tIFwiLi9lcnJvcnMubWpzXCI7XG5pbXBvcnQgKiBhcyBFeHBvcnRzQVBJIGZyb20gXCIuL2V4cG9ydHMubWpzXCI7XG5pbXBvcnQgeyBFeHBvcnRzIH0gZnJvbSBcIi4vZXhwb3J0cy5tanNcIjtcbmltcG9ydCAqIGFzIEZpbHRlcnNBUEkgZnJvbSBcIi4vZmlsdGVycy5tanNcIjtcbmltcG9ydCB7IEZpbHRlclZhbHVlc0Jhc2VQYWdlLCBGaWx0ZXJzLCB9IGZyb20gXCIuL2ZpbHRlcnMubWpzXCI7XG5pbXBvcnQgKiBhcyBJbmNpZGVudHNBUEkgZnJvbSBcIi4vaW5jaWRlbnRzLm1qc1wiO1xuaW1wb3J0IHsgSW5jaWRlbnRzLCBJbmNpZGVudHNCYXNlUGFnZSwgfSBmcm9tIFwiLi9pbmNpZGVudHMubWpzXCI7XG5pbXBvcnQgKiBhcyBNZXRyaWNzQVBJIGZyb20gXCIuL21ldHJpY3MubWpzXCI7XG5pbXBvcnQgeyBCcmVha2Rvd25WYWx1ZXNCYXNlUGFnZSwgTWV0cmljcywgfSBmcm9tIFwiLi9tZXRyaWNzLm1qc1wiO1xuaW1wb3J0ICogYXMgUmVhbFRpbWVBUEkgZnJvbSBcIi4vcmVhbC10aW1lLm1qc1wiO1xuaW1wb3J0IHsgUmVhbFRpbWUsIH0gZnJvbSBcIi4vcmVhbC10aW1lLm1qc1wiO1xuaW1wb3J0ICogYXMgVmlkZW9WaWV3c0FQSSBmcm9tIFwiLi92aWRlby12aWV3cy5tanNcIjtcbmltcG9ydCB7IEFicmlkZ2VkVmlkZW9WaWV3c0Jhc2VQYWdlLCBWaWRlb1ZpZXdzLCB9IGZyb20gXCIuL3ZpZGVvLXZpZXdzLm1qc1wiO1xuaW1wb3J0ICogYXMgTW9uaXRvcmluZ0FQSSBmcm9tIFwiLi9tb25pdG9yaW5nL21vbml0b3JpbmcubWpzXCI7XG5pbXBvcnQgeyBNb25pdG9yaW5nIH0gZnJvbSBcIi4vbW9uaXRvcmluZy9tb25pdG9yaW5nLm1qc1wiO1xuZXhwb3J0IGNsYXNzIERhdGEgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuZGltZW5zaW9ucyA9IG5ldyBEaW1lbnNpb25zQVBJLkRpbWVuc2lvbnModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5tb25pdG9yaW5nID0gbmV3IE1vbml0b3JpbmdBUEkuTW9uaXRvcmluZyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmVycm9ycyA9IG5ldyBFcnJvcnNBUEkuRXJyb3JzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMuZXhwb3J0cyA9IG5ldyBFeHBvcnRzQVBJLkV4cG9ydHModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5maWx0ZXJzID0gbmV3IEZpbHRlcnNBUEkuRmlsdGVycyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmluY2lkZW50cyA9IG5ldyBJbmNpZGVudHNBUEkuSW5jaWRlbnRzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMubWV0cmljcyA9IG5ldyBNZXRyaWNzQVBJLk1ldHJpY3ModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5yZWFsVGltZSA9IG5ldyBSZWFsVGltZUFQSS5SZWFsVGltZSh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnZpZGVvVmlld3MgPSBuZXcgVmlkZW9WaWV3c0FQSS5WaWRlb1ZpZXdzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuRGF0YS5EaW1lbnNpb25zID0gRGltZW5zaW9ucztcbkRhdGEuRGltZW5zaW9uVmFsdWVzQmFzZVBhZ2UgPSBEaW1lbnNpb25WYWx1ZXNCYXNlUGFnZTtcbkRhdGEuTW9uaXRvcmluZyA9IE1vbml0b3Jpbmc7XG5EYXRhLkVycm9ycyA9IEVycm9ycztcbkRhdGEuRXhwb3J0cyA9IEV4cG9ydHM7XG5EYXRhLkZpbHRlcnMgPSBGaWx0ZXJzO1xuRGF0YS5GaWx0ZXJWYWx1ZXNCYXNlUGFnZSA9IEZpbHRlclZhbHVlc0Jhc2VQYWdlO1xuRGF0YS5JbmNpZGVudHMgPSBJbmNpZGVudHM7XG5EYXRhLkluY2lkZW50c0Jhc2VQYWdlID0gSW5jaWRlbnRzQmFzZVBhZ2U7XG5EYXRhLk1ldHJpY3MgPSBNZXRyaWNzO1xuRGF0YS5CcmVha2Rvd25WYWx1ZXNCYXNlUGFnZSA9IEJyZWFrZG93blZhbHVlc0Jhc2VQYWdlO1xuRGF0YS5SZWFsVGltZSA9IFJlYWxUaW1lO1xuRGF0YS5WaWRlb1ZpZXdzID0gVmlkZW9WaWV3cztcbkRhdGEuQWJyaWRnZWRWaWRlb1ZpZXdzQmFzZVBhZ2UgPSBBYnJpZGdlZFZpZGVvVmlld3NCYXNlUGFnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGEubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/data.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/dimensions.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/dimensions.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DimensionValuesBasePage: () => (/* binding */ DimensionValuesBasePage),\n/* harmony export */   Dimensions: () => (/* binding */ Dimensions)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Dimensions extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * List all available dimensions.\n     *\n     * Note: This API replaces the list-filters API call.\n     */\n    list(options) {\n        return this._client.get('/data/v1/dimensions', options);\n    }\n    listValues(dimensionId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.listValues(dimensionId, {}, query);\n        }\n        return this._client.getAPIList(`/data/v1/dimensions/${dimensionId}`, DimensionValuesBasePage, {\n            query,\n            ...options,\n        });\n    }\n}\nclass DimensionValuesBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nDimensions.DimensionValuesBasePage = DimensionValuesBasePage;\n//# sourceMappingURL=dimensions.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9kaW1lbnNpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2lEO0FBQ0M7QUFDRjtBQUN6Qyx5QkFBeUIsc0RBQVc7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QyxZQUFZLDJEQUFnQjtBQUM1QixrREFBa0Q7QUFDbEQ7QUFDQSw4REFBOEQsWUFBWTtBQUMxRTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDTyxzQ0FBc0MscURBQVE7QUFDckQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFxkYXRhXFxkaW1lbnNpb25zLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBpc1JlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2NvcmUubWpzXCI7XG5pbXBvcnQgeyBCYXNlUGFnZSB9IGZyb20gXCIuLi8uLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIERpbWVuc2lvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogTGlzdCBhbGwgYXZhaWxhYmxlIGRpbWVuc2lvbnMuXG4gICAgICpcbiAgICAgKiBOb3RlOiBUaGlzIEFQSSByZXBsYWNlcyB0aGUgbGlzdC1maWx0ZXJzIEFQSSBjYWxsLlxuICAgICAqL1xuICAgIGxpc3Qob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldCgnL2RhdGEvdjEvZGltZW5zaW9ucycsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBsaXN0VmFsdWVzKGRpbWVuc2lvbklkLCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdFZhbHVlcyhkaW1lbnNpb25JZCwge30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoYC9kYXRhL3YxL2RpbWVuc2lvbnMvJHtkaW1lbnNpb25JZH1gLCBEaW1lbnNpb25WYWx1ZXNCYXNlUGFnZSwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRGltZW5zaW9uVmFsdWVzQmFzZVBhZ2UgZXh0ZW5kcyBCYXNlUGFnZSB7XG59XG5EaW1lbnNpb25zLkRpbWVuc2lvblZhbHVlc0Jhc2VQYWdlID0gRGltZW5zaW9uVmFsdWVzQmFzZVBhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaW1lbnNpb25zLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/dimensions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/errors.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/errors.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Errors: () => (/* binding */ Errors)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Errors extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.get('/data/v1/errors', { query, ...options });\n    }\n}\n//# sourceMappingURL=errors.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9lcnJvcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2lEO0FBQ0M7QUFDM0MscUJBQXFCLHNEQUFXO0FBQ3ZDLG1CQUFtQjtBQUNuQixZQUFZLDJEQUFnQjtBQUM1QiwrQkFBK0I7QUFDL0I7QUFDQSxxREFBcUQsbUJBQW1CO0FBQ3hFO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXHJlc291cmNlc1xcZGF0YVxcZXJyb3JzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBpc1JlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2NvcmUubWpzXCI7XG5leHBvcnQgY2xhc3MgRXJyb3JzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldCgnL2RhdGEvdjEvZXJyb3JzJywgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/errors.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/exports.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/exports.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Exports: () => (/* binding */ Exports)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Exports extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Lists the available video view exports along with URLs to retrieve them.\n     */\n    listVideoViews(options) {\n        return this._client.get('/data/v1/exports/views', options);\n    }\n}\n//# sourceMappingURL=exports.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9leHBvcnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2lEO0FBQzFDLHNCQUFzQixzREFBVztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFxkYXRhXFxleHBvcnRzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgRXhwb3J0cyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBMaXN0cyB0aGUgYXZhaWxhYmxlIHZpZGVvIHZpZXcgZXhwb3J0cyBhbG9uZyB3aXRoIFVSTHMgdG8gcmV0cmlldmUgdGhlbS5cbiAgICAgKi9cbiAgICBsaXN0VmlkZW9WaWV3cyhvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KCcvZGF0YS92MS9leHBvcnRzL3ZpZXdzJywgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXhwb3J0cy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/exports.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/filters.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/filters.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterValuesBasePage: () => (/* binding */ FilterValuesBasePage),\n/* harmony export */   Filters: () => (/* binding */ Filters)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Filters extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    listValues(filterId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.listValues(filterId, {}, query);\n        }\n        return this._client.getAPIList(`/data/v1/filters/${filterId}`, FilterValuesBasePage, {\n            query,\n            ...options,\n        });\n    }\n}\nclass FilterValuesBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nFilters.FilterValuesBasePage = FilterValuesBasePage;\n//# sourceMappingURL=filters.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9maWx0ZXJzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2lEO0FBQ0M7QUFDRjtBQUN6QyxzQkFBc0Isc0RBQVc7QUFDeEMsbUNBQW1DO0FBQ25DLFlBQVksMkRBQWdCO0FBQzVCLCtDQUErQztBQUMvQztBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNPLG1DQUFtQyxxREFBUTtBQUNsRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFx0ZW1wXFxZb3VUdWJlXFxub2RlX21vZHVsZXNcXEBtdXhcXG11eC1ub2RlXFxyZXNvdXJjZXNcXGRhdGFcXGZpbHRlcnMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IEJhc2VQYWdlIH0gZnJvbSBcIi4uLy4uL3BhZ2luYXRpb24ubWpzXCI7XG5leHBvcnQgY2xhc3MgRmlsdGVycyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBsaXN0VmFsdWVzKGZpbHRlcklkLCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdFZhbHVlcyhmaWx0ZXJJZCwge30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoYC9kYXRhL3YxL2ZpbHRlcnMvJHtmaWx0ZXJJZH1gLCBGaWx0ZXJWYWx1ZXNCYXNlUGFnZSwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRmlsdGVyVmFsdWVzQmFzZVBhZ2UgZXh0ZW5kcyBCYXNlUGFnZSB7XG59XG5GaWx0ZXJzLkZpbHRlclZhbHVlc0Jhc2VQYWdlID0gRmlsdGVyVmFsdWVzQmFzZVBhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWx0ZXJzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/filters.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/incidents.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/incidents.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Incidents: () => (/* binding */ Incidents),\n/* harmony export */   IncidentsBasePage: () => (/* binding */ IncidentsBasePage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Incidents extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Returns the details of an incident.\n     */\n    retrieve(incidentId, options) {\n        return this._client.get(`/data/v1/incidents/${incidentId}`, options);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/data/v1/incidents', IncidentsBasePage, { query, ...options });\n    }\n    listRelated(incidentId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.listRelated(incidentId, {}, query);\n        }\n        return this._client.getAPIList(`/data/v1/incidents/${incidentId}/related`, IncidentsBasePage, {\n            query,\n            ...options,\n        });\n    }\n}\nclass IncidentsBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nIncidents.IncidentsBasePage = IncidentsBasePage;\n//# sourceMappingURL=incidents.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9pbmNpZGVudHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDaUQ7QUFDQztBQUNGO0FBQ3pDLHdCQUF3QixzREFBVztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxXQUFXO0FBQ2pFO0FBQ0EsbUJBQW1CO0FBQ25CLFlBQVksMkRBQWdCO0FBQzVCLCtCQUErQjtBQUMvQjtBQUNBLGtGQUFrRixtQkFBbUI7QUFDckc7QUFDQSxzQ0FBc0M7QUFDdEMsWUFBWSwyREFBZ0I7QUFDNUIsa0RBQWtEO0FBQ2xEO0FBQ0EsNkRBQTZELFdBQVc7QUFDeEU7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ08sZ0NBQWdDLHFEQUFRO0FBQy9DO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXHJlc291cmNlc1xcZGF0YVxcaW5jaWRlbnRzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBpc1JlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2NvcmUubWpzXCI7XG5pbXBvcnQgeyBCYXNlUGFnZSB9IGZyb20gXCIuLi8uLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEluY2lkZW50cyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBkZXRhaWxzIG9mIGFuIGluY2lkZW50LlxuICAgICAqL1xuICAgIHJldHJpZXZlKGluY2lkZW50SWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9kYXRhL3YxL2luY2lkZW50cy8ke2luY2lkZW50SWR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9kYXRhL3YxL2luY2lkZW50cycsIEluY2lkZW50c0Jhc2VQYWdlLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICBsaXN0UmVsYXRlZChpbmNpZGVudElkLCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdFJlbGF0ZWQoaW5jaWRlbnRJZCwge30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoYC9kYXRhL3YxL2luY2lkZW50cy8ke2luY2lkZW50SWR9L3JlbGF0ZWRgLCBJbmNpZGVudHNCYXNlUGFnZSwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgSW5jaWRlbnRzQmFzZVBhZ2UgZXh0ZW5kcyBCYXNlUGFnZSB7XG59XG5JbmNpZGVudHMuSW5jaWRlbnRzQmFzZVBhZ2UgPSBJbmNpZGVudHNCYXNlUGFnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluY2lkZW50cy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/incidents.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/metrics.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/metrics.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BreakdownValuesBasePage: () => (/* binding */ BreakdownValuesBasePage),\n/* harmony export */   Metrics: () => (/* binding */ Metrics)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Metrics extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.get('/data/v1/metrics/comparison', { query, ...options });\n    }\n    getInsights(metricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.getInsights(metricId, {}, query);\n        }\n        return this._client.get(`/data/v1/metrics/${metricId}/insights`, { query, ...options });\n    }\n    getOverallValues(metricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.getOverallValues(metricId, {}, query);\n        }\n        return this._client.get(`/data/v1/metrics/${metricId}/overall`, { query, ...options });\n    }\n    getTimeseries(metricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.getTimeseries(metricId, {}, query);\n        }\n        return this._client.get(`/data/v1/metrics/${metricId}/timeseries`, { query, ...options });\n    }\n    listBreakdownValues(metricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.listBreakdownValues(metricId, {}, query);\n        }\n        return this._client.getAPIList(`/data/v1/metrics/${metricId}/breakdown`, BreakdownValuesBasePage, {\n            query,\n            ...options,\n        });\n    }\n}\nclass BreakdownValuesBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nMetrics.BreakdownValuesBasePage = BreakdownValuesBasePage;\n//# sourceMappingURL=metrics.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9tZXRyaWNzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2lEO0FBQ0M7QUFDRjtBQUN6QyxzQkFBc0Isc0RBQVc7QUFDeEMsbUJBQW1CO0FBQ25CLFlBQVksMkRBQWdCO0FBQzVCLCtCQUErQjtBQUMvQjtBQUNBLGlFQUFpRSxtQkFBbUI7QUFDcEY7QUFDQSxvQ0FBb0M7QUFDcEMsWUFBWSwyREFBZ0I7QUFDNUIsZ0RBQWdEO0FBQ2hEO0FBQ0Esb0RBQW9ELFNBQVMsY0FBYyxtQkFBbUI7QUFDOUY7QUFDQSx5Q0FBeUM7QUFDekMsWUFBWSwyREFBZ0I7QUFDNUIscURBQXFEO0FBQ3JEO0FBQ0Esb0RBQW9ELFNBQVMsYUFBYSxtQkFBbUI7QUFDN0Y7QUFDQSxzQ0FBc0M7QUFDdEMsWUFBWSwyREFBZ0I7QUFDNUIsa0RBQWtEO0FBQ2xEO0FBQ0Esb0RBQW9ELFNBQVMsZ0JBQWdCLG1CQUFtQjtBQUNoRztBQUNBLDRDQUE0QztBQUM1QyxZQUFZLDJEQUFnQjtBQUM1Qix3REFBd0Q7QUFDeEQ7QUFDQSwyREFBMkQsU0FBUztBQUNwRTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDTyxzQ0FBc0MscURBQVE7QUFDckQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFxkYXRhXFxtZXRyaWNzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBpc1JlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2NvcmUubWpzXCI7XG5pbXBvcnQgeyBCYXNlUGFnZSB9IGZyb20gXCIuLi8uLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIE1ldHJpY3MgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KCcvZGF0YS92MS9tZXRyaWNzL2NvbXBhcmlzb24nLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICBnZXRJbnNpZ2h0cyhtZXRyaWNJZCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEluc2lnaHRzKG1ldHJpY0lkLCB7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvZGF0YS92MS9tZXRyaWNzLyR7bWV0cmljSWR9L2luc2lnaHRzYCwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgZ2V0T3ZlcmFsbFZhbHVlcyhtZXRyaWNJZCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldE92ZXJhbGxWYWx1ZXMobWV0cmljSWQsIHt9LCBxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9kYXRhL3YxL21ldHJpY3MvJHttZXRyaWNJZH0vb3ZlcmFsbGAsIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIGdldFRpbWVzZXJpZXMobWV0cmljSWQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGlzUmVxdWVzdE9wdGlvbnMocXVlcnkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRUaW1lc2VyaWVzKG1ldHJpY0lkLCB7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvZGF0YS92MS9tZXRyaWNzLyR7bWV0cmljSWR9L3RpbWVzZXJpZXNgLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICBsaXN0QnJlYWtkb3duVmFsdWVzKG1ldHJpY0lkLCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdEJyZWFrZG93blZhbHVlcyhtZXRyaWNJZCwge30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoYC9kYXRhL3YxL21ldHJpY3MvJHttZXRyaWNJZH0vYnJlYWtkb3duYCwgQnJlYWtkb3duVmFsdWVzQmFzZVBhZ2UsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEJyZWFrZG93blZhbHVlc0Jhc2VQYWdlIGV4dGVuZHMgQmFzZVBhZ2Uge1xufVxuTWV0cmljcy5CcmVha2Rvd25WYWx1ZXNCYXNlUGFnZSA9IEJyZWFrZG93blZhbHVlc0Jhc2VQYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0cmljcy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/metrics.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/monitoring/metrics.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/monitoring/metrics.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Metrics: () => (/* binding */ Metrics)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Metrics extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Lists available monitoring metrics.\n     */\n    list(options) {\n        return this._client.get('/data/v1/monitoring/metrics', options);\n    }\n    getBreakdown(monitoringMetricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.getBreakdown(monitoringMetricId, {}, query);\n        }\n        return this._client.get(`/data/v1/monitoring/metrics/${monitoringMetricId}/breakdown`, {\n            query,\n            ...options,\n        });\n    }\n    getBreakdownTimeseries(monitoringMetricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.getBreakdownTimeseries(monitoringMetricId, {}, query);\n        }\n        return this._client.get(`/data/v1/monitoring/metrics/${monitoringMetricId}/breakdown-timeseries`, {\n            query,\n            ...options,\n        });\n    }\n    getHistogramTimeseries(monitoringHistogramMetricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.getHistogramTimeseries(monitoringHistogramMetricId, {}, query);\n        }\n        return this._client.get(`/data/v1/monitoring/metrics/${monitoringHistogramMetricId}/histogram-timeseries`, { query, ...options });\n    }\n    getTimeseries(monitoringMetricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.getTimeseries(monitoringMetricId, {}, query);\n        }\n        return this._client.get(`/data/v1/monitoring/metrics/${monitoringMetricId}/timeseries`, {\n            query,\n            ...options,\n        });\n    }\n}\n//# sourceMappingURL=metrics.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9tb25pdG9yaW5nL21ldHJpY3MubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ29EO0FBQ0M7QUFDOUMsc0JBQXNCLHNEQUFXO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQyxZQUFZLDJEQUFnQjtBQUM1QiwyREFBMkQ7QUFDM0Q7QUFDQSwrREFBK0QsbUJBQW1CO0FBQ2xGO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSx5REFBeUQ7QUFDekQsWUFBWSwyREFBZ0I7QUFDNUIscUVBQXFFO0FBQ3JFO0FBQ0EsK0RBQStELG1CQUFtQjtBQUNsRjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0Esa0VBQWtFO0FBQ2xFLFlBQVksMkRBQWdCO0FBQzVCLDhFQUE4RTtBQUM5RTtBQUNBLCtEQUErRCw0QkFBNEIsMEJBQTBCLG1CQUFtQjtBQUN4STtBQUNBLGdEQUFnRDtBQUNoRCxZQUFZLDJEQUFnQjtBQUM1Qiw0REFBNEQ7QUFDNUQ7QUFDQSwrREFBK0QsbUJBQW1CO0FBQ2xGO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFxkYXRhXFxtb25pdG9yaW5nXFxtZXRyaWNzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBpc1JlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUubWpzXCI7XG5leHBvcnQgY2xhc3MgTWV0cmljcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBMaXN0cyBhdmFpbGFibGUgbW9uaXRvcmluZyBtZXRyaWNzLlxuICAgICAqL1xuICAgIGxpc3Qob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldCgnL2RhdGEvdjEvbW9uaXRvcmluZy9tZXRyaWNzJywgb3B0aW9ucyk7XG4gICAgfVxuICAgIGdldEJyZWFrZG93bihtb25pdG9yaW5nTWV0cmljSWQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGlzUmVxdWVzdE9wdGlvbnMocXVlcnkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRCcmVha2Rvd24obW9uaXRvcmluZ01ldHJpY0lkLCB7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvZGF0YS92MS9tb25pdG9yaW5nL21ldHJpY3MvJHttb25pdG9yaW5nTWV0cmljSWR9L2JyZWFrZG93bmAsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldEJyZWFrZG93blRpbWVzZXJpZXMobW9uaXRvcmluZ01ldHJpY0lkLCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QnJlYWtkb3duVGltZXNlcmllcyhtb25pdG9yaW5nTWV0cmljSWQsIHt9LCBxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9kYXRhL3YxL21vbml0b3JpbmcvbWV0cmljcy8ke21vbml0b3JpbmdNZXRyaWNJZH0vYnJlYWtkb3duLXRpbWVzZXJpZXNgLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRIaXN0b2dyYW1UaW1lc2VyaWVzKG1vbml0b3JpbmdIaXN0b2dyYW1NZXRyaWNJZCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEhpc3RvZ3JhbVRpbWVzZXJpZXMobW9uaXRvcmluZ0hpc3RvZ3JhbU1ldHJpY0lkLCB7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvZGF0YS92MS9tb25pdG9yaW5nL21ldHJpY3MvJHttb25pdG9yaW5nSGlzdG9ncmFtTWV0cmljSWR9L2hpc3RvZ3JhbS10aW1lc2VyaWVzYCwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgZ2V0VGltZXNlcmllcyhtb25pdG9yaW5nTWV0cmljSWQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGlzUmVxdWVzdE9wdGlvbnMocXVlcnkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRUaW1lc2VyaWVzKG1vbml0b3JpbmdNZXRyaWNJZCwge30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL2RhdGEvdjEvbW9uaXRvcmluZy9tZXRyaWNzLyR7bW9uaXRvcmluZ01ldHJpY0lkfS90aW1lc2VyaWVzYCwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRyaWNzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/monitoring/metrics.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/monitoring/monitoring.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/monitoring/monitoring.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Monitoring: () => (/* binding */ Monitoring)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _metrics_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./metrics.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/data/monitoring/metrics.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Monitoring extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor() {\n        super(...arguments);\n        this.metrics = new _metrics_mjs__WEBPACK_IMPORTED_MODULE_1__.Metrics(this._client);\n    }\n    /**\n     * Lists available monitoring dimensions.\n     */\n    listDimensions(options) {\n        return this._client.get('/data/v1/monitoring/dimensions', options);\n    }\n}\nMonitoring.Metrics = _metrics_mjs__WEBPACK_IMPORTED_MODULE_1__.Metrics;\n//# sourceMappingURL=monitoring.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9tb25pdG9yaW5nL21vbml0b3JpbmcubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ29EO0FBQ1I7QUFDSDtBQUNsQyx5QkFBeUIsc0RBQVc7QUFDM0M7QUFDQTtBQUNBLDJCQUEyQixpREFBa0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpREFBTztBQUM1QiIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXHJlc291cmNlc1xcZGF0YVxcbW9uaXRvcmluZ1xcbW9uaXRvcmluZy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgTWV0cmljc0FQSSBmcm9tIFwiLi9tZXRyaWNzLm1qc1wiO1xuaW1wb3J0IHsgTWV0cmljcywgfSBmcm9tIFwiLi9tZXRyaWNzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIE1vbml0b3JpbmcgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubWV0cmljcyA9IG5ldyBNZXRyaWNzQVBJLk1ldHJpY3ModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdHMgYXZhaWxhYmxlIG1vbml0b3JpbmcgZGltZW5zaW9ucy5cbiAgICAgKi9cbiAgICBsaXN0RGltZW5zaW9ucyhvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KCcvZGF0YS92MS9tb25pdG9yaW5nL2RpbWVuc2lvbnMnLCBvcHRpb25zKTtcbiAgICB9XG59XG5Nb25pdG9yaW5nLk1ldHJpY3MgPSBNZXRyaWNzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW9uaXRvcmluZy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/monitoring/monitoring.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/real-time.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/real-time.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RealTime: () => (/* binding */ RealTime)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass RealTime extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Lists available real-time dimensions. This API is now deprecated, please use the\n     * `List Monitoring Dimensions` API.\n     */\n    listDimensions(options) {\n        return this._client.get('/data/v1/realtime/dimensions', options);\n    }\n    /**\n     * Lists available real-time metrics. This API is now deprecated, please use the\n     * `List Monitoring Metrics` API.\n     */\n    listMetrics(options) {\n        return this._client.get('/data/v1/realtime/metrics', options);\n    }\n    retrieveBreakdown(realtimeMetricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.retrieveBreakdown(realtimeMetricId, {}, query);\n        }\n        return this._client.get(`/data/v1/realtime/metrics/${realtimeMetricId}/breakdown`, { query, ...options });\n    }\n    retrieveHistogramTimeseries(realtimeHistogramMetricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.retrieveHistogramTimeseries(realtimeHistogramMetricId, {}, query);\n        }\n        return this._client.get(`/data/v1/realtime/metrics/${realtimeHistogramMetricId}/histogram-timeseries`, {\n            query,\n            ...options,\n        });\n    }\n    retrieveTimeseries(realtimeMetricId, query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.retrieveTimeseries(realtimeMetricId, {}, query);\n        }\n        return this._client.get(`/data/v1/realtime/metrics/${realtimeMetricId}/timeseries`, {\n            query,\n            ...options,\n        });\n    }\n}\n//# sourceMappingURL=real-time.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS9yZWFsLXRpbWUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2lEO0FBQ0M7QUFDM0MsdUJBQXVCLHNEQUFXO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQsWUFBWSwyREFBZ0I7QUFDNUIsOERBQThEO0FBQzlEO0FBQ0EsNkRBQTZELGlCQUFpQixlQUFlLG1CQUFtQjtBQUNoSDtBQUNBLHFFQUFxRTtBQUNyRSxZQUFZLDJEQUFnQjtBQUM1QixpRkFBaUY7QUFDakY7QUFDQSw2REFBNkQsMEJBQTBCO0FBQ3ZGO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxtREFBbUQ7QUFDbkQsWUFBWSwyREFBZ0I7QUFDNUIsK0RBQStEO0FBQy9EO0FBQ0EsNkRBQTZELGlCQUFpQjtBQUM5RTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXHJlc291cmNlc1xcZGF0YVxccmVhbC10aW1lLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBpc1JlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2NvcmUubWpzXCI7XG5leHBvcnQgY2xhc3MgUmVhbFRpbWUgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogTGlzdHMgYXZhaWxhYmxlIHJlYWwtdGltZSBkaW1lbnNpb25zLiBUaGlzIEFQSSBpcyBub3cgZGVwcmVjYXRlZCwgcGxlYXNlIHVzZSB0aGVcbiAgICAgKiBgTGlzdCBNb25pdG9yaW5nIERpbWVuc2lvbnNgIEFQSS5cbiAgICAgKi9cbiAgICBsaXN0RGltZW5zaW9ucyhvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KCcvZGF0YS92MS9yZWFsdGltZS9kaW1lbnNpb25zJywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RzIGF2YWlsYWJsZSByZWFsLXRpbWUgbWV0cmljcy4gVGhpcyBBUEkgaXMgbm93IGRlcHJlY2F0ZWQsIHBsZWFzZSB1c2UgdGhlXG4gICAgICogYExpc3QgTW9uaXRvcmluZyBNZXRyaWNzYCBBUEkuXG4gICAgICovXG4gICAgbGlzdE1ldHJpY3Mob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldCgnL2RhdGEvdjEvcmVhbHRpbWUvbWV0cmljcycsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXRyaWV2ZUJyZWFrZG93bihyZWFsdGltZU1ldHJpY0lkLCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmV0cmlldmVCcmVha2Rvd24ocmVhbHRpbWVNZXRyaWNJZCwge30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL2RhdGEvdjEvcmVhbHRpbWUvbWV0cmljcy8ke3JlYWx0aW1lTWV0cmljSWR9L2JyZWFrZG93bmAsIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIHJldHJpZXZlSGlzdG9ncmFtVGltZXNlcmllcyhyZWFsdGltZUhpc3RvZ3JhbU1ldHJpY0lkLCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmV0cmlldmVIaXN0b2dyYW1UaW1lc2VyaWVzKHJlYWx0aW1lSGlzdG9ncmFtTWV0cmljSWQsIHt9LCBxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9kYXRhL3YxL3JlYWx0aW1lL21ldHJpY3MvJHtyZWFsdGltZUhpc3RvZ3JhbU1ldHJpY0lkfS9oaXN0b2dyYW0tdGltZXNlcmllc2AsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHJpZXZlVGltZXNlcmllcyhyZWFsdGltZU1ldHJpY0lkLCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmV0cmlldmVUaW1lc2VyaWVzKHJlYWx0aW1lTWV0cmljSWQsIHt9LCBxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9kYXRhL3YxL3JlYWx0aW1lL21ldHJpY3MvJHtyZWFsdGltZU1ldHJpY0lkfS90aW1lc2VyaWVzYCwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFsLXRpbWUubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/real-time.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/data/video-views.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/data/video-views.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbridgedVideoViewsBasePage: () => (/* binding */ AbridgedVideoViewsBasePage),\n/* harmony export */   VideoViews: () => (/* binding */ VideoViews)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass VideoViews extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Returns the details of a video view.\n     */\n    retrieve(videoViewId, options) {\n        return this._client.get(`/data/v1/video-views/${videoViewId}`, options);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/data/v1/video-views', AbridgedVideoViewsBasePage, { query, ...options });\n    }\n}\nclass AbridgedVideoViewsBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nVideoViews.AbridgedVideoViewsBasePage = AbridgedVideoViewsBasePage;\n//# sourceMappingURL=video-views.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvZGF0YS92aWRlby12aWV3cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNDO0FBQ0Y7QUFDekMseUJBQXlCLHNEQUFXO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFlBQVk7QUFDcEU7QUFDQSxtQkFBbUI7QUFDbkIsWUFBWSwyREFBZ0I7QUFDNUIsK0JBQStCO0FBQy9CO0FBQ0EsNkZBQTZGLG1CQUFtQjtBQUNoSDtBQUNBO0FBQ08seUNBQXlDLHFEQUFRO0FBQ3hEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXHJlc291cmNlc1xcZGF0YVxcdmlkZW8tdmlld3MubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IEJhc2VQYWdlIH0gZnJvbSBcIi4uLy4uL3BhZ2luYXRpb24ubWpzXCI7XG5leHBvcnQgY2xhc3MgVmlkZW9WaWV3cyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBkZXRhaWxzIG9mIGEgdmlkZW8gdmlldy5cbiAgICAgKi9cbiAgICByZXRyaWV2ZSh2aWRlb1ZpZXdJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL2RhdGEvdjEvdmlkZW8tdmlld3MvJHt2aWRlb1ZpZXdJZH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2RhdGEvdjEvdmlkZW8tdmlld3MnLCBBYnJpZGdlZFZpZGVvVmlld3NCYXNlUGFnZSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQWJyaWRnZWRWaWRlb1ZpZXdzQmFzZVBhZ2UgZXh0ZW5kcyBCYXNlUGFnZSB7XG59XG5WaWRlb1ZpZXdzLkFicmlkZ2VkVmlkZW9WaWV3c0Jhc2VQYWdlID0gQWJyaWRnZWRWaWRlb1ZpZXdzQmFzZVBhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12aWRlby12aWV3cy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/data/video-views.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/jwt.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/jwt.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Jwt: () => (/* binding */ Jwt)\n/* harmony export */ });\n/* harmony import */ var _mux_mux_node_resource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mux/mux-node/resource */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mux/mux-node/_shims/auto/jwt */ \"(rsc)/./node_modules/@mux/mux-node/_shims/auto/jwt-node.mjs\");\n/* harmony import */ var _mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mux/mux-node/util/jwt-types */ \"(rsc)/./node_modules/@mux/mux-node/util/jwt-types.mjs\");\n// File generated from our OpenAPI spec by Stainless.\n\n\n\nclass Jwt extends _mux_mux_node_resource__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates a new token or tokens to be used with a signed Playback ID\n     */\n    async signPlaybackId(playbackId, config = {}) {\n        if ((0,_mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__.isMuxJWTSignOptionsMultiple)(config)) {\n            return this.signPlaybackIdMultipleTypes(playbackId, config);\n        }\n        else {\n            return this.signPlaybackIdSingleType(playbackId, config);\n        }\n    }\n    async signPlaybackIdSingleType(playbackId, config) {\n        const claim = _mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__.TypeClaim[config.type ?? 'video'];\n        if (!claim) {\n            throw new Error(`Invalid signature type: ${config.type}; Expected one of ${Object.keys(_mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__.TypeClaim)}`);\n        }\n        const tokenOptions = {\n            keyid: _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.getSigningKey(this._client, config),\n            subject: playbackId,\n            audience: claim,\n            expiresIn: config.expiration ?? '7d',\n            noTimestamp: true,\n            algorithm: 'RS256',\n        };\n        return _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.sign(config.params ?? {}, await _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.getPrivateKey(this._client, config), tokenOptions);\n    }\n    async signPlaybackIdMultipleTypes(playbackId, config) {\n        const tokens = {};\n        for (const typeOption of config.type) {\n            let type;\n            let params;\n            if (Array.isArray(typeOption)) {\n                [type, params] = typeOption;\n            }\n            else {\n                type = typeOption;\n                params = undefined;\n            }\n            const singleConfig = {\n                ...config,\n                type,\n                params: {\n                    ...config.params,\n                    ...params,\n                },\n            };\n            const token = await this.signPlaybackIdSingleType(playbackId, singleConfig);\n            const tokenKey = _mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__.TypeToken[type];\n            if (tokenKey) {\n                tokens[tokenKey] = token;\n            }\n        }\n        return tokens;\n    }\n    /**\n     * Creates a new token for a license for playing back DRM'd video content\n     */\n    async signDrmLicense(playbackId, config = {}) {\n        const claim = _mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__.TypeClaim[config.type ?? 'drm_license'];\n        if (!claim) {\n            throw new Error(`Invalid signature type: ${config.type}; Expected one of ${Object.keys(_mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__.TypeClaim)}`);\n        }\n        const tokenOptions = {\n            keyid: _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.getSigningKey(this._client, config),\n            subject: playbackId,\n            audience: claim,\n            expiresIn: config.expiration ?? '7d',\n            noTimestamp: true,\n            algorithm: 'RS256',\n        };\n        return _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.sign(config.params ?? {}, await _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.getPrivateKey(this._client, config), tokenOptions);\n    }\n    /**\n     * Creates a new token to be used with a space\n     * @deprecated Mux Real-Time Video (spaces) has been shut down. This function will be removed in the next major version.\n     */\n    async signSpaceId(spaceId, config = {}) {\n        const tokenOptions = {\n            keyid: _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.getSigningKey(this._client, config),\n            subject: spaceId,\n            audience: 'rt',\n            expiresIn: config.expiration ?? '7d',\n            noTimestamp: true,\n            algorithm: 'RS256',\n        };\n        return _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.sign(config.params ?? {}, await _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.getPrivateKey(this._client, config), tokenOptions);\n    }\n    /**\n     * Creates a new token to be used with a signed statistics request\n     */\n    async signViewerCounts(id, config = {}) {\n        const claim = _mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__.DataTypeClaim[config.type ?? 'video'];\n        if (!claim) {\n            throw new Error(`Invalid signature type: ${config.type}; Expected one of ${Object.keys(_mux_mux_node_util_jwt_types__WEBPACK_IMPORTED_MODULE_1__.DataTypeClaim)}`);\n        }\n        const tokenOptions = {\n            keyid: _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.getSigningKey(this._client, config),\n            subject: id,\n            audience: claim,\n            expiresIn: config.expiration ?? '7d',\n            noTimestamp: true,\n            algorithm: 'RS256',\n        };\n        return _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.sign(config.params ?? {}, await _mux_mux_node_shims_auto_jwt__WEBPACK_IMPORTED_MODULE_2__.getPrivateKey(this._client, config), tokenOptions);\n    }\n}\n//# sourceMappingURL=jwt.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvand0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDcUQ7QUFDQTtBQUM0RDtBQUMxRyxrQkFBa0IsK0RBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hELFlBQVkseUZBQTJCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1FQUFTO0FBQy9CO0FBQ0EsdURBQXVELGNBQWMsa0JBQWtCLFlBQVksbUVBQVMsRUFBRTtBQUM5RztBQUNBO0FBQ0EsbUJBQW1CLHVFQUFpQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFRLG9CQUFvQixRQUFRLHVFQUFpQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsNkJBQTZCLG1FQUFTO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRCxzQkFBc0IsbUVBQVM7QUFDL0I7QUFDQSx1REFBdUQsY0FBYyxrQkFBa0IsWUFBWSxtRUFBUyxFQUFFO0FBQzlHO0FBQ0E7QUFDQSxtQkFBbUIsdUVBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOERBQVEsb0JBQW9CLFFBQVEsdUVBQWlCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSxtQkFBbUIsdUVBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOERBQVEsb0JBQW9CLFFBQVEsdUVBQWlCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDLHNCQUFzQix1RUFBYTtBQUNuQztBQUNBLHVEQUF1RCxjQUFjLGtCQUFrQixZQUFZLHVFQUFhLEVBQUU7QUFDbEg7QUFDQTtBQUNBLG1CQUFtQix1RUFBaUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4REFBUSxvQkFBb0IsUUFBUSx1RUFBaUI7QUFDcEU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFxqd3QubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gJ0BtdXgvbXV4LW5vZGUvcmVzb3VyY2UnO1xuaW1wb3J0ICogYXMgand0IGZyb20gJ0BtdXgvbXV4LW5vZGUvX3NoaW1zL2F1dG8vand0JztcbmltcG9ydCB7IFR5cGVDbGFpbSwgRGF0YVR5cGVDbGFpbSwgVHlwZVRva2VuLCBpc011eEpXVFNpZ25PcHRpb25zTXVsdGlwbGUsIH0gZnJvbSAnQG11eC9tdXgtbm9kZS91dGlsL2p3dC10eXBlcyc7XG5leHBvcnQgY2xhc3MgSnd0IGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgdG9rZW4gb3IgdG9rZW5zIHRvIGJlIHVzZWQgd2l0aCBhIHNpZ25lZCBQbGF5YmFjayBJRFxuICAgICAqL1xuICAgIGFzeW5jIHNpZ25QbGF5YmFja0lkKHBsYXliYWNrSWQsIGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIGlmIChpc011eEpXVFNpZ25PcHRpb25zTXVsdGlwbGUoY29uZmlnKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2lnblBsYXliYWNrSWRNdWx0aXBsZVR5cGVzKHBsYXliYWNrSWQsIGNvbmZpZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zaWduUGxheWJhY2tJZFNpbmdsZVR5cGUocGxheWJhY2tJZCwgY29uZmlnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBzaWduUGxheWJhY2tJZFNpbmdsZVR5cGUocGxheWJhY2tJZCwgY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGNsYWltID0gVHlwZUNsYWltW2NvbmZpZy50eXBlID8/ICd2aWRlbyddO1xuICAgICAgICBpZiAoIWNsYWltKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgc2lnbmF0dXJlIHR5cGU6ICR7Y29uZmlnLnR5cGV9OyBFeHBlY3RlZCBvbmUgb2YgJHtPYmplY3Qua2V5cyhUeXBlQ2xhaW0pfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRva2VuT3B0aW9ucyA9IHtcbiAgICAgICAgICAgIGtleWlkOiBqd3QuZ2V0U2lnbmluZ0tleSh0aGlzLl9jbGllbnQsIGNvbmZpZyksXG4gICAgICAgICAgICBzdWJqZWN0OiBwbGF5YmFja0lkLFxuICAgICAgICAgICAgYXVkaWVuY2U6IGNsYWltLFxuICAgICAgICAgICAgZXhwaXJlc0luOiBjb25maWcuZXhwaXJhdGlvbiA/PyAnN2QnLFxuICAgICAgICAgICAgbm9UaW1lc3RhbXA6IHRydWUsXG4gICAgICAgICAgICBhbGdvcml0aG06ICdSUzI1NicsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBqd3Quc2lnbihjb25maWcucGFyYW1zID8/IHt9LCBhd2FpdCBqd3QuZ2V0UHJpdmF0ZUtleSh0aGlzLl9jbGllbnQsIGNvbmZpZyksIHRva2VuT3B0aW9ucyk7XG4gICAgfVxuICAgIGFzeW5jIHNpZ25QbGF5YmFja0lkTXVsdGlwbGVUeXBlcyhwbGF5YmFja0lkLCBjb25maWcpIHtcbiAgICAgICAgY29uc3QgdG9rZW5zID0ge307XG4gICAgICAgIGZvciAoY29uc3QgdHlwZU9wdGlvbiBvZiBjb25maWcudHlwZSkge1xuICAgICAgICAgICAgbGV0IHR5cGU7XG4gICAgICAgICAgICBsZXQgcGFyYW1zO1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodHlwZU9wdGlvbikpIHtcbiAgICAgICAgICAgICAgICBbdHlwZSwgcGFyYW1zXSA9IHR5cGVPcHRpb247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0eXBlID0gdHlwZU9wdGlvbjtcbiAgICAgICAgICAgICAgICBwYXJhbXMgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzaW5nbGVDb25maWcgPSB7XG4gICAgICAgICAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmNvbmZpZy5wYXJhbXMsXG4gICAgICAgICAgICAgICAgICAgIC4uLnBhcmFtcyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHRva2VuID0gYXdhaXQgdGhpcy5zaWduUGxheWJhY2tJZFNpbmdsZVR5cGUocGxheWJhY2tJZCwgc2luZ2xlQ29uZmlnKTtcbiAgICAgICAgICAgIGNvbnN0IHRva2VuS2V5ID0gVHlwZVRva2VuW3R5cGVdO1xuICAgICAgICAgICAgaWYgKHRva2VuS2V5KSB7XG4gICAgICAgICAgICAgICAgdG9rZW5zW3Rva2VuS2V5XSA9IHRva2VuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0b2tlbnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgdG9rZW4gZm9yIGEgbGljZW5zZSBmb3IgcGxheWluZyBiYWNrIERSTSdkIHZpZGVvIGNvbnRlbnRcbiAgICAgKi9cbiAgICBhc3luYyBzaWduRHJtTGljZW5zZShwbGF5YmFja0lkLCBjb25maWcgPSB7fSkge1xuICAgICAgICBjb25zdCBjbGFpbSA9IFR5cGVDbGFpbVtjb25maWcudHlwZSA/PyAnZHJtX2xpY2Vuc2UnXTtcbiAgICAgICAgaWYgKCFjbGFpbSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHNpZ25hdHVyZSB0eXBlOiAke2NvbmZpZy50eXBlfTsgRXhwZWN0ZWQgb25lIG9mICR7T2JqZWN0LmtleXMoVHlwZUNsYWltKX1gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0b2tlbk9wdGlvbnMgPSB7XG4gICAgICAgICAgICBrZXlpZDogand0LmdldFNpZ25pbmdLZXkodGhpcy5fY2xpZW50LCBjb25maWcpLFxuICAgICAgICAgICAgc3ViamVjdDogcGxheWJhY2tJZCxcbiAgICAgICAgICAgIGF1ZGllbmNlOiBjbGFpbSxcbiAgICAgICAgICAgIGV4cGlyZXNJbjogY29uZmlnLmV4cGlyYXRpb24gPz8gJzdkJyxcbiAgICAgICAgICAgIG5vVGltZXN0YW1wOiB0cnVlLFxuICAgICAgICAgICAgYWxnb3JpdGhtOiAnUlMyNTYnLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gand0LnNpZ24oY29uZmlnLnBhcmFtcyA/PyB7fSwgYXdhaXQgand0LmdldFByaXZhdGVLZXkodGhpcy5fY2xpZW50LCBjb25maWcpLCB0b2tlbk9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHRva2VuIHRvIGJlIHVzZWQgd2l0aCBhIHNwYWNlXG4gICAgICogQGRlcHJlY2F0ZWQgTXV4IFJlYWwtVGltZSBWaWRlbyAoc3BhY2VzKSBoYXMgYmVlbiBzaHV0IGRvd24uIFRoaXMgZnVuY3Rpb24gd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2lnblNwYWNlSWQoc3BhY2VJZCwgY29uZmlnID0ge30pIHtcbiAgICAgICAgY29uc3QgdG9rZW5PcHRpb25zID0ge1xuICAgICAgICAgICAga2V5aWQ6IGp3dC5nZXRTaWduaW5nS2V5KHRoaXMuX2NsaWVudCwgY29uZmlnKSxcbiAgICAgICAgICAgIHN1YmplY3Q6IHNwYWNlSWQsXG4gICAgICAgICAgICBhdWRpZW5jZTogJ3J0JyxcbiAgICAgICAgICAgIGV4cGlyZXNJbjogY29uZmlnLmV4cGlyYXRpb24gPz8gJzdkJyxcbiAgICAgICAgICAgIG5vVGltZXN0YW1wOiB0cnVlLFxuICAgICAgICAgICAgYWxnb3JpdGhtOiAnUlMyNTYnLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gand0LnNpZ24oY29uZmlnLnBhcmFtcyA/PyB7fSwgYXdhaXQgand0LmdldFByaXZhdGVLZXkodGhpcy5fY2xpZW50LCBjb25maWcpLCB0b2tlbk9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHRva2VuIHRvIGJlIHVzZWQgd2l0aCBhIHNpZ25lZCBzdGF0aXN0aWNzIHJlcXVlc3RcbiAgICAgKi9cbiAgICBhc3luYyBzaWduVmlld2VyQ291bnRzKGlkLCBjb25maWcgPSB7fSkge1xuICAgICAgICBjb25zdCBjbGFpbSA9IERhdGFUeXBlQ2xhaW1bY29uZmlnLnR5cGUgPz8gJ3ZpZGVvJ107XG4gICAgICAgIGlmICghY2xhaW0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBzaWduYXR1cmUgdHlwZTogJHtjb25maWcudHlwZX07IEV4cGVjdGVkIG9uZSBvZiAke09iamVjdC5rZXlzKERhdGFUeXBlQ2xhaW0pfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRva2VuT3B0aW9ucyA9IHtcbiAgICAgICAgICAgIGtleWlkOiBqd3QuZ2V0U2lnbmluZ0tleSh0aGlzLl9jbGllbnQsIGNvbmZpZyksXG4gICAgICAgICAgICBzdWJqZWN0OiBpZCxcbiAgICAgICAgICAgIGF1ZGllbmNlOiBjbGFpbSxcbiAgICAgICAgICAgIGV4cGlyZXNJbjogY29uZmlnLmV4cGlyYXRpb24gPz8gJzdkJyxcbiAgICAgICAgICAgIG5vVGltZXN0YW1wOiB0cnVlLFxuICAgICAgICAgICAgYWxnb3JpdGhtOiAnUlMyNTYnLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gand0LnNpZ24oY29uZmlnLnBhcmFtcyA/PyB7fSwgYXdhaXQgand0LmdldFByaXZhdGVLZXkodGhpcy5fY2xpZW50LCBjb25maWcpLCB0b2tlbk9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWp3dC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/jwt.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/system/signing-keys.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/system/signing-keys.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SigningKeys: () => (/* binding */ SigningKeys),\n/* harmony export */   SigningKeysBasePage: () => (/* binding */ SigningKeysBasePage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass SigningKeys extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates a new signing key pair. When creating a new signing key, the API will\n     * generate a 2048-bit RSA key-pair and return the private key and a generated\n     * key-id; the public key will be stored at Mux to validate signed tokens.\n     */\n    create(options) {\n        return this._client.post('/system/v1/signing-keys', options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Retrieves the details of a signing key that has previously been created. Supply\n     * the unique signing key ID that was returned from your previous request, and Mux\n     * will return the corresponding signing key information. **The private key is not\n     * returned in this response.**\n     */\n    retrieve(signingKeyId, options) {\n        return this._client.get(`/system/v1/signing-keys/${signingKeyId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/system/v1/signing-keys', SigningKeysBasePage, { query, ...options });\n    }\n    /**\n     * Deletes an existing signing key. Use with caution, as this will invalidate any\n     * existing signatures and no JWTs can be signed using the key again.\n     */\n    delete(signingKeyId, options) {\n        return this._client.delete(`/system/v1/signing-keys/${signingKeyId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n}\nclass SigningKeysBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nSigningKeys.SigningKeysBasePage = SigningKeysBasePage;\n//# sourceMappingURL=signing-keys.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvc3lzdGVtL3NpZ25pbmcta2V5cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNDO0FBQ0Y7QUFDekMsMEJBQTBCLHNEQUFXO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGFBQWE7QUFDeEU7QUFDQSxtQkFBbUI7QUFDbkIsWUFBWSwyREFBZ0I7QUFDNUIsK0JBQStCO0FBQy9CO0FBQ0EseUZBQXlGLG1CQUFtQjtBQUM1RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsYUFBYTtBQUMzRTtBQUNBLHVCQUF1QixvQ0FBb0M7QUFDM0QsU0FBUztBQUNUO0FBQ0E7QUFDTyxrQ0FBa0MscURBQVE7QUFDakQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFxzeXN0ZW1cXHNpZ25pbmcta2V5cy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi9jb3JlLm1qc1wiO1xuaW1wb3J0IHsgQmFzZVBhZ2UgfSBmcm9tIFwiLi4vLi4vcGFnaW5hdGlvbi5tanNcIjtcbmV4cG9ydCBjbGFzcyBTaWduaW5nS2V5cyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHNpZ25pbmcga2V5IHBhaXIuIFdoZW4gY3JlYXRpbmcgYSBuZXcgc2lnbmluZyBrZXksIHRoZSBBUEkgd2lsbFxuICAgICAqIGdlbmVyYXRlIGEgMjA0OC1iaXQgUlNBIGtleS1wYWlyIGFuZCByZXR1cm4gdGhlIHByaXZhdGUga2V5IGFuZCBhIGdlbmVyYXRlZFxuICAgICAqIGtleS1pZDsgdGhlIHB1YmxpYyBrZXkgd2lsbCBiZSBzdG9yZWQgYXQgTXV4IHRvIHZhbGlkYXRlIHNpZ25lZCB0b2tlbnMuXG4gICAgICovXG4gICAgY3JlYXRlKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvc3lzdGVtL3YxL3NpZ25pbmcta2V5cycsIG9wdGlvbnMpLl90aGVuVW53cmFwKChvYmopID0+IG9iai5kYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIHRoZSBkZXRhaWxzIG9mIGEgc2lnbmluZyBrZXkgdGhhdCBoYXMgcHJldmlvdXNseSBiZWVuIGNyZWF0ZWQuIFN1cHBseVxuICAgICAqIHRoZSB1bmlxdWUgc2lnbmluZyBrZXkgSUQgdGhhdCB3YXMgcmV0dXJuZWQgZnJvbSB5b3VyIHByZXZpb3VzIHJlcXVlc3QsIGFuZCBNdXhcbiAgICAgKiB3aWxsIHJldHVybiB0aGUgY29ycmVzcG9uZGluZyBzaWduaW5nIGtleSBpbmZvcm1hdGlvbi4gKipUaGUgcHJpdmF0ZSBrZXkgaXMgbm90XG4gICAgICogcmV0dXJuZWQgaW4gdGhpcyByZXNwb25zZS4qKlxuICAgICAqL1xuICAgIHJldHJpZXZlKHNpZ25pbmdLZXlJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL3N5c3RlbS92MS9zaWduaW5nLWtleXMvJHtzaWduaW5nS2V5SWR9YCwgb3B0aW9ucykuX3RoZW5VbndyYXAoKG9iaikgPT4gb2JqLmRhdGEpO1xuICAgIH1cbiAgICBsaXN0KHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGlzUmVxdWVzdE9wdGlvbnMocXVlcnkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5saXN0KHt9LCBxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCcvc3lzdGVtL3YxL3NpZ25pbmcta2V5cycsIFNpZ25pbmdLZXlzQmFzZVBhZ2UsIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZXMgYW4gZXhpc3Rpbmcgc2lnbmluZyBrZXkuIFVzZSB3aXRoIGNhdXRpb24sIGFzIHRoaXMgd2lsbCBpbnZhbGlkYXRlIGFueVxuICAgICAqIGV4aXN0aW5nIHNpZ25hdHVyZXMgYW5kIG5vIEpXVHMgY2FuIGJlIHNpZ25lZCB1c2luZyB0aGUga2V5IGFnYWluLlxuICAgICAqL1xuICAgIGRlbGV0ZShzaWduaW5nS2V5SWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUoYC9zeXN0ZW0vdjEvc2lnbmluZy1rZXlzLyR7c2lnbmluZ0tleUlkfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IEFjY2VwdDogJyovKicsIC4uLm9wdGlvbnM/LmhlYWRlcnMgfSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFNpZ25pbmdLZXlzQmFzZVBhZ2UgZXh0ZW5kcyBCYXNlUGFnZSB7XG59XG5TaWduaW5nS2V5cy5TaWduaW5nS2V5c0Jhc2VQYWdlID0gU2lnbmluZ0tleXNCYXNlUGFnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25pbmcta2V5cy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/system/signing-keys.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/system/system.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/system/system.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   System: () => (/* binding */ System)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _signing_keys_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./signing-keys.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/system/signing-keys.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass System extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor() {\n        super(...arguments);\n        this.signingKeys = new _signing_keys_mjs__WEBPACK_IMPORTED_MODULE_1__.SigningKeys(this._client);\n    }\n}\nSystem.SigningKeys = _signing_keys_mjs__WEBPACK_IMPORTED_MODULE_1__.SigningKeys;\nSystem.SigningKeysBasePage = _signing_keys_mjs__WEBPACK_IMPORTED_MODULE_1__.SigningKeysBasePage;\n//# sourceMappingURL=system.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvc3lzdGVtL3N5c3RlbS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDaUQ7QUFDSTtBQUNrQjtBQUNoRSxxQkFBcUIsc0RBQVc7QUFDdkM7QUFDQTtBQUNBLCtCQUErQiwwREFBMEI7QUFDekQ7QUFDQTtBQUNBLHFCQUFxQiwwREFBVztBQUNoQyw2QkFBNkIsa0VBQW1CO0FBQ2hEIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFxzeXN0ZW1cXHN5c3RlbS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgU2lnbmluZ0tleXNBUEkgZnJvbSBcIi4vc2lnbmluZy1rZXlzLm1qc1wiO1xuaW1wb3J0IHsgU2lnbmluZ0tleXMsIFNpZ25pbmdLZXlzQmFzZVBhZ2UsIH0gZnJvbSBcIi4vc2lnbmluZy1rZXlzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFN5c3RlbSBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5zaWduaW5nS2V5cyA9IG5ldyBTaWduaW5nS2V5c0FQSS5TaWduaW5nS2V5cyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbn1cblN5c3RlbS5TaWduaW5nS2V5cyA9IFNpZ25pbmdLZXlzO1xuU3lzdGVtLlNpZ25pbmdLZXlzQmFzZVBhZ2UgPSBTaWduaW5nS2V5c0Jhc2VQYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3lzdGVtLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/system/system.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/assets.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/assets.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Assets: () => (/* binding */ Assets),\n/* harmony export */   AssetsBasePage: () => (/* binding */ AssetsBasePage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Assets extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a new Mux Video asset.\n     */\n    create(body, options) {\n        return this._client.post('/video/v1/assets', { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Retrieves the details of an asset that has previously been created. Supply the\n     * unique asset ID that was returned from your previous request, and Mux will\n     * return the corresponding asset information. The same information is returned\n     * when creating an asset.\n     */\n    retrieve(assetId, options) {\n        return this._client.get(`/video/v1/assets/${assetId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Updates the details of an already-created Asset with the provided Asset ID. This\n     * currently supports only the `passthrough` field.\n     */\n    update(assetId, body, options) {\n        return this._client.patch(`/video/v1/assets/${assetId}`, { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/video/v1/assets', AssetsBasePage, { query, ...options });\n    }\n    /**\n     * Deletes a video asset and all its data.\n     */\n    delete(assetId, options) {\n        return this._client.delete(`/video/v1/assets/${assetId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Creates a playback ID that can be used to stream the asset to a viewer.\n     */\n    createPlaybackId(assetId, body, options) {\n        return this._client.post(`/video/v1/assets/${assetId}/playback-ids`, { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Adds an asset track (for example, subtitles, or an alternate audio track) to an\n     * asset. Assets must be in the `ready` state before tracks can be added.\n     */\n    createTrack(assetId, body, options) {\n        return this._client.post(`/video/v1/assets/${assetId}/tracks`, { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Deletes a playback ID, rendering it nonfunctional for viewing an asset's video\n     * content. Please note that deleting the playback ID removes access to the\n     * underlying asset; a viewer who started playback before the playback ID was\n     * deleted may be able to watch the entire video for a limited duration.\n     */\n    deletePlaybackId(assetId, playbackId, options) {\n        return this._client.delete(`/video/v1/assets/${assetId}/playback-ids/${playbackId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Removes a text track from an asset. Audio and video tracks on assets cannot be\n     * removed.\n     */\n    deleteTrack(assetId, trackId, options) {\n        return this._client.delete(`/video/v1/assets/${assetId}/tracks/${trackId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Generates subtitles (captions) for a given audio track. This API can be used for\n     * up to 7 days after an asset is created.\n     */\n    generateSubtitles(assetId, trackId, body, options) {\n        return this._client.post(`/video/v1/assets/${assetId}/tracks/${trackId}/generate-subtitles`, {\n            body,\n            ...options,\n        })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Returns a list of the input objects that were used to create the asset along\n     * with any settings that were applied to each input.\n     */\n    retrieveInputInfo(assetId, options) {\n        return this._client.get(`/video/v1/assets/${assetId}/input-info`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Retrieves information about the specified playback ID.\n     */\n    retrievePlaybackId(assetId, playbackId, options) {\n        return this._client.get(`/video/v1/assets/${assetId}/playback-ids/${playbackId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Allows you to add temporary access to the master (highest-quality) version of\n     * the asset in MP4 format. A URL will be created that can be used to download the\n     * master version for 24 hours. After 24 hours Master Access will revert to \"none\".\n     * This master version is not optimized for web and not meant to be streamed, only\n     * downloaded for purposes like archiving or editing the video offline.\n     */\n    updateMasterAccess(assetId, body, options) {\n        return this._client.put(`/video/v1/assets/${assetId}/master-access`, { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * This method has been deprecated. Please see the\n     * [Static Rendition API](https://www.mux.com/docs/guides/enable-static-mp4-renditions#after-asset-creation).\n     * Allows you to add or remove mp4 support for assets that were created without it.\n     * The values supported are `capped-1080p`, `audio-only`,\n     * `audio-only,capped-1080p`, `standard`(deprecated), and `none`. `none` means that\n     * an asset _does not_ have mp4 support, so submitting a request with `mp4_support`\n     * set to `none` will delete the mp4 assets from the asset in question.\n     */\n    updateMP4Support(assetId, body, options) {\n        return this._client.put(`/video/v1/assets/${assetId}/mp4-support`, { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n}\nclass AssetsBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nAssets.AssetsBasePage = AssetsBasePage;\n//# sourceMappingURL=assets.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/assets.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/delivery-usage.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/delivery-usage.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeliveryReportsPageWithTotal: () => (/* binding */ DeliveryReportsPageWithTotal),\n/* harmony export */   DeliveryUsage: () => (/* binding */ DeliveryUsage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass DeliveryUsage extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/video/v1/delivery-usage', DeliveryReportsPageWithTotal, {\n            query,\n            ...options,\n        });\n    }\n}\nclass DeliveryReportsPageWithTotal extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.PageWithTotal {\n}\nDeliveryUsage.DeliveryReportsPageWithTotal = DeliveryReportsPageWithTotal;\n//# sourceMappingURL=delivery-usage.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvdmlkZW8vZGVsaXZlcnktdXNhZ2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDaUQ7QUFDQztBQUNHO0FBQzlDLDRCQUE0QixzREFBVztBQUM5QyxtQkFBbUI7QUFDbkIsWUFBWSwyREFBZ0I7QUFDNUIsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDTywyQ0FBMkMsMERBQWE7QUFDL0Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFx2aWRlb1xcZGVsaXZlcnktdXNhZ2UubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IFBhZ2VXaXRoVG90YWwgfSBmcm9tIFwiLi4vLi4vcGFnaW5hdGlvbi5tanNcIjtcbmV4cG9ydCBjbGFzcyBEZWxpdmVyeVVzYWdlIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy92aWRlby92MS9kZWxpdmVyeS11c2FnZScsIERlbGl2ZXJ5UmVwb3J0c1BhZ2VXaXRoVG90YWwsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIERlbGl2ZXJ5UmVwb3J0c1BhZ2VXaXRoVG90YWwgZXh0ZW5kcyBQYWdlV2l0aFRvdGFsIHtcbn1cbkRlbGl2ZXJ5VXNhZ2UuRGVsaXZlcnlSZXBvcnRzUGFnZVdpdGhUb3RhbCA9IERlbGl2ZXJ5UmVwb3J0c1BhZ2VXaXRoVG90YWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxpdmVyeS11c2FnZS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/delivery-usage.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/drm-configurations.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/drm-configurations.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRMConfigurations: () => (/* binding */ DRMConfigurations),\n/* harmony export */   DRMConfigurationsBasePage: () => (/* binding */ DRMConfigurationsBasePage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass DRMConfigurations extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieves a single DRM Configuration.\n     */\n    retrieve(drmConfigurationId, options) {\n        return this._client.get(`/video/v1/drm-configurations/${drmConfigurationId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/video/v1/drm-configurations', DRMConfigurationsBasePage, {\n            query,\n            ...options,\n        });\n    }\n}\nclass DRMConfigurationsBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nDRMConfigurations.DRMConfigurationsBasePage = DRMConfigurationsBasePage;\n//# sourceMappingURL=drm-configurations.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvdmlkZW8vZHJtLWNvbmZpZ3VyYXRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2lEO0FBQ0M7QUFDRjtBQUN6QyxnQ0FBZ0Msc0RBQVc7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsbUJBQW1CO0FBQ25GO0FBQ0EsbUJBQW1CO0FBQ25CLFlBQVksMkRBQWdCO0FBQzVCLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ08sd0NBQXdDLHFEQUFRO0FBQ3ZEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXHJlc291cmNlc1xcdmlkZW9cXGRybS1jb25maWd1cmF0aW9ucy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi9jb3JlLm1qc1wiO1xuaW1wb3J0IHsgQmFzZVBhZ2UgfSBmcm9tIFwiLi4vLi4vcGFnaW5hdGlvbi5tanNcIjtcbmV4cG9ydCBjbGFzcyBEUk1Db25maWd1cmF0aW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgYSBzaW5nbGUgRFJNIENvbmZpZ3VyYXRpb24uXG4gICAgICovXG4gICAgcmV0cmlldmUoZHJtQ29uZmlndXJhdGlvbklkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvdmlkZW8vdjEvZHJtLWNvbmZpZ3VyYXRpb25zLyR7ZHJtQ29uZmlndXJhdGlvbklkfWAsIG9wdGlvbnMpLl90aGVuVW53cmFwKChvYmopID0+IG9iai5kYXRhKTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL3ZpZGVvL3YxL2RybS1jb25maWd1cmF0aW9ucycsIERSTUNvbmZpZ3VyYXRpb25zQmFzZVBhZ2UsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIERSTUNvbmZpZ3VyYXRpb25zQmFzZVBhZ2UgZXh0ZW5kcyBCYXNlUGFnZSB7XG59XG5EUk1Db25maWd1cmF0aW9ucy5EUk1Db25maWd1cmF0aW9uc0Jhc2VQYWdlID0gRFJNQ29uZmlndXJhdGlvbnNCYXNlUGFnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRybS1jb25maWd1cmF0aW9ucy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/drm-configurations.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/live-streams.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/live-streams.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LiveStreams: () => (/* binding */ LiveStreams),\n/* harmony export */   LiveStreamsBasePage: () => (/* binding */ LiveStreamsBasePage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass LiveStreams extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates a new live stream. Once created, an encoder can connect to Mux via the\n     * specified stream key and begin streaming to an audience.\n     */\n    create(body, options) {\n        return this._client.post('/video/v1/live-streams', { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Retrieves the details of a live stream that has previously been created. Supply\n     * the unique live stream ID that was returned from your previous request, and Mux\n     * will return the corresponding live stream information. The same information is\n     * returned when creating a live stream.\n     */\n    retrieve(liveStreamId, options) {\n        return this._client.get(`/video/v1/live-streams/${liveStreamId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Updates the parameters of a previously-created live stream. This currently\n     * supports a subset of variables. Supply the live stream ID and the updated\n     * parameters and Mux will return the corresponding live stream information. The\n     * information returned will be the same after update as for subsequent get live\n     * stream requests.\n     */\n    update(liveStreamId, body, options) {\n        return this._client.patch(`/video/v1/live-streams/${liveStreamId}`, { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/video/v1/live-streams', LiveStreamsBasePage, { query, ...options });\n    }\n    /**\n     * Deletes a live stream from the current environment. If the live stream is\n     * currently active and being streamed to, ingest will be terminated and the\n     * encoder will be disconnected.\n     */\n    delete(liveStreamId, options) {\n        return this._client.delete(`/video/v1/live-streams/${liveStreamId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * (Optional) End the live stream recording immediately instead of waiting for the\n     * reconnect_window. `EXT-X-ENDLIST` tag is added to the HLS manifest which\n     * notifies the player that this live stream is over.\n     *\n     * Mux does not close the encoder connection immediately. Encoders are often\n     * configured to re-establish connections immediately which would result in a new\n     * recorded asset. For this reason, Mux waits for 60s before closing the connection\n     * with the encoder. This 60s timeframe is meant to give encoder operators a chance\n     * to disconnect from their end.\n     */\n    complete(liveStreamId, options) {\n        return this._client.put(`/video/v1/live-streams/${liveStreamId}/complete`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Create a new playback ID for this live stream, through which a viewer can watch\n     * the streamed content of the live stream.\n     */\n    createPlaybackId(liveStreamId, body, options) {\n        return this._client.post(`/video/v1/live-streams/${liveStreamId}/playback-ids`, {\n            body,\n            ...options,\n        })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Create a simulcast target for the parent live stream. Simulcast target can only\n     * be created when the parent live stream is in idle state. Only one simulcast\n     * target can be created at a time with this API.\n     */\n    createSimulcastTarget(liveStreamId, body, options) {\n        return this._client.post(`/video/v1/live-streams/${liveStreamId}/simulcast-targets`, {\n            body,\n            ...options,\n        })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Deletes the playback ID for the live stream. This will not disable ingest (as\n     * the live stream still exists). New attempts to play back the live stream will\n     * fail immediately. However, current viewers will be able to continue watching the\n     * stream for some period of time.\n     */\n    deletePlaybackId(liveStreamId, playbackId, options) {\n        return this._client.delete(`/video/v1/live-streams/${liveStreamId}/playback-ids/${playbackId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Delete the simulcast target using the simulcast target ID returned when creating\n     * the simulcast target. Simulcast Target can only be deleted when the parent live\n     * stream is in idle state.\n     */\n    deleteSimulcastTarget(liveStreamId, simulcastTargetId, options) {\n        return this._client.delete(`/video/v1/live-streams/${liveStreamId}/simulcast-targets/${simulcastTargetId}`, { ...options, headers: { Accept: '*/*', ...options?.headers } });\n    }\n    /**\n     * Disables a live stream, making it reject incoming RTMP streams until re-enabled.\n     * The API also ends the live stream recording immediately when active. Ending the\n     * live stream recording adds the `EXT-X-ENDLIST` tag to the HLS manifest which\n     * notifies the player that this live stream is over.\n     *\n     * Mux also closes the encoder connection immediately. Any attempt from the encoder\n     * to re-establish connection will fail till the live stream is re-enabled.\n     */\n    disable(liveStreamId, options) {\n        return this._client.put(`/video/v1/live-streams/${liveStreamId}/disable`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Enables a live stream, allowing it to accept an incoming RTMP stream.\n     */\n    enable(liveStreamId, options) {\n        return this._client.put(`/video/v1/live-streams/${liveStreamId}/enable`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Reset a live stream key if you want to immediately stop the current stream key\n     * from working and create a new stream key that can be used for future broadcasts.\n     */\n    resetStreamKey(liveStreamId, options) {\n        return this._client.post(`/video/v1/live-streams/${liveStreamId}/reset-stream-key`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Fetches information about a live stream's playback ID, through which a viewer\n     * can watch the streamed content from this live stream.\n     */\n    retrievePlaybackId(liveStreamId, playbackId, options) {\n        return this._client.get(`/video/v1/live-streams/${liveStreamId}/playback-ids/${playbackId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Retrieves the details of the simulcast target created for the parent live\n     * stream. Supply the unique live stream ID and simulcast target ID that was\n     * returned in the response of create simulcast target request, and Mux will return\n     * the corresponding information.\n     */\n    retrieveSimulcastTarget(liveStreamId, simulcastTargetId, options) {\n        return this._client.get(`/video/v1/live-streams/${liveStreamId}/simulcast-targets/${simulcastTargetId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Configures a live stream to receive embedded closed captions. The resulting\n     * Asset's subtitle text track will have `closed_captions: true` set.\n     */\n    updateEmbeddedSubtitles(liveStreamId, body, options) {\n        return this._client.put(`/video/v1/live-streams/${liveStreamId}/embedded-subtitles`, {\n            body,\n            ...options,\n        })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Updates a live stream's automatic-speech-recognition-generated subtitle\n     * configuration. Automatic speech recognition subtitles can be removed by sending\n     * an empty array in the request payload.\n     */\n    updateGeneratedSubtitles(liveStreamId, body, options) {\n        return this._client.put(`/video/v1/live-streams/${liveStreamId}/generated-subtitles`, {\n            body,\n            ...options,\n        })._thenUnwrap((obj) => obj.data);\n    }\n}\nclass LiveStreamsBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nLiveStreams.LiveStreamsBasePage = LiveStreamsBasePage;\n//# sourceMappingURL=live-streams.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/live-streams.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/playback-ids.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/playback-ids.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PlaybackIDs: () => (/* binding */ PlaybackIDs)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass PlaybackIDs extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieves the Identifier of the Asset or Live Stream associated with the\n     * Playback ID.\n     */\n    retrieve(playbackId, options) {\n        return this._client.get(`/video/v1/playback-ids/${playbackId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n}\n//# sourceMappingURL=playback-ids.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvdmlkZW8vcGxheWJhY2staWRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2lEO0FBQzFDLDBCQUEwQixzREFBVztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELFdBQVc7QUFDckU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFx2aWRlb1xccGxheWJhY2staWRzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgUGxheWJhY2tJRHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIHRoZSBJZGVudGlmaWVyIG9mIHRoZSBBc3NldCBvciBMaXZlIFN0cmVhbSBhc3NvY2lhdGVkIHdpdGggdGhlXG4gICAgICogUGxheWJhY2sgSUQuXG4gICAgICovXG4gICAgcmV0cmlldmUocGxheWJhY2tJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL3ZpZGVvL3YxL3BsYXliYWNrLWlkcy8ke3BsYXliYWNrSWR9YCwgb3B0aW9ucykuX3RoZW5VbndyYXAoKG9iaikgPT4gb2JqLmRhdGEpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBsYXliYWNrLWlkcy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/playback-ids.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/playback-restrictions.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/playback-restrictions.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PlaybackRestrictions: () => (/* binding */ PlaybackRestrictions),\n/* harmony export */   PlaybackRestrictionsBasePage: () => (/* binding */ PlaybackRestrictionsBasePage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass PlaybackRestrictions extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a new Playback Restriction.\n     */\n    create(body, options) {\n        return this._client.post('/video/v1/playback-restrictions', { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Retrieves a Playback Restriction associated with the unique identifier.\n     */\n    retrieve(playbackRestrictionId, options) {\n        return this._client.get(`/video/v1/playback-restrictions/${playbackRestrictionId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/video/v1/playback-restrictions', PlaybackRestrictionsBasePage, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Deletes a single Playback Restriction.\n     */\n    delete(playbackRestrictionId, options) {\n        return this._client.delete(`/video/v1/playback-restrictions/${playbackRestrictionId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Allows you to modify the list of domains or change how Mux validates playback\n     * requests without the `Referer` HTTP header. The Referrer restriction fully\n     * replaces the old list with this new list of domains.\n     */\n    updateReferrer(playbackRestrictionId, body, options) {\n        return this._client.put(`/video/v1/playback-restrictions/${playbackRestrictionId}/referrer`, {\n            body,\n            ...options,\n        })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Allows you to modify how Mux validates playback requests with different user\n     * agents. Please see\n     * [Using User-Agent HTTP header for validation](https://docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation)\n     * for more details on this feature.\n     */\n    updateUserAgent(playbackRestrictionId, body, options) {\n        return this._client.put(`/video/v1/playback-restrictions/${playbackRestrictionId}/user_agent`, {\n            body,\n            ...options,\n        })._thenUnwrap((obj) => obj.data);\n    }\n}\nclass PlaybackRestrictionsBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nPlaybackRestrictions.PlaybackRestrictionsBasePage = PlaybackRestrictionsBasePage;\n//# sourceMappingURL=playback-restrictions.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvdmlkZW8vcGxheWJhY2stcmVzdHJpY3Rpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2lEO0FBQ0M7QUFDRjtBQUN6QyxtQ0FBbUMsc0RBQVc7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRUFBc0Usa0JBQWtCO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsc0JBQXNCO0FBQ3pGO0FBQ0EsbUJBQW1CO0FBQ25CLFlBQVksMkRBQWdCO0FBQzVCLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLHNCQUFzQjtBQUM1RjtBQUNBLHVCQUF1QixvQ0FBb0M7QUFDM0QsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLHNCQUFzQjtBQUN6RjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsc0JBQXNCO0FBQ3pGO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNPLDJDQUEyQyxxREFBUTtBQUMxRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFx0ZW1wXFxZb3VUdWJlXFxub2RlX21vZHVsZXNcXEBtdXhcXG11eC1ub2RlXFxyZXNvdXJjZXNcXHZpZGVvXFxwbGF5YmFjay1yZXN0cmljdGlvbnMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IEJhc2VQYWdlIH0gZnJvbSBcIi4uLy4uL3BhZ2luYXRpb24ubWpzXCI7XG5leHBvcnQgY2xhc3MgUGxheWJhY2tSZXN0cmljdGlvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IFBsYXliYWNrIFJlc3RyaWN0aW9uLlxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3ZpZGVvL3YxL3BsYXliYWNrLXJlc3RyaWN0aW9ucycsIHsgYm9keSwgLi4ub3B0aW9ucyB9KS5fdGhlblVud3JhcCgob2JqKSA9PiBvYmouZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIFBsYXliYWNrIFJlc3RyaWN0aW9uIGFzc29jaWF0ZWQgd2l0aCB0aGUgdW5pcXVlIGlkZW50aWZpZXIuXG4gICAgICovXG4gICAgcmV0cmlldmUocGxheWJhY2tSZXN0cmljdGlvbklkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvdmlkZW8vdjEvcGxheWJhY2stcmVzdHJpY3Rpb25zLyR7cGxheWJhY2tSZXN0cmljdGlvbklkfWAsIG9wdGlvbnMpLl90aGVuVW53cmFwKChvYmopID0+IG9iai5kYXRhKTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL3ZpZGVvL3YxL3BsYXliYWNrLXJlc3RyaWN0aW9ucycsIFBsYXliYWNrUmVzdHJpY3Rpb25zQmFzZVBhZ2UsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZXMgYSBzaW5nbGUgUGxheWJhY2sgUmVzdHJpY3Rpb24uXG4gICAgICovXG4gICAgZGVsZXRlKHBsYXliYWNrUmVzdHJpY3Rpb25JZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShgL3ZpZGVvL3YxL3BsYXliYWNrLXJlc3RyaWN0aW9ucy8ke3BsYXliYWNrUmVzdHJpY3Rpb25JZH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogeyBBY2NlcHQ6ICcqLyonLCAuLi5vcHRpb25zPy5oZWFkZXJzIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBbGxvd3MgeW91IHRvIG1vZGlmeSB0aGUgbGlzdCBvZiBkb21haW5zIG9yIGNoYW5nZSBob3cgTXV4IHZhbGlkYXRlcyBwbGF5YmFja1xuICAgICAqIHJlcXVlc3RzIHdpdGhvdXQgdGhlIGBSZWZlcmVyYCBIVFRQIGhlYWRlci4gVGhlIFJlZmVycmVyIHJlc3RyaWN0aW9uIGZ1bGx5XG4gICAgICogcmVwbGFjZXMgdGhlIG9sZCBsaXN0IHdpdGggdGhpcyBuZXcgbGlzdCBvZiBkb21haW5zLlxuICAgICAqL1xuICAgIHVwZGF0ZVJlZmVycmVyKHBsYXliYWNrUmVzdHJpY3Rpb25JZCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnB1dChgL3ZpZGVvL3YxL3BsYXliYWNrLXJlc3RyaWN0aW9ucy8ke3BsYXliYWNrUmVzdHJpY3Rpb25JZH0vcmVmZXJyZXJgLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSkuX3RoZW5VbndyYXAoKG9iaikgPT4gb2JqLmRhdGEpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBbGxvd3MgeW91IHRvIG1vZGlmeSBob3cgTXV4IHZhbGlkYXRlcyBwbGF5YmFjayByZXF1ZXN0cyB3aXRoIGRpZmZlcmVudCB1c2VyXG4gICAgICogYWdlbnRzLiBQbGVhc2Ugc2VlXG4gICAgICogW1VzaW5nIFVzZXItQWdlbnQgSFRUUCBoZWFkZXIgZm9yIHZhbGlkYXRpb25dKGh0dHBzOi8vZG9jcy5tdXguY29tL2d1aWRlcy9zZWN1cmUtdmlkZW8tcGxheWJhY2sjdXNpbmctdXNlci1hZ2VudC1odHRwLWhlYWRlci1mb3ItdmFsaWRhdGlvbilcbiAgICAgKiBmb3IgbW9yZSBkZXRhaWxzIG9uIHRoaXMgZmVhdHVyZS5cbiAgICAgKi9cbiAgICB1cGRhdGVVc2VyQWdlbnQocGxheWJhY2tSZXN0cmljdGlvbklkLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucHV0KGAvdmlkZW8vdjEvcGxheWJhY2stcmVzdHJpY3Rpb25zLyR7cGxheWJhY2tSZXN0cmljdGlvbklkfS91c2VyX2FnZW50YCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pLl90aGVuVW53cmFwKChvYmopID0+IG9iai5kYXRhKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUGxheWJhY2tSZXN0cmljdGlvbnNCYXNlUGFnZSBleHRlbmRzIEJhc2VQYWdlIHtcbn1cblBsYXliYWNrUmVzdHJpY3Rpb25zLlBsYXliYWNrUmVzdHJpY3Rpb25zQmFzZVBhZ2UgPSBQbGF5YmFja1Jlc3RyaWN0aW9uc0Jhc2VQYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGxheWJhY2stcmVzdHJpY3Rpb25zLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/playback-restrictions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/transcription-vocabularies.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/transcription-vocabularies.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TranscriptionVocabularies: () => (/* binding */ TranscriptionVocabularies),\n/* harmony export */   TranscriptionVocabulariesBasePage: () => (/* binding */ TranscriptionVocabulariesBasePage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass TranscriptionVocabularies extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a new Transcription Vocabulary.\n     */\n    create(body, options) {\n        return this._client.post('/video/v1/transcription-vocabularies', { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Retrieves the details of a Transcription Vocabulary that has previously been\n     * created. Supply the unique Transcription Vocabulary ID and Mux will return the\n     * corresponding Transcription Vocabulary information. The same information is\n     * returned when creating a Transcription Vocabulary.\n     */\n    retrieve(transcriptionVocabularyId, options) {\n        return this._client.get(`/video/v1/transcription-vocabularies/${transcriptionVocabularyId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Updates the details of a previously-created Transcription Vocabulary. Updates to\n     * Transcription Vocabularies are allowed while associated live streams are active.\n     * However, updates will not be applied to those streams while they are active.\n     */\n    update(transcriptionVocabularyId, body, options) {\n        return this._client.put(`/video/v1/transcription-vocabularies/${transcriptionVocabularyId}`, {\n            body,\n            ...options,\n        })._thenUnwrap((obj) => obj.data);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/video/v1/transcription-vocabularies', TranscriptionVocabulariesBasePage, { query, ...options });\n    }\n    /**\n     * Deletes a Transcription Vocabulary. The Transcription Vocabulary's ID will be\n     * disassociated from any live streams using it. Transcription Vocabularies can be\n     * deleted while associated live streams are active. However, the words and phrases\n     * in the deleted Transcription Vocabulary will remain attached to those streams\n     * while they are active.\n     */\n    delete(transcriptionVocabularyId, options) {\n        return this._client.delete(`/video/v1/transcription-vocabularies/${transcriptionVocabularyId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n}\nclass TranscriptionVocabulariesBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nTranscriptionVocabularies.TranscriptionVocabulariesBasePage = TranscriptionVocabulariesBasePage;\n//# sourceMappingURL=transcription-vocabularies.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvdmlkZW8vdHJhbnNjcmlwdGlvbi12b2NhYnVsYXJpZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDaUQ7QUFDQztBQUNGO0FBQ3pDLHdDQUF3QyxzREFBVztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxrQkFBa0I7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSwwQkFBMEI7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsMEJBQTBCO0FBQ2xHO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxtQkFBbUI7QUFDbkIsWUFBWSwyREFBZ0I7QUFDNUIsK0JBQStCO0FBQy9CO0FBQ0Esb0hBQW9ILG1CQUFtQjtBQUN2STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRUFBMkUsMEJBQTBCO0FBQ3JHO0FBQ0EsdUJBQXVCLG9DQUFvQztBQUMzRCxTQUFTO0FBQ1Q7QUFDQTtBQUNPLGdEQUFnRCxxREFBUTtBQUMvRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFx0ZW1wXFxZb3VUdWJlXFxub2RlX21vZHVsZXNcXEBtdXhcXG11eC1ub2RlXFxyZXNvdXJjZXNcXHZpZGVvXFx0cmFuc2NyaXB0aW9uLXZvY2FidWxhcmllcy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi9jb3JlLm1qc1wiO1xuaW1wb3J0IHsgQmFzZVBhZ2UgfSBmcm9tIFwiLi4vLi4vcGFnaW5hdGlvbi5tanNcIjtcbmV4cG9ydCBjbGFzcyBUcmFuc2NyaXB0aW9uVm9jYWJ1bGFyaWVzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBUcmFuc2NyaXB0aW9uIFZvY2FidWxhcnkuXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvdmlkZW8vdjEvdHJhbnNjcmlwdGlvbi12b2NhYnVsYXJpZXMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSkuX3RoZW5VbndyYXAoKG9iaikgPT4gb2JqLmRhdGEpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIGRldGFpbHMgb2YgYSBUcmFuc2NyaXB0aW9uIFZvY2FidWxhcnkgdGhhdCBoYXMgcHJldmlvdXNseSBiZWVuXG4gICAgICogY3JlYXRlZC4gU3VwcGx5IHRoZSB1bmlxdWUgVHJhbnNjcmlwdGlvbiBWb2NhYnVsYXJ5IElEIGFuZCBNdXggd2lsbCByZXR1cm4gdGhlXG4gICAgICogY29ycmVzcG9uZGluZyBUcmFuc2NyaXB0aW9uIFZvY2FidWxhcnkgaW5mb3JtYXRpb24uIFRoZSBzYW1lIGluZm9ybWF0aW9uIGlzXG4gICAgICogcmV0dXJuZWQgd2hlbiBjcmVhdGluZyBhIFRyYW5zY3JpcHRpb24gVm9jYWJ1bGFyeS5cbiAgICAgKi9cbiAgICByZXRyaWV2ZSh0cmFuc2NyaXB0aW9uVm9jYWJ1bGFyeUlkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvdmlkZW8vdjEvdHJhbnNjcmlwdGlvbi12b2NhYnVsYXJpZXMvJHt0cmFuc2NyaXB0aW9uVm9jYWJ1bGFyeUlkfWAsIG9wdGlvbnMpLl90aGVuVW53cmFwKChvYmopID0+IG9iai5kYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlcyB0aGUgZGV0YWlscyBvZiBhIHByZXZpb3VzbHktY3JlYXRlZCBUcmFuc2NyaXB0aW9uIFZvY2FidWxhcnkuIFVwZGF0ZXMgdG9cbiAgICAgKiBUcmFuc2NyaXB0aW9uIFZvY2FidWxhcmllcyBhcmUgYWxsb3dlZCB3aGlsZSBhc3NvY2lhdGVkIGxpdmUgc3RyZWFtcyBhcmUgYWN0aXZlLlxuICAgICAqIEhvd2V2ZXIsIHVwZGF0ZXMgd2lsbCBub3QgYmUgYXBwbGllZCB0byB0aG9zZSBzdHJlYW1zIHdoaWxlIHRoZXkgYXJlIGFjdGl2ZS5cbiAgICAgKi9cbiAgICB1cGRhdGUodHJhbnNjcmlwdGlvblZvY2FidWxhcnlJZCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnB1dChgL3ZpZGVvL3YxL3RyYW5zY3JpcHRpb24tdm9jYWJ1bGFyaWVzLyR7dHJhbnNjcmlwdGlvblZvY2FidWxhcnlJZH1gLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSkuX3RoZW5VbndyYXAoKG9iaikgPT4gb2JqLmRhdGEpO1xuICAgIH1cbiAgICBsaXN0KHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGlzUmVxdWVzdE9wdGlvbnMocXVlcnkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5saXN0KHt9LCBxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCcvdmlkZW8vdjEvdHJhbnNjcmlwdGlvbi12b2NhYnVsYXJpZXMnLCBUcmFuc2NyaXB0aW9uVm9jYWJ1bGFyaWVzQmFzZVBhZ2UsIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZXMgYSBUcmFuc2NyaXB0aW9uIFZvY2FidWxhcnkuIFRoZSBUcmFuc2NyaXB0aW9uIFZvY2FidWxhcnkncyBJRCB3aWxsIGJlXG4gICAgICogZGlzYXNzb2NpYXRlZCBmcm9tIGFueSBsaXZlIHN0cmVhbXMgdXNpbmcgaXQuIFRyYW5zY3JpcHRpb24gVm9jYWJ1bGFyaWVzIGNhbiBiZVxuICAgICAqIGRlbGV0ZWQgd2hpbGUgYXNzb2NpYXRlZCBsaXZlIHN0cmVhbXMgYXJlIGFjdGl2ZS4gSG93ZXZlciwgdGhlIHdvcmRzIGFuZCBwaHJhc2VzXG4gICAgICogaW4gdGhlIGRlbGV0ZWQgVHJhbnNjcmlwdGlvbiBWb2NhYnVsYXJ5IHdpbGwgcmVtYWluIGF0dGFjaGVkIHRvIHRob3NlIHN0cmVhbXNcbiAgICAgKiB3aGlsZSB0aGV5IGFyZSBhY3RpdmUuXG4gICAgICovXG4gICAgZGVsZXRlKHRyYW5zY3JpcHRpb25Wb2NhYnVsYXJ5SWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUoYC92aWRlby92MS90cmFuc2NyaXB0aW9uLXZvY2FidWxhcmllcy8ke3RyYW5zY3JpcHRpb25Wb2NhYnVsYXJ5SWR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgQWNjZXB0OiAnKi8qJywgLi4ub3B0aW9ucz8uaGVhZGVycyB9LFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgVHJhbnNjcmlwdGlvblZvY2FidWxhcmllc0Jhc2VQYWdlIGV4dGVuZHMgQmFzZVBhZ2Uge1xufVxuVHJhbnNjcmlwdGlvblZvY2FidWxhcmllcy5UcmFuc2NyaXB0aW9uVm9jYWJ1bGFyaWVzQmFzZVBhZ2UgPSBUcmFuc2NyaXB0aW9uVm9jYWJ1bGFyaWVzQmFzZVBhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2NyaXB0aW9uLXZvY2FidWxhcmllcy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/transcription-vocabularies.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/uploads.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/uploads.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Uploads: () => (/* binding */ Uploads),\n/* harmony export */   UploadsBasePage: () => (/* binding */ UploadsBasePage)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Uploads extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates a new direct upload, through which video content can be uploaded for\n     * ingest to Mux.\n     */\n    create(body, options) {\n        return this._client.post('/video/v1/uploads', { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Fetches information about a single direct upload in the current environment.\n     */\n    retrieve(uploadId, options) {\n        return this._client.get(`/video/v1/uploads/${uploadId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/video/v1/uploads', UploadsBasePage, { query, ...options });\n    }\n    /**\n     * Cancels a direct upload and marks it as cancelled. If a pending upload finishes\n     * after this request, no asset will be created. This request will only succeed if\n     * the upload is still in the `waiting` state.\n     */\n    cancel(uploadId, options) {\n        return this._client.put(`/video/v1/uploads/${uploadId}/cancel`, options)._thenUnwrap((obj) => obj.data);\n    }\n}\nclass UploadsBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nUploads.UploadsBasePage = UploadsBasePage;\n//# sourceMappingURL=uploads.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvdmlkZW8vdXBsb2Fkcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNDO0FBQ0Y7QUFDekMsc0JBQXNCLHNEQUFXO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Qsa0JBQWtCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsU0FBUztBQUM5RDtBQUNBLG1CQUFtQjtBQUNuQixZQUFZLDJEQUFnQjtBQUM1QiwrQkFBK0I7QUFDL0I7QUFDQSwrRUFBK0UsbUJBQW1CO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFNBQVM7QUFDOUQ7QUFDQTtBQUNPLDhCQUE4QixxREFBUTtBQUM3QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFx0ZW1wXFxZb3VUdWJlXFxub2RlX21vZHVsZXNcXEBtdXhcXG11eC1ub2RlXFxyZXNvdXJjZXNcXHZpZGVvXFx1cGxvYWRzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBpc1JlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2NvcmUubWpzXCI7XG5pbXBvcnQgeyBCYXNlUGFnZSB9IGZyb20gXCIuLi8uLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFVwbG9hZHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBkaXJlY3QgdXBsb2FkLCB0aHJvdWdoIHdoaWNoIHZpZGVvIGNvbnRlbnQgY2FuIGJlIHVwbG9hZGVkIGZvclxuICAgICAqIGluZ2VzdCB0byBNdXguXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvdmlkZW8vdjEvdXBsb2FkcycsIHsgYm9keSwgLi4ub3B0aW9ucyB9KS5fdGhlblVud3JhcCgob2JqKSA9PiBvYmouZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZldGNoZXMgaW5mb3JtYXRpb24gYWJvdXQgYSBzaW5nbGUgZGlyZWN0IHVwbG9hZCBpbiB0aGUgY3VycmVudCBlbnZpcm9ubWVudC5cbiAgICAgKi9cbiAgICByZXRyaWV2ZSh1cGxvYWRJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL3ZpZGVvL3YxL3VwbG9hZHMvJHt1cGxvYWRJZH1gLCBvcHRpb25zKS5fdGhlblVud3JhcCgob2JqKSA9PiBvYmouZGF0YSk7XG4gICAgfVxuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy92aWRlby92MS91cGxvYWRzJywgVXBsb2Fkc0Jhc2VQYWdlLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYW5jZWxzIGEgZGlyZWN0IHVwbG9hZCBhbmQgbWFya3MgaXQgYXMgY2FuY2VsbGVkLiBJZiBhIHBlbmRpbmcgdXBsb2FkIGZpbmlzaGVzXG4gICAgICogYWZ0ZXIgdGhpcyByZXF1ZXN0LCBubyBhc3NldCB3aWxsIGJlIGNyZWF0ZWQuIFRoaXMgcmVxdWVzdCB3aWxsIG9ubHkgc3VjY2VlZCBpZlxuICAgICAqIHRoZSB1cGxvYWQgaXMgc3RpbGwgaW4gdGhlIGB3YWl0aW5nYCBzdGF0ZS5cbiAgICAgKi9cbiAgICBjYW5jZWwodXBsb2FkSWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wdXQoYC92aWRlby92MS91cGxvYWRzLyR7dXBsb2FkSWR9L2NhbmNlbGAsIG9wdGlvbnMpLl90aGVuVW53cmFwKChvYmopID0+IG9iai5kYXRhKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgVXBsb2Fkc0Jhc2VQYWdlIGV4dGVuZHMgQmFzZVBhZ2Uge1xufVxuVXBsb2Fkcy5VcGxvYWRzQmFzZVBhZ2UgPSBVcGxvYWRzQmFzZVBhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGxvYWRzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/video.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/video.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Video: () => (/* binding */ Video)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _assets_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assets.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/assets.mjs\");\n/* harmony import */ var _delivery_usage_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./delivery-usage.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/delivery-usage.mjs\");\n/* harmony import */ var _drm_configurations_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./drm-configurations.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/drm-configurations.mjs\");\n/* harmony import */ var _live_streams_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./live-streams.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/live-streams.mjs\");\n/* harmony import */ var _playback_ids_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./playback-ids.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/playback-ids.mjs\");\n/* harmony import */ var _playback_restrictions_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./playback-restrictions.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/playback-restrictions.mjs\");\n/* harmony import */ var _transcription_vocabularies_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transcription-vocabularies.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/transcription-vocabularies.mjs\");\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/uploads.mjs\");\n/* harmony import */ var _web_inputs_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web-inputs.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resources/video/web-inputs.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Video extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor() {\n        super(...arguments);\n        this.assets = new _assets_mjs__WEBPACK_IMPORTED_MODULE_1__.Assets(this._client);\n        this.deliveryUsage = new _delivery_usage_mjs__WEBPACK_IMPORTED_MODULE_2__.DeliveryUsage(this._client);\n        this.liveStreams = new _live_streams_mjs__WEBPACK_IMPORTED_MODULE_3__.LiveStreams(this._client);\n        this.playbackIds = new _playback_ids_mjs__WEBPACK_IMPORTED_MODULE_4__.PlaybackIDs(this._client);\n        this.playbackRestrictions = new _playback_restrictions_mjs__WEBPACK_IMPORTED_MODULE_5__.PlaybackRestrictions(this._client);\n        this.transcriptionVocabularies = new _transcription_vocabularies_mjs__WEBPACK_IMPORTED_MODULE_6__.TranscriptionVocabularies(this._client);\n        this.uploads = new _uploads_mjs__WEBPACK_IMPORTED_MODULE_7__.Uploads(this._client);\n        this.webInputs = new _web_inputs_mjs__WEBPACK_IMPORTED_MODULE_8__.WebInputs(this._client);\n        this.drmConfigurations = new _drm_configurations_mjs__WEBPACK_IMPORTED_MODULE_9__.DRMConfigurations(this._client);\n    }\n}\nVideo.Assets = _assets_mjs__WEBPACK_IMPORTED_MODULE_1__.Assets;\nVideo.AssetsBasePage = _assets_mjs__WEBPACK_IMPORTED_MODULE_1__.AssetsBasePage;\nVideo.DeliveryUsage = _delivery_usage_mjs__WEBPACK_IMPORTED_MODULE_2__.DeliveryUsage;\nVideo.DeliveryReportsPageWithTotal = _delivery_usage_mjs__WEBPACK_IMPORTED_MODULE_2__.DeliveryReportsPageWithTotal;\nVideo.LiveStreams = _live_streams_mjs__WEBPACK_IMPORTED_MODULE_3__.LiveStreams;\nVideo.LiveStreamsBasePage = _live_streams_mjs__WEBPACK_IMPORTED_MODULE_3__.LiveStreamsBasePage;\nVideo.PlaybackIDs = _playback_ids_mjs__WEBPACK_IMPORTED_MODULE_4__.PlaybackIDs;\nVideo.PlaybackRestrictions = _playback_restrictions_mjs__WEBPACK_IMPORTED_MODULE_5__.PlaybackRestrictions;\nVideo.PlaybackRestrictionsBasePage = _playback_restrictions_mjs__WEBPACK_IMPORTED_MODULE_5__.PlaybackRestrictionsBasePage;\nVideo.TranscriptionVocabularies = _transcription_vocabularies_mjs__WEBPACK_IMPORTED_MODULE_6__.TranscriptionVocabularies;\nVideo.TranscriptionVocabulariesBasePage = _transcription_vocabularies_mjs__WEBPACK_IMPORTED_MODULE_6__.TranscriptionVocabulariesBasePage;\nVideo.Uploads = _uploads_mjs__WEBPACK_IMPORTED_MODULE_7__.Uploads;\nVideo.UploadsBasePage = _uploads_mjs__WEBPACK_IMPORTED_MODULE_7__.UploadsBasePage;\nVideo.WebInputs = _web_inputs_mjs__WEBPACK_IMPORTED_MODULE_8__.WebInputs;\nVideo.WebInputListResponsesBasePage = _web_inputs_mjs__WEBPACK_IMPORTED_MODULE_8__.WebInputListResponsesBasePage;\nVideo.DRMConfigurations = _drm_configurations_mjs__WEBPACK_IMPORTED_MODULE_9__.DRMConfigurations;\nVideo.DRMConfigurationsBasePage = _drm_configurations_mjs__WEBPACK_IMPORTED_MODULE_9__.DRMConfigurationsBasePage;\n//# sourceMappingURL=video.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvdmlkZW8vdmlkZW8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDaUQ7QUFDUDtBQUNhO0FBQ0U7QUFDMkI7QUFDbkI7QUFDd0I7QUFDcEM7QUFDa0I7QUFDbEI7QUFDSjtBQUNzQjtBQUMyQjtBQUNqQjtBQUNnQztBQUNyRTtBQUNjO0FBQ1Q7QUFDNEI7QUFDdEUsb0JBQW9CLHNEQUFXO0FBQ3RDO0FBQ0E7QUFDQSwwQkFBMEIsK0NBQWdCO0FBQzFDLGlDQUFpQyw4REFBOEI7QUFDL0QsK0JBQStCLDBEQUEwQjtBQUN6RCwrQkFBK0IsMERBQTBCO0FBQ3pELHdDQUF3Qyw0RUFBNEM7QUFDcEYsNkNBQTZDLHNGQUFzRDtBQUNuRywyQkFBMkIsaURBQWtCO0FBQzdDLDZCQUE2QixzREFBc0I7QUFDbkQscUNBQXFDLHNFQUFzQztBQUMzRTtBQUNBO0FBQ0EsZUFBZSwrQ0FBTTtBQUNyQix1QkFBdUIsdURBQWM7QUFDckMsc0JBQXNCLDhEQUFhO0FBQ25DLHFDQUFxQyw2RUFBNEI7QUFDakUsb0JBQW9CLDBEQUFXO0FBQy9CLDRCQUE0QixrRUFBbUI7QUFDL0Msb0JBQW9CLDBEQUFXO0FBQy9CLDZCQUE2Qiw0RUFBb0I7QUFDakQscUNBQXFDLG9GQUE0QjtBQUNqRSxrQ0FBa0Msc0ZBQXlCO0FBQzNELDBDQUEwQyw4RkFBaUM7QUFDM0UsZ0JBQWdCLGlEQUFPO0FBQ3ZCLHdCQUF3Qix5REFBZTtBQUN2QyxrQkFBa0Isc0RBQVM7QUFDM0Isc0NBQXNDLDBFQUE2QjtBQUNuRSwwQkFBMEIsc0VBQWlCO0FBQzNDLGtDQUFrQyw4RUFBeUI7QUFDM0QiLCJzb3VyY2VzIjpbIkQ6XFx0ZW1wXFxZb3VUdWJlXFxub2RlX21vZHVsZXNcXEBtdXhcXG11eC1ub2RlXFxyZXNvdXJjZXNcXHZpZGVvXFx2aWRlby5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgQXNzZXRzQVBJIGZyb20gXCIuL2Fzc2V0cy5tanNcIjtcbmltcG9ydCB7IEFzc2V0cywgQXNzZXRzQmFzZVBhZ2UsIH0gZnJvbSBcIi4vYXNzZXRzLm1qc1wiO1xuaW1wb3J0ICogYXMgRGVsaXZlcnlVc2FnZUFQSSBmcm9tIFwiLi9kZWxpdmVyeS11c2FnZS5tanNcIjtcbmltcG9ydCB7IERlbGl2ZXJ5UmVwb3J0c1BhZ2VXaXRoVG90YWwsIERlbGl2ZXJ5VXNhZ2UsIH0gZnJvbSBcIi4vZGVsaXZlcnktdXNhZ2UubWpzXCI7XG5pbXBvcnQgKiBhcyBEUk1Db25maWd1cmF0aW9uc0FQSSBmcm9tIFwiLi9kcm0tY29uZmlndXJhdGlvbnMubWpzXCI7XG5pbXBvcnQgeyBEUk1Db25maWd1cmF0aW9ucywgRFJNQ29uZmlndXJhdGlvbnNCYXNlUGFnZSwgfSBmcm9tIFwiLi9kcm0tY29uZmlndXJhdGlvbnMubWpzXCI7XG5pbXBvcnQgKiBhcyBMaXZlU3RyZWFtc0FQSSBmcm9tIFwiLi9saXZlLXN0cmVhbXMubWpzXCI7XG5pbXBvcnQgeyBMaXZlU3RyZWFtcywgTGl2ZVN0cmVhbXNCYXNlUGFnZSwgfSBmcm9tIFwiLi9saXZlLXN0cmVhbXMubWpzXCI7XG5pbXBvcnQgKiBhcyBQbGF5YmFja0lEc0FQSSBmcm9tIFwiLi9wbGF5YmFjay1pZHMubWpzXCI7XG5pbXBvcnQgeyBQbGF5YmFja0lEcyB9IGZyb20gXCIuL3BsYXliYWNrLWlkcy5tanNcIjtcbmltcG9ydCAqIGFzIFBsYXliYWNrUmVzdHJpY3Rpb25zQVBJIGZyb20gXCIuL3BsYXliYWNrLXJlc3RyaWN0aW9ucy5tanNcIjtcbmltcG9ydCB7IFBsYXliYWNrUmVzdHJpY3Rpb25zLCBQbGF5YmFja1Jlc3RyaWN0aW9uc0Jhc2VQYWdlLCB9IGZyb20gXCIuL3BsYXliYWNrLXJlc3RyaWN0aW9ucy5tanNcIjtcbmltcG9ydCAqIGFzIFRyYW5zY3JpcHRpb25Wb2NhYnVsYXJpZXNBUEkgZnJvbSBcIi4vdHJhbnNjcmlwdGlvbi12b2NhYnVsYXJpZXMubWpzXCI7XG5pbXBvcnQgeyBUcmFuc2NyaXB0aW9uVm9jYWJ1bGFyaWVzLCBUcmFuc2NyaXB0aW9uVm9jYWJ1bGFyaWVzQmFzZVBhZ2UsIH0gZnJvbSBcIi4vdHJhbnNjcmlwdGlvbi12b2NhYnVsYXJpZXMubWpzXCI7XG5pbXBvcnQgKiBhcyBVcGxvYWRzQVBJIGZyb20gXCIuL3VwbG9hZHMubWpzXCI7XG5pbXBvcnQgeyBVcGxvYWRzLCBVcGxvYWRzQmFzZVBhZ2UsIH0gZnJvbSBcIi4vdXBsb2Fkcy5tanNcIjtcbmltcG9ydCAqIGFzIFdlYklucHV0c0FQSSBmcm9tIFwiLi93ZWItaW5wdXRzLm1qc1wiO1xuaW1wb3J0IHsgV2ViSW5wdXRMaXN0UmVzcG9uc2VzQmFzZVBhZ2UsIFdlYklucHV0cywgfSBmcm9tIFwiLi93ZWItaW5wdXRzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFZpZGVvIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmFzc2V0cyA9IG5ldyBBc3NldHNBUEkuQXNzZXRzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMuZGVsaXZlcnlVc2FnZSA9IG5ldyBEZWxpdmVyeVVzYWdlQVBJLkRlbGl2ZXJ5VXNhZ2UodGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5saXZlU3RyZWFtcyA9IG5ldyBMaXZlU3RyZWFtc0FQSS5MaXZlU3RyZWFtcyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnBsYXliYWNrSWRzID0gbmV3IFBsYXliYWNrSURzQVBJLlBsYXliYWNrSURzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMucGxheWJhY2tSZXN0cmljdGlvbnMgPSBuZXcgUGxheWJhY2tSZXN0cmljdGlvbnNBUEkuUGxheWJhY2tSZXN0cmljdGlvbnModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy50cmFuc2NyaXB0aW9uVm9jYWJ1bGFyaWVzID0gbmV3IFRyYW5zY3JpcHRpb25Wb2NhYnVsYXJpZXNBUEkuVHJhbnNjcmlwdGlvblZvY2FidWxhcmllcyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnVwbG9hZHMgPSBuZXcgVXBsb2Fkc0FQSS5VcGxvYWRzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMud2ViSW5wdXRzID0gbmV3IFdlYklucHV0c0FQSS5XZWJJbnB1dHModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5kcm1Db25maWd1cmF0aW9ucyA9IG5ldyBEUk1Db25maWd1cmF0aW9uc0FQSS5EUk1Db25maWd1cmF0aW9ucyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbn1cblZpZGVvLkFzc2V0cyA9IEFzc2V0cztcblZpZGVvLkFzc2V0c0Jhc2VQYWdlID0gQXNzZXRzQmFzZVBhZ2U7XG5WaWRlby5EZWxpdmVyeVVzYWdlID0gRGVsaXZlcnlVc2FnZTtcblZpZGVvLkRlbGl2ZXJ5UmVwb3J0c1BhZ2VXaXRoVG90YWwgPSBEZWxpdmVyeVJlcG9ydHNQYWdlV2l0aFRvdGFsO1xuVmlkZW8uTGl2ZVN0cmVhbXMgPSBMaXZlU3RyZWFtcztcblZpZGVvLkxpdmVTdHJlYW1zQmFzZVBhZ2UgPSBMaXZlU3RyZWFtc0Jhc2VQYWdlO1xuVmlkZW8uUGxheWJhY2tJRHMgPSBQbGF5YmFja0lEcztcblZpZGVvLlBsYXliYWNrUmVzdHJpY3Rpb25zID0gUGxheWJhY2tSZXN0cmljdGlvbnM7XG5WaWRlby5QbGF5YmFja1Jlc3RyaWN0aW9uc0Jhc2VQYWdlID0gUGxheWJhY2tSZXN0cmljdGlvbnNCYXNlUGFnZTtcblZpZGVvLlRyYW5zY3JpcHRpb25Wb2NhYnVsYXJpZXMgPSBUcmFuc2NyaXB0aW9uVm9jYWJ1bGFyaWVzO1xuVmlkZW8uVHJhbnNjcmlwdGlvblZvY2FidWxhcmllc0Jhc2VQYWdlID0gVHJhbnNjcmlwdGlvblZvY2FidWxhcmllc0Jhc2VQYWdlO1xuVmlkZW8uVXBsb2FkcyA9IFVwbG9hZHM7XG5WaWRlby5VcGxvYWRzQmFzZVBhZ2UgPSBVcGxvYWRzQmFzZVBhZ2U7XG5WaWRlby5XZWJJbnB1dHMgPSBXZWJJbnB1dHM7XG5WaWRlby5XZWJJbnB1dExpc3RSZXNwb25zZXNCYXNlUGFnZSA9IFdlYklucHV0TGlzdFJlc3BvbnNlc0Jhc2VQYWdlO1xuVmlkZW8uRFJNQ29uZmlndXJhdGlvbnMgPSBEUk1Db25maWd1cmF0aW9ucztcblZpZGVvLkRSTUNvbmZpZ3VyYXRpb25zQmFzZVBhZ2UgPSBEUk1Db25maWd1cmF0aW9uc0Jhc2VQYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmlkZW8ubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/video.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/video/web-inputs.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/video/web-inputs.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebInputListResponsesBasePage: () => (/* binding */ WebInputListResponsesBasePage),\n/* harmony export */   WebInputs: () => (/* binding */ WebInputs)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/./node_modules/@mux/mux-node/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass WebInputs extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a new Web Input\n     */\n    create(body, options) {\n        return this._client.post('/video/v1/web-inputs', { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Retrieve a single Web Input's info\n     */\n    retrieve(webInputId, options) {\n        return this._client.get(`/video/v1/web-inputs/${webInputId}`, options)._thenUnwrap((obj) => obj.data);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/video/v1/web-inputs', WebInputListResponsesBasePage, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Deletes a Web Input and all its data\n     */\n    delete(webInputId, options) {\n        return this._client.delete(`/video/v1/web-inputs/${webInputId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    /**\n     * Launches the browsers instance, loads the URL specified, and then starts\n     * streaming to the specified Live Stream.\n     */\n    launch(webInputId, options) {\n        return this._client.put(`/video/v1/web-inputs/${webInputId}/launch`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Reloads the page that a Web Input is displaying.\n     *\n     * Note: Using this when the Web Input is streaming will display the page\n     * reloading.\n     */\n    reload(webInputId, options) {\n        return this._client.put(`/video/v1/web-inputs/${webInputId}/reload`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Ends streaming to the specified Live Stream, and then shuts down the Web Input\n     * browser instance.\n     */\n    shutdown(webInputId, options) {\n        return this._client.put(`/video/v1/web-inputs/${webInputId}/shutdown`, options)._thenUnwrap((obj) => obj.data);\n    }\n    /**\n     * Changes the URL that a Web Input loads when it launches.\n     *\n     * Note: This can only be called when the Web Input is idle.\n     */\n    updateURL(webInputId, body, options) {\n        return this._client.put(`/video/v1/web-inputs/${webInputId}/url`, { body, ...options })._thenUnwrap((obj) => obj.data);\n    }\n}\nclass WebInputListResponsesBasePage extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.BasePage {\n}\nWebInputs.WebInputListResponsesBasePage = WebInputListResponsesBasePage;\n//# sourceMappingURL=web-inputs.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS9yZXNvdXJjZXMvdmlkZW8vd2ViLWlucHV0cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNDO0FBQ0Y7QUFDekMsd0JBQXdCLHNEQUFXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGtCQUFrQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFdBQVc7QUFDbkU7QUFDQSxtQkFBbUI7QUFDbkIsWUFBWSwyREFBZ0I7QUFDNUIsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsV0FBVztBQUN0RTtBQUNBLHVCQUF1QixvQ0FBb0M7QUFDM0QsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxXQUFXO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsV0FBVztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsV0FBVztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxXQUFXLFNBQVMsa0JBQWtCO0FBQzlGO0FBQ0E7QUFDTyw0Q0FBNEMscURBQVE7QUFDM0Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxccmVzb3VyY2VzXFx2aWRlb1xcd2ViLWlucHV0cy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi9jb3JlLm1qc1wiO1xuaW1wb3J0IHsgQmFzZVBhZ2UgfSBmcm9tIFwiLi4vLi4vcGFnaW5hdGlvbi5tanNcIjtcbmV4cG9ydCBjbGFzcyBXZWJJbnB1dHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IFdlYiBJbnB1dFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3ZpZGVvL3YxL3dlYi1pbnB1dHMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSkuX3RoZW5VbndyYXAoKG9iaikgPT4gb2JqLmRhdGEpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZSBhIHNpbmdsZSBXZWIgSW5wdXQncyBpbmZvXG4gICAgICovXG4gICAgcmV0cmlldmUod2ViSW5wdXRJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL3ZpZGVvL3YxL3dlYi1pbnB1dHMvJHt3ZWJJbnB1dElkfWAsIG9wdGlvbnMpLl90aGVuVW53cmFwKChvYmopID0+IG9iai5kYXRhKTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL3ZpZGVvL3YxL3dlYi1pbnB1dHMnLCBXZWJJbnB1dExpc3RSZXNwb25zZXNCYXNlUGFnZSwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlcyBhIFdlYiBJbnB1dCBhbmQgYWxsIGl0cyBkYXRhXG4gICAgICovXG4gICAgZGVsZXRlKHdlYklucHV0SWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUoYC92aWRlby92MS93ZWItaW5wdXRzLyR7d2ViSW5wdXRJZH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogeyBBY2NlcHQ6ICcqLyonLCAuLi5vcHRpb25zPy5oZWFkZXJzIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMYXVuY2hlcyB0aGUgYnJvd3NlcnMgaW5zdGFuY2UsIGxvYWRzIHRoZSBVUkwgc3BlY2lmaWVkLCBhbmQgdGhlbiBzdGFydHNcbiAgICAgKiBzdHJlYW1pbmcgdG8gdGhlIHNwZWNpZmllZCBMaXZlIFN0cmVhbS5cbiAgICAgKi9cbiAgICBsYXVuY2god2ViSW5wdXRJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnB1dChgL3ZpZGVvL3YxL3dlYi1pbnB1dHMvJHt3ZWJJbnB1dElkfS9sYXVuY2hgLCBvcHRpb25zKS5fdGhlblVud3JhcCgob2JqKSA9PiBvYmouZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbG9hZHMgdGhlIHBhZ2UgdGhhdCBhIFdlYiBJbnB1dCBpcyBkaXNwbGF5aW5nLlxuICAgICAqXG4gICAgICogTm90ZTogVXNpbmcgdGhpcyB3aGVuIHRoZSBXZWIgSW5wdXQgaXMgc3RyZWFtaW5nIHdpbGwgZGlzcGxheSB0aGUgcGFnZVxuICAgICAqIHJlbG9hZGluZy5cbiAgICAgKi9cbiAgICByZWxvYWQod2ViSW5wdXRJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnB1dChgL3ZpZGVvL3YxL3dlYi1pbnB1dHMvJHt3ZWJJbnB1dElkfS9yZWxvYWRgLCBvcHRpb25zKS5fdGhlblVud3JhcCgob2JqKSA9PiBvYmouZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVuZHMgc3RyZWFtaW5nIHRvIHRoZSBzcGVjaWZpZWQgTGl2ZSBTdHJlYW0sIGFuZCB0aGVuIHNodXRzIGRvd24gdGhlIFdlYiBJbnB1dFxuICAgICAqIGJyb3dzZXIgaW5zdGFuY2UuXG4gICAgICovXG4gICAgc2h1dGRvd24od2ViSW5wdXRJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnB1dChgL3ZpZGVvL3YxL3dlYi1pbnB1dHMvJHt3ZWJJbnB1dElkfS9zaHV0ZG93bmAsIG9wdGlvbnMpLl90aGVuVW53cmFwKChvYmopID0+IG9iai5kYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlcyB0aGUgVVJMIHRoYXQgYSBXZWIgSW5wdXQgbG9hZHMgd2hlbiBpdCBsYXVuY2hlcy5cbiAgICAgKlxuICAgICAqIE5vdGU6IFRoaXMgY2FuIG9ubHkgYmUgY2FsbGVkIHdoZW4gdGhlIFdlYiBJbnB1dCBpcyBpZGxlLlxuICAgICAqL1xuICAgIHVwZGF0ZVVSTCh3ZWJJbnB1dElkLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucHV0KGAvdmlkZW8vdjEvd2ViLWlucHV0cy8ke3dlYklucHV0SWR9L3VybGAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KS5fdGhlblVud3JhcCgob2JqKSA9PiBvYmouZGF0YSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFdlYklucHV0TGlzdFJlc3BvbnNlc0Jhc2VQYWdlIGV4dGVuZHMgQmFzZVBhZ2Uge1xufVxuV2ViSW5wdXRzLldlYklucHV0TGlzdFJlc3BvbnNlc0Jhc2VQYWdlID0gV2ViSW5wdXRMaXN0UmVzcG9uc2VzQmFzZVBhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWItaW5wdXRzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/video/web-inputs.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/resources/webhooks.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@mux/mux-node/resources/webhooks.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Webhooks: () => (/* binding */ Webhooks)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/./node_modules/@mux/mux-node/resource.mjs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _mux_mux_node_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mux/mux-node/core */ \"(rsc)/./node_modules/@mux/mux-node/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Webhooks extends _resource_mjs__WEBPACK_IMPORTED_MODULE_1__.APIResource {\n    /**\n     * Validates that the given payload was sent by Mux and parses the payload\n     */\n    unwrap(body, headers, secret = this._client.webhookSecret) {\n        this.verifySignature(body, headers, secret);\n        const traverse = (value) => {\n            if (Array.isArray(value)) {\n                return value.map(traverse);\n            }\n            if (value !== null && typeof value === 'object') {\n                // Mux's webhook event types differ from the normal API calls as instead of an ISO 8601 string\n                // we return { nanos: 123456, second: 1234 }. We transform those objects into ISO 8601 strings\n                // to conform to the normal api call types.\n                if ('nanos' in value && 'seconds' in value) {\n                    const timeObject = value;\n                    const date = new Date((timeObject.nanos + timeObject.seconds * 1e6) / 1e3);\n                    return date.toISOString();\n                }\n                return Object.fromEntries(Object.entries(value).map(([key, subValue]) => {\n                    return [key, traverse(subValue)];\n                }));\n            }\n            return value;\n        };\n        return traverse(JSON.parse(body));\n    }\n    parseHeader(header, scheme) {\n        if (typeof header !== 'string') {\n            return null;\n        }\n        return header.split(',').reduce((accum, item) => {\n            const kv = item.split('=');\n            if (kv[0] === 't') {\n                /* eslint-disable no-param-reassign, prefer-destructuring */\n                accum.timestamp = parseInt(kv[1], 10);\n            }\n            if (kv[0] === scheme && typeof kv[1] === 'string') {\n                accum.signatures.push(kv[1]);\n            }\n            return accum;\n        }, {\n            timestamp: -1,\n            signatures: [],\n        });\n    }\n    /** Make an assertion, if not `true`, then throw. */\n    assert(expr, msg = '') {\n        if (!expr) {\n            throw new Error(msg);\n        }\n    }\n    computeSignature(payload, secret) {\n        return crypto__WEBPACK_IMPORTED_MODULE_0__.createHmac('sha256', secret).update(payload, 'utf8').digest('hex');\n    }\n    /** Compare to array buffers or data views in a way that timing based attacks\n     * cannot gain information about the platform. */\n    timingSafeEqual(a, b) {\n        if (a.byteLength !== b.byteLength) {\n            return false;\n        }\n        if (!(a instanceof DataView)) {\n            a = new DataView(ArrayBuffer.isView(a) ? a.buffer : a);\n        }\n        if (!(b instanceof DataView)) {\n            b = new DataView(ArrayBuffer.isView(b) ? b.buffer : b);\n        }\n        this.assert(a instanceof DataView);\n        this.assert(b instanceof DataView);\n        const length = a.byteLength;\n        let out = 0;\n        let i = -1;\n        while (++i < length) {\n            out |= a.getUint8(i) ^ b.getUint8(i);\n        }\n        return out === 0;\n    }\n    /**\n     * Validates whether or not the webhook payload was sent by Mux.\n     *\n     * If it was not sent by Mux then an error will be raised.\n     */\n    verifySignature(body, headers, secret = this._client.webhookSecret) {\n        if (!secret) {\n            throw new Error(\"The webhook secret must either be set using the env var, MUX_WEBHOOK_SECRET, on the client class, Mux({ webhookSecret: '123' }), or passed to this function\");\n        }\n        const header = (0,_mux_mux_node_core__WEBPACK_IMPORTED_MODULE_2__.getRequiredHeader)(headers, 'mux-signature');\n        if (!header) {\n            throw new Error('Could not find a mux-signature header');\n        }\n        if (typeof body !== 'string') {\n            throw new Error('Webhook body must be passed as the raw JSON string sent from the server (do not parse it first).');\n        }\n        const details = this.parseHeader(header, 'v1');\n        if (!details || details.timestamp === -1) {\n            throw new Error('Unable to extract timestamp and signatures from header');\n        }\n        if (!details.signatures.length) {\n            throw new Error('No v1 signatures found');\n        }\n        const expectedSignature = this.computeSignature(`${details.timestamp}.${body}`, secret);\n        const encoder = new TextEncoder();\n        const signatureFound = !!details.signatures.filter((sig) => this.timingSafeEqual(encoder.encode(sig), encoder.encode(expectedSignature))).length;\n        if (!signatureFound) {\n            throw new Error('No signatures found matching the expected signature for payload.');\n        }\n        const timestampAge = Math.floor(Date.now() / 1000) - details.timestamp;\n        const tolerance = 300; // 5 minutes\n        if (timestampAge > tolerance) {\n            throw new Error('Webhook timestamp is too old');\n        }\n    }\n}\n//# sourceMappingURL=webhooks.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/resources/webhooks.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/uploads.mjs":
/*!************************************************!*\
  !*** ./node_modules/@mux/mux-node/uploads.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createForm: () => (/* binding */ createForm),\n/* harmony export */   fileFromPath: () => (/* reexport safe */ _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.fileFromPath),\n/* harmony export */   isBlobLike: () => (/* binding */ isBlobLike),\n/* harmony export */   isFileLike: () => (/* binding */ isFileLike),\n/* harmony export */   isMultipartBody: () => (/* binding */ isMultipartBody),\n/* harmony export */   isResponseLike: () => (/* binding */ isResponseLike),\n/* harmony export */   isUploadable: () => (/* binding */ isUploadable),\n/* harmony export */   maybeMultipartFormRequestOptions: () => (/* binding */ maybeMultipartFormRequestOptions),\n/* harmony export */   multipartFormRequestOptions: () => (/* binding */ multipartFormRequestOptions),\n/* harmony export */   toFile: () => (/* binding */ toFile)\n/* harmony export */ });\n/* harmony import */ var _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_shims/index.mjs */ \"(rsc)/./node_modules/@mux/mux-node/_shims/index.mjs\");\n\n\nconst isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nconst isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nconst isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || (0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.isFsReadStream)(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nasync function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nconst isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nconst maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return (0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getMultipartRequestOptions)(form, opts);\n};\nconst multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return (0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getMultipartRequestOptions)(form, opts);\n};\nconst createForm = async (body) => {\n    const form = new _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/util/jwt-types.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@mux/mux-node/util/jwt-types.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataTypeClaim: () => (/* binding */ DataTypeClaim),\n/* harmony export */   TypeClaim: () => (/* binding */ TypeClaim),\n/* harmony export */   TypeToken: () => (/* binding */ TypeToken),\n/* harmony export */   isMuxJWTSignOptionsMultiple: () => (/* binding */ isMuxJWTSignOptionsMultiple)\n/* harmony export */ });\nvar TypeClaim;\n(function (TypeClaim) {\n    TypeClaim[\"video\"] = \"v\";\n    TypeClaim[\"thumbnail\"] = \"t\";\n    TypeClaim[\"gif\"] = \"g\";\n    TypeClaim[\"storyboard\"] = \"s\";\n    TypeClaim[\"stats\"] = \"playback_id\";\n    TypeClaim[\"drm_license\"] = \"d\";\n})(TypeClaim || (TypeClaim = {}));\nvar TypeToken;\n(function (TypeToken) {\n    TypeToken[\"video\"] = \"playback-token\";\n    TypeToken[\"thumbnail\"] = \"thumbnail-token\";\n    TypeToken[\"storyboard\"] = \"storyboard-token\";\n    TypeToken[\"drm_license\"] = \"drm-token\";\n    TypeToken[\"gif\"] = \"gif-token\";\n    TypeToken[\"stats\"] = \"stats-token\";\n})(TypeToken || (TypeToken = {}));\nconst isMuxJWTSignOptionsMultiple = (config) => Array.isArray(config.type);\nvar DataTypeClaim;\n(function (DataTypeClaim) {\n    DataTypeClaim[\"video\"] = \"video_id\";\n    DataTypeClaim[\"asset\"] = \"asset_id\";\n    DataTypeClaim[\"playback\"] = \"playback_id\";\n    DataTypeClaim[\"live_stream\"] = \"live_stream_id\";\n})(DataTypeClaim || (DataTypeClaim = {}));\n//# sourceMappingURL=jwt-types.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS91dGlsL2p3dC10eXBlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QjtBQUN4QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4QkFBOEI7QUFDeEI7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQztBQUN2QyIsInNvdXJjZXMiOlsiRDpcXHRlbXBcXFlvdVR1YmVcXG5vZGVfbW9kdWxlc1xcQG11eFxcbXV4LW5vZGVcXHV0aWxcXGp3dC10eXBlcy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBUeXBlQ2xhaW07XG4oZnVuY3Rpb24gKFR5cGVDbGFpbSkge1xuICAgIFR5cGVDbGFpbVtcInZpZGVvXCJdID0gXCJ2XCI7XG4gICAgVHlwZUNsYWltW1widGh1bWJuYWlsXCJdID0gXCJ0XCI7XG4gICAgVHlwZUNsYWltW1wiZ2lmXCJdID0gXCJnXCI7XG4gICAgVHlwZUNsYWltW1wic3Rvcnlib2FyZFwiXSA9IFwic1wiO1xuICAgIFR5cGVDbGFpbVtcInN0YXRzXCJdID0gXCJwbGF5YmFja19pZFwiO1xuICAgIFR5cGVDbGFpbVtcImRybV9saWNlbnNlXCJdID0gXCJkXCI7XG59KShUeXBlQ2xhaW0gfHwgKFR5cGVDbGFpbSA9IHt9KSk7XG5leHBvcnQgdmFyIFR5cGVUb2tlbjtcbihmdW5jdGlvbiAoVHlwZVRva2VuKSB7XG4gICAgVHlwZVRva2VuW1widmlkZW9cIl0gPSBcInBsYXliYWNrLXRva2VuXCI7XG4gICAgVHlwZVRva2VuW1widGh1bWJuYWlsXCJdID0gXCJ0aHVtYm5haWwtdG9rZW5cIjtcbiAgICBUeXBlVG9rZW5bXCJzdG9yeWJvYXJkXCJdID0gXCJzdG9yeWJvYXJkLXRva2VuXCI7XG4gICAgVHlwZVRva2VuW1wiZHJtX2xpY2Vuc2VcIl0gPSBcImRybS10b2tlblwiO1xuICAgIFR5cGVUb2tlbltcImdpZlwiXSA9IFwiZ2lmLXRva2VuXCI7XG4gICAgVHlwZVRva2VuW1wic3RhdHNcIl0gPSBcInN0YXRzLXRva2VuXCI7XG59KShUeXBlVG9rZW4gfHwgKFR5cGVUb2tlbiA9IHt9KSk7XG5leHBvcnQgY29uc3QgaXNNdXhKV1RTaWduT3B0aW9uc011bHRpcGxlID0gKGNvbmZpZykgPT4gQXJyYXkuaXNBcnJheShjb25maWcudHlwZSk7XG5leHBvcnQgdmFyIERhdGFUeXBlQ2xhaW07XG4oZnVuY3Rpb24gKERhdGFUeXBlQ2xhaW0pIHtcbiAgICBEYXRhVHlwZUNsYWltW1widmlkZW9cIl0gPSBcInZpZGVvX2lkXCI7XG4gICAgRGF0YVR5cGVDbGFpbVtcImFzc2V0XCJdID0gXCJhc3NldF9pZFwiO1xuICAgIERhdGFUeXBlQ2xhaW1bXCJwbGF5YmFja1wiXSA9IFwicGxheWJhY2tfaWRcIjtcbiAgICBEYXRhVHlwZUNsYWltW1wibGl2ZV9zdHJlYW1cIl0gPSBcImxpdmVfc3RyZWFtX2lkXCI7XG59KShEYXRhVHlwZUNsYWltIHx8IChEYXRhVHlwZUNsYWltID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWp3dC10eXBlcy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/util/jwt-types.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/util/jwt-util.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@mux/mux-node/util/jwt-util.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64ToUint8Array: () => (/* binding */ base64ToUint8Array),\n/* harmony export */   isKeyLike: () => (/* binding */ isKeyLike),\n/* harmony export */   keyFormatErrorMessage: () => (/* binding */ keyFormatErrorMessage),\n/* harmony export */   pkcs1to8: () => (/* binding */ pkcs1to8),\n/* harmony export */   toPkcs8Pem: () => (/* binding */ toPkcs8Pem),\n/* harmony export */   uint8ArrayToBase64: () => (/* binding */ uint8ArrayToBase64),\n/* harmony export */   unwrapPem: () => (/* binding */ unwrapPem)\n/* harmony export */ });\nfunction isKeyLike(key) {\n    return typeof key === 'object' && key != null && typeof key.type === 'string';\n}\nconst keyFormatErrorMessage = 'Specified signing key must be either a valid PKCS1 or PKCS8 PEM string, a base64 encoded PEM, or an imported key';\nfunction base64ToUint8Array(base64) {\n    const binaryString = atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (var i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n}\nfunction uint8ArrayToBase64(array) {\n    return btoa([...array].map((byte) => String.fromCharCode(byte)).join(''));\n}\nfunction unwrapPem(key) {\n    return base64ToUint8Array(key\n        .trim()\n        .replace(/\\n/gm, '')\n        .replace(/^-----[A-Z ]+-----|-----[A-Z ]+-----$/g, ''));\n}\nfunction toPkcs8Pem(key) {\n    const parts = ['-----BEGIN PRIVATE KEY-----'];\n    const base64 = uint8ArrayToBase64(key);\n    for (let i = 0; i < base64.length; i += 64) {\n        parts.push(base64.substring(i, i + 64));\n    }\n    parts.push('-----END PRIVATE KEY-----');\n    return parts.join('\\n');\n}\nconst certAndRsa = Uint8Array.of(0x02, 0x01, 0x00, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00);\n// All of this just to wrap a PKCS1 signature into a form that web crypto\n// can import!\nconst DER = {\n    lengthBytes: (length) => {\n        const result = [];\n        if (length <= 0x7f) {\n            // if the length fits in 7 bits, it's returned as a single byte\n            result.push(length);\n        }\n        else {\n            // otherwise the first byte has a most significant bit of 1\n            // and the remaining 7 bits indicate how many subsequent bytes\n            // represent the length.  For example:\n            //\n            //   82 04 a6 ...\n            //\n            // 82 has a leading 1 bit and the value of the next 7 bits is 2\n            // So the following 2 bytes (04 a6) represent the length 0x04a6 = 1190 bytes\n            // So then the string occupies the next 1190 bytes after a6\n            while (length) {\n                result.push(length & 0xff);\n                length >>>= 8;\n            }\n            result.push(0x80 + result.length);\n        }\n        return result.reverse();\n    },\n    octetString: (octets) => {\n        // In DER an octet string starts with the identifier 04, then the length, then the contents\n        const header = [0x04, ...DER.lengthBytes(octets.byteLength)];\n        const result = new Uint8Array(header.length + octets.length);\n        result.set(header, 0);\n        result.set(octets, header.length);\n        return result;\n    },\n    sequence: (...elements) => {\n        // In DER an sequence starts with the identifier 30, then the length, then the contents\n        const totalElementLength = elements.reduce((len, i) => len + i.byteLength, 0);\n        const header = [0x30, ...DER.lengthBytes(totalElementLength)];\n        const result = new Uint8Array(header.length + totalElementLength);\n        result.set(header, 0);\n        let i = header.length;\n        for (const elem of elements) {\n            result.set(elem, i);\n            i += elem.byteLength;\n        }\n        return result;\n    },\n};\nfunction pkcs1to8(pkcs1) {\n    // For RSA at least, a PKCS8 certificate is just a DER sequence\n    // containing some fields identifying the algorithm as RSA, followed\n    // by an octet string containing the PKCS1 signature\n    return DER.sequence(certAndRsa, DER.octetString(pkcs1));\n}\n//# sourceMappingURL=jwt-util.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS91dGlsL2p3dC11dGlsLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQSxvQkFBb0IseUJBQXlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxcdXRpbFxcand0LXV0aWwubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0tleUxpa2Uoa2V5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBrZXkgPT09ICdvYmplY3QnICYmIGtleSAhPSBudWxsICYmIHR5cGVvZiBrZXkudHlwZSA9PT0gJ3N0cmluZyc7XG59XG5leHBvcnQgY29uc3Qga2V5Rm9ybWF0RXJyb3JNZXNzYWdlID0gJ1NwZWNpZmllZCBzaWduaW5nIGtleSBtdXN0IGJlIGVpdGhlciBhIHZhbGlkIFBLQ1MxIG9yIFBLQ1M4IFBFTSBzdHJpbmcsIGEgYmFzZTY0IGVuY29kZWQgUEVNLCBvciBhbiBpbXBvcnRlZCBrZXknO1xuZXhwb3J0IGZ1bmN0aW9uIGJhc2U2NFRvVWludDhBcnJheShiYXNlNjQpIHtcbiAgICBjb25zdCBiaW5hcnlTdHJpbmcgPSBhdG9iKGJhc2U2NCk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShiaW5hcnlTdHJpbmcubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJpbmFyeVN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgICBieXRlc1tpXSA9IGJpbmFyeVN0cmluZy5jaGFyQ29kZUF0KGkpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gdWludDhBcnJheVRvQmFzZTY0KGFycmF5KSB7XG4gICAgcmV0dXJuIGJ0b2EoWy4uLmFycmF5XS5tYXAoKGJ5dGUpID0+IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZSkpLmpvaW4oJycpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1bndyYXBQZW0oa2V5KSB7XG4gICAgcmV0dXJuIGJhc2U2NFRvVWludDhBcnJheShrZXlcbiAgICAgICAgLnRyaW0oKVxuICAgICAgICAucmVwbGFjZSgvXFxuL2dtLCAnJylcbiAgICAgICAgLnJlcGxhY2UoL14tLS0tLVtBLVogXSstLS0tLXwtLS0tLVtBLVogXSstLS0tLSQvZywgJycpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1BrY3M4UGVtKGtleSkge1xuICAgIGNvbnN0IHBhcnRzID0gWyctLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS0nXTtcbiAgICBjb25zdCBiYXNlNjQgPSB1aW50OEFycmF5VG9CYXNlNjQoa2V5KTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJhc2U2NC5sZW5ndGg7IGkgKz0gNjQpIHtcbiAgICAgICAgcGFydHMucHVzaChiYXNlNjQuc3Vic3RyaW5nKGksIGkgKyA2NCkpO1xuICAgIH1cbiAgICBwYXJ0cy5wdXNoKCctLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tJyk7XG4gICAgcmV0dXJuIHBhcnRzLmpvaW4oJ1xcbicpO1xufVxuY29uc3QgY2VydEFuZFJzYSA9IFVpbnQ4QXJyYXkub2YoMHgwMiwgMHgwMSwgMHgwMCwgMHgzMCwgMHgwZCwgMHgwNiwgMHgwOSwgMHgyYSwgMHg4NiwgMHg0OCwgMHg4NiwgMHhmNywgMHgwZCwgMHgwMSwgMHgwMSwgMHgwMSwgMHgwNSwgMHgwMCk7XG4vLyBBbGwgb2YgdGhpcyBqdXN0IHRvIHdyYXAgYSBQS0NTMSBzaWduYXR1cmUgaW50byBhIGZvcm0gdGhhdCB3ZWIgY3J5cHRvXG4vLyBjYW4gaW1wb3J0IVxuY29uc3QgREVSID0ge1xuICAgIGxlbmd0aEJ5dGVzOiAobGVuZ3RoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgICAgICBpZiAobGVuZ3RoIDw9IDB4N2YpIHtcbiAgICAgICAgICAgIC8vIGlmIHRoZSBsZW5ndGggZml0cyBpbiA3IGJpdHMsIGl0J3MgcmV0dXJuZWQgYXMgYSBzaW5nbGUgYnl0ZVxuICAgICAgICAgICAgcmVzdWx0LnB1c2gobGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIG90aGVyd2lzZSB0aGUgZmlyc3QgYnl0ZSBoYXMgYSBtb3N0IHNpZ25pZmljYW50IGJpdCBvZiAxXG4gICAgICAgICAgICAvLyBhbmQgdGhlIHJlbWFpbmluZyA3IGJpdHMgaW5kaWNhdGUgaG93IG1hbnkgc3Vic2VxdWVudCBieXRlc1xuICAgICAgICAgICAgLy8gcmVwcmVzZW50IHRoZSBsZW5ndGguICBGb3IgZXhhbXBsZTpcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyAgIDgyIDA0IGE2IC4uLlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIDgyIGhhcyBhIGxlYWRpbmcgMSBiaXQgYW5kIHRoZSB2YWx1ZSBvZiB0aGUgbmV4dCA3IGJpdHMgaXMgMlxuICAgICAgICAgICAgLy8gU28gdGhlIGZvbGxvd2luZyAyIGJ5dGVzICgwNCBhNikgcmVwcmVzZW50IHRoZSBsZW5ndGggMHgwNGE2ID0gMTE5MCBieXRlc1xuICAgICAgICAgICAgLy8gU28gdGhlbiB0aGUgc3RyaW5nIG9jY3VwaWVzIHRoZSBuZXh0IDExOTAgYnl0ZXMgYWZ0ZXIgYTZcbiAgICAgICAgICAgIHdoaWxlIChsZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChsZW5ndGggJiAweGZmKTtcbiAgICAgICAgICAgICAgICBsZW5ndGggPj4+PSA4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzdWx0LnB1c2goMHg4MCArIHJlc3VsdC5sZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQucmV2ZXJzZSgpO1xuICAgIH0sXG4gICAgb2N0ZXRTdHJpbmc6IChvY3RldHMpID0+IHtcbiAgICAgICAgLy8gSW4gREVSIGFuIG9jdGV0IHN0cmluZyBzdGFydHMgd2l0aCB0aGUgaWRlbnRpZmllciAwNCwgdGhlbiB0aGUgbGVuZ3RoLCB0aGVuIHRoZSBjb250ZW50c1xuICAgICAgICBjb25zdCBoZWFkZXIgPSBbMHgwNCwgLi4uREVSLmxlbmd0aEJ5dGVzKG9jdGV0cy5ieXRlTGVuZ3RoKV07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KGhlYWRlci5sZW5ndGggKyBvY3RldHMubGVuZ3RoKTtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXIsIDApO1xuICAgICAgICByZXN1bHQuc2V0KG9jdGV0cywgaGVhZGVyLmxlbmd0aCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBzZXF1ZW5jZTogKC4uLmVsZW1lbnRzKSA9PiB7XG4gICAgICAgIC8vIEluIERFUiBhbiBzZXF1ZW5jZSBzdGFydHMgd2l0aCB0aGUgaWRlbnRpZmllciAzMCwgdGhlbiB0aGUgbGVuZ3RoLCB0aGVuIHRoZSBjb250ZW50c1xuICAgICAgICBjb25zdCB0b3RhbEVsZW1lbnRMZW5ndGggPSBlbGVtZW50cy5yZWR1Y2UoKGxlbiwgaSkgPT4gbGVuICsgaS5ieXRlTGVuZ3RoLCAwKTtcbiAgICAgICAgY29uc3QgaGVhZGVyID0gWzB4MzAsIC4uLkRFUi5sZW5ndGhCeXRlcyh0b3RhbEVsZW1lbnRMZW5ndGgpXTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkoaGVhZGVyLmxlbmd0aCArIHRvdGFsRWxlbWVudExlbmd0aCk7XG4gICAgICAgIHJlc3VsdC5zZXQoaGVhZGVyLCAwKTtcbiAgICAgICAgbGV0IGkgPSBoZWFkZXIubGVuZ3RoO1xuICAgICAgICBmb3IgKGNvbnN0IGVsZW0gb2YgZWxlbWVudHMpIHtcbiAgICAgICAgICAgIHJlc3VsdC5zZXQoZWxlbSwgaSk7XG4gICAgICAgICAgICBpICs9IGVsZW0uYnl0ZUxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG59O1xuZXhwb3J0IGZ1bmN0aW9uIHBrY3MxdG84KHBrY3MxKSB7XG4gICAgLy8gRm9yIFJTQSBhdCBsZWFzdCwgYSBQS0NTOCBjZXJ0aWZpY2F0ZSBpcyBqdXN0IGEgREVSIHNlcXVlbmNlXG4gICAgLy8gY29udGFpbmluZyBzb21lIGZpZWxkcyBpZGVudGlmeWluZyB0aGUgYWxnb3JpdGhtIGFzIFJTQSwgZm9sbG93ZWRcbiAgICAvLyBieSBhbiBvY3RldCBzdHJpbmcgY29udGFpbmluZyB0aGUgUEtDUzEgc2lnbmF0dXJlXG4gICAgcmV0dXJuIERFUi5zZXF1ZW5jZShjZXJ0QW5kUnNhLCBERVIub2N0ZXRTdHJpbmcocGtjczEpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWp3dC11dGlsLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/util/jwt-util.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@mux/mux-node/version.mjs":
/*!************************************************!*\
  !*** ./node_modules/@mux/mux-node/version.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nconst VERSION = '11.0.2'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG11eC9tdXgtbm9kZS92ZXJzaW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sMEJBQTBCO0FBQ2pDIiwic291cmNlcyI6WyJEOlxcdGVtcFxcWW91VHViZVxcbm9kZV9tb2R1bGVzXFxAbXV4XFxtdXgtbm9kZVxcdmVyc2lvbi5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFZFUlNJT04gPSAnMTEuMC4yJzsgLy8geC1yZWxlYXNlLXBsZWFzZS12ZXJzaW9uXG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@mux/mux-node/version.mjs\n");

/***/ })

};
;